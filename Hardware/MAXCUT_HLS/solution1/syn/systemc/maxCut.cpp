// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "maxCut.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic maxCut::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic maxCut::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<125> maxCut::ap_ST_fsm_state1 = "1";
const sc_lv<125> maxCut::ap_ST_fsm_state2 = "10";
const sc_lv<125> maxCut::ap_ST_fsm_state3 = "100";
const sc_lv<125> maxCut::ap_ST_fsm_state4 = "1000";
const sc_lv<125> maxCut::ap_ST_fsm_state5 = "10000";
const sc_lv<125> maxCut::ap_ST_fsm_state6 = "100000";
const sc_lv<125> maxCut::ap_ST_fsm_state7 = "1000000";
const sc_lv<125> maxCut::ap_ST_fsm_state8 = "10000000";
const sc_lv<125> maxCut::ap_ST_fsm_state9 = "100000000";
const sc_lv<125> maxCut::ap_ST_fsm_state10 = "1000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state11 = "10000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state12 = "100000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state84 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state85 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state86 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state87 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state88 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state89 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state90 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state91 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state92 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state93 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state94 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state95 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state96 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state97 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state98 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state99 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state100 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state101 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state102 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state103 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state104 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state105 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state106 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state107 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state108 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state109 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state110 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state111 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state112 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state113 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state114 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state115 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state116 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state117 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state118 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state119 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state120 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state121 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state122 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state123 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state124 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<125> maxCut::ap_ST_fsm_state125 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> maxCut::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> maxCut::ap_const_lv1_0 = "0";
const sc_lv<1> maxCut::ap_const_lv1_1 = "1";
const sc_lv<2> maxCut::ap_const_lv2_0 = "00";
const sc_lv<2> maxCut::ap_const_lv2_2 = "10";
const sc_lv<2> maxCut::ap_const_lv2_3 = "11";
const sc_lv<2> maxCut::ap_const_lv2_1 = "1";
const sc_lv<32> maxCut::ap_const_lv32_4 = "100";
const sc_lv<32> maxCut::ap_const_lv32_7B = "1111011";
const sc_lv<32> maxCut::ap_const_lv32_7C = "1111100";
const int maxCut::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> maxCut::ap_const_lv32_2D = "101101";
const sc_lv<32> maxCut::ap_const_lv32_31 = "110001";
const sc_lv<32> maxCut::ap_const_lv32_79 = "1111001";
const sc_lv<32> maxCut::ap_const_lv32_1 = "1";
const sc_lv<32> maxCut::ap_const_lv32_2 = "10";
const sc_lv<32> maxCut::ap_const_lv32_3 = "11";
const sc_lv<32> maxCut::ap_const_lv32_6 = "110";
const sc_lv<32> maxCut::ap_const_lv32_7 = "111";
const sc_lv<32> maxCut::ap_const_lv32_8 = "1000";
const sc_lv<32> maxCut::ap_const_lv32_2B = "101011";
const sc_lv<32> maxCut::ap_const_lv32_2C = "101100";
const sc_lv<32> maxCut::ap_const_lv32_2E = "101110";
const sc_lv<32> maxCut::ap_const_lv32_2F = "101111";
const sc_lv<32> maxCut::ap_const_lv32_30 = "110000";
const sc_lv<32> maxCut::ap_const_lv32_32 = "110010";
const sc_lv<32> maxCut::ap_const_lv32_33 = "110011";
const sc_lv<32> maxCut::ap_const_lv32_34 = "110100";
const sc_lv<32> maxCut::ap_const_lv32_35 = "110101";
const sc_lv<32> maxCut::ap_const_lv32_4C = "1001100";
const sc_lv<32> maxCut::ap_const_lv32_4D = "1001101";
const sc_lv<32> maxCut::ap_const_lv32_4E = "1001110";
const sc_lv<32> maxCut::ap_const_lv32_4F = "1001111";
const sc_lv<32> maxCut::ap_const_lv32_50 = "1010000";
const sc_lv<32> maxCut::ap_const_lv32_73 = "1110011";
const sc_lv<32> maxCut::ap_const_lv32_74 = "1110100";
const sc_lv<32> maxCut::ap_const_lv32_75 = "1110101";
const sc_lv<32> maxCut::ap_const_lv32_77 = "1110111";
const sc_lv<32> maxCut::ap_const_lv32_78 = "1111000";
const sc_lv<32> maxCut::ap_const_lv32_7A = "1111010";
const sc_lv<3> maxCut::ap_const_lv3_0 = "000";
const sc_lv<32> maxCut::ap_const_lv32_5 = "101";
const sc_lv<14> maxCut::ap_const_lv14_4 = "100";
const sc_lv<12> maxCut::ap_const_lv12_0 = "000000000000";
const sc_lv<22> maxCut::ap_const_lv22_0 = "0000000000000000000000";
const sc_lv<14> maxCut::ap_const_lv14_2710 = "10011100010000";
const sc_lv<14> maxCut::ap_const_lv14_0 = "00000000000000";
const sc_lv<32> maxCut::ap_const_lv32_30D40 = "110000110101000000";
const sc_lv<32> maxCut::ap_const_lv32_76 = "1110110";
const sc_lv<24> maxCut::ap_const_lv24_0 = "000000000000000000000000";
const sc_lv<32> maxCut::ap_const_lv32_1F = "11111";
const sc_lv<3> maxCut::ap_const_lv3_1 = "1";
const sc_lv<3> maxCut::ap_const_lv3_5 = "101";
const sc_lv<3> maxCut::ap_const_lv3_6 = "110";
const sc_lv<32> maxCut::ap_const_lv32_A = "1010";
const sc_lv<32> maxCut::ap_const_lv32_1A = "11010";
const sc_lv<32> maxCut::ap_const_lv32_C = "1100";
const sc_lv<32> maxCut::ap_const_lv32_1C = "11100";
const sc_lv<32> maxCut::ap_const_lv32_F = "1111";
const sc_lv<32> maxCut::ap_const_lv32_D = "1101";
const sc_lv<32> maxCut::ap_const_lv32_1D = "11101";
const sc_lv<15> maxCut::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> maxCut::ap_const_lv32_10 = "10000";
const sc_lv<32> maxCut::ap_const_lv32_2710 = "10011100010000";
const sc_lv<32> maxCut::ap_const_lv32_FFFFD8F0 = "11111111111111111101100011110000";
const sc_lv<12> maxCut::ap_const_lv12_9C4 = "100111000100";
const sc_lv<12> maxCut::ap_const_lv12_1 = "1";
const sc_lv<32> maxCut::ap_const_lv32_1E = "11110";
const sc_lv<32> maxCut::ap_const_lv32_1B = "11011";
const sc_lv<65> maxCut::ap_const_lv65_1A36E2EB2 = "110100011011011100010111010110010";
const sc_lv<32> maxCut::ap_const_lv32_40 = "1000000";
const sc_lv<65> maxCut::ap_const_lv65_0 = "00000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<47> maxCut::ap_const_lv47_2711 = "10011100010001";
const sc_lv<47> maxCut::ap_const_lv47_7FFFFFFFD8EF = "11111111111111111111111111111111101100011101111";
const sc_lv<47> maxCut::ap_const_lv47_19999999A = "110011001100110011001100110011010";
const sc_lv<32> maxCut::ap_const_lv32_24 = "100100";
const sc_lv<47> maxCut::ap_const_lv47_0 = "00000000000000000000000000000000000000000000000";
const sc_lv<32> maxCut::ap_const_lv32_7FFF = "111111111111111";
const sc_lv<50> maxCut::ap_const_lv50_1A36E2F = "1101000110110111000101111";
const sc_lv<32> maxCut::ap_const_lv32_26 = "100110";
const sc_lv<32> maxCut::ap_const_lv32_1869F = "11000011010011111";
const sc_lv<65> maxCut::ap_const_lv65_14F8B588F = "101001111100010110101100010001111";
const sc_lv<31> maxCut::ap_const_lv31_1 = "1";
const sc_lv<32> maxCut::ap_const_lv32_FF674270 = "11111111011001110100001001110000";
const sc_lv<8> maxCut::ap_const_lv8_0 = "00000000";
const sc_lv<23> maxCut::ap_const_lv23_2710 = "10011100010000";
const sc_lv<24> maxCut::ap_const_lv24_3E8 = "1111101000";
const bool maxCut::ap_const_boolean_1 = true;

maxCut::maxCut(sc_module_name name) : sc_module(name), mVcdFile(0) {
    maxCut_AXILiteS_s_axi_U = new maxCut_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("maxCut_AXILiteS_s_axi_U");
    maxCut_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    maxCut_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    maxCut_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    maxCut_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    maxCut_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    maxCut_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    maxCut_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    maxCut_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    maxCut_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    maxCut_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    maxCut_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    maxCut_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    maxCut_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    maxCut_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    maxCut_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    maxCut_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    maxCut_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    maxCut_AXILiteS_s_axi_U->ACLK(ap_clk);
    maxCut_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    maxCut_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    maxCut_AXILiteS_s_axi_U->ap_start(ap_start);
    maxCut_AXILiteS_s_axi_U->interrupt(interrupt);
    maxCut_AXILiteS_s_axi_U->ap_ready(ap_ready);
    maxCut_AXILiteS_s_axi_U->ap_done(ap_done);
    maxCut_AXILiteS_s_axi_U->ap_idle(ap_idle);
    matrix_U = new maxCut_matrix("matrix_U");
    matrix_U->clk(ap_clk);
    matrix_U->reset(ap_rst_n_inv);
    matrix_U->address0(matrix_address0);
    matrix_U->ce0(matrix_ce0);
    matrix_U->we0(matrix_we0);
    matrix_U->d0(matrix_d0);
    matrix_U->q0(matrix_q0);
    currentSolution_U = new maxCut_currentSolbkb("currentSolution_U");
    currentSolution_U->clk(ap_clk);
    currentSolution_U->reset(ap_rst_n_inv);
    currentSolution_U->address0(currentSolution_address0);
    currentSolution_U->ce0(currentSolution_ce0);
    currentSolution_U->we0(currentSolution_we0);
    currentSolution_U->d0(currentSolution_d0);
    currentSolution_U->q0(currentSolution_q0);
    maxCut_srem_32ns_cud_U1 = new maxCut_srem_32ns_cud<1,36,32,4,32>("maxCut_srem_32ns_cud_U1");
    maxCut_srem_32ns_cud_U1->clk(ap_clk);
    maxCut_srem_32ns_cud_U1->reset(ap_rst_n_inv);
    maxCut_srem_32ns_cud_U1->start(grp_fu_1066_ap_start);
    maxCut_srem_32ns_cud_U1->done(grp_fu_1066_ap_done);
    maxCut_srem_32ns_cud_U1->din0(grp_fu_1066_p0);
    maxCut_srem_32ns_cud_U1->din1(grp_fu_1066_p1);
    maxCut_srem_32ns_cud_U1->ce(ap_var_for_const0);
    maxCut_srem_32ns_cud_U1->dout(grp_fu_1066_p2);
    maxCut_sdiv_21ns_dEe_U2 = new maxCut_sdiv_21ns_dEe<1,25,21,21,21>("maxCut_sdiv_21ns_dEe_U2");
    maxCut_sdiv_21ns_dEe_U2->clk(ap_clk);
    maxCut_sdiv_21ns_dEe_U2->reset(ap_rst_n_inv);
    maxCut_sdiv_21ns_dEe_U2->start(grp_fu_1312_ap_start);
    maxCut_sdiv_21ns_dEe_U2->done(grp_fu_1312_ap_done);
    maxCut_sdiv_21ns_dEe_U2->din0(grp_fu_1312_p0);
    maxCut_sdiv_21ns_dEe_U2->din1(grp_fu_1312_p1);
    maxCut_sdiv_21ns_dEe_U2->ce(ap_var_for_const0);
    maxCut_sdiv_21ns_dEe_U2->dout(grp_fu_1312_p2);
    maxCut_urem_32ns_eOg_U3 = new maxCut_urem_32ns_eOg<1,36,32,16,16>("maxCut_urem_32ns_eOg_U3");
    maxCut_urem_32ns_eOg_U3->clk(ap_clk);
    maxCut_urem_32ns_eOg_U3->reset(ap_rst_n_inv);
    maxCut_urem_32ns_eOg_U3->start(grp_fu_1609_ap_start);
    maxCut_urem_32ns_eOg_U3->done(grp_fu_1609_ap_done);
    maxCut_urem_32ns_eOg_U3->din0(grp_fu_1609_p0);
    maxCut_urem_32ns_eOg_U3->din1(grp_fu_1609_p1);
    maxCut_urem_32ns_eOg_U3->ce(ap_var_for_const0);
    maxCut_urem_32ns_eOg_U3->dout(grp_fu_1609_p2);
    maxCut_mul_mul_8sfYi_U4 = new maxCut_mul_mul_8sfYi<1,1,8,15,23>("maxCut_mul_mul_8sfYi_U4");
    maxCut_mul_mul_8sfYi_U4->din0(input_stream_V_data_V_0_data_out);
    maxCut_mul_mul_8sfYi_U4->din1(tmp_10_fu_1890_p1);
    maxCut_mul_mul_8sfYi_U4->dout(tmp_10_fu_1890_p2);
    maxCut_mul_mul_14g8j_U5 = new maxCut_mul_mul_14g8j<1,1,14,11,24>("maxCut_mul_mul_14g8j_U5");
    maxCut_mul_mul_14g8j_U5->din0(tmp_29_cast_fu_1896_p0);
    maxCut_mul_mul_14g8j_U5->din1(tmp_29_cast_fu_1896_p1);
    maxCut_mul_mul_14g8j_U5->dout(tmp_29_cast_fu_1896_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Ny1_fu_1321_p0);
    sensitive << ( temperature_load_1_reg_2142 );
    sensitive << ( ap_CS_fsm_state77 );

    SC_METHOD(thread_Ny1_fu_1321_p2);
    sensitive << ( Ny1_fu_1321_p0 );

    SC_METHOD(thread_Ny3_fu_1374_p0);
    sensitive << ( temperature_load_1_reg_2142 );
    sensitive << ( ap_CS_fsm_state78 );

    SC_METHOD(thread_Ny3_fu_1374_p2);
    sensitive << ( Ny3_fu_1374_p0 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state116);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state117);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state118);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state119);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state120);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state121);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state122);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state123);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state124);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state125);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state51);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state52);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state54);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state77);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state78);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state79);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state80);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state81);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state121);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( exitcond2_fu_642_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_data_V_1_state );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_state );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_state );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_state );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_state );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_state );
    sensitive << ( output_stream_V_dest_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( exitcond_fu_1776_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_data_V_1_state );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_state );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_state );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_state );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_state );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_state );
    sensitive << ( output_stream_V_dest_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( exitcond_fu_1776_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_currentSolution_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_18_reg_2048 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( exitcond8_fu_1106_p2 );
    sensitive << ( currentSolution_addr_2_reg_2076 );
    sensitive << ( ap_CS_fsm_state116 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( tmp_s_fu_730_p1 );
    sensitive << ( tmp_13_fu_868_p1 );
    sensitive << ( tmp_21_fu_1118_p1 );
    sensitive << ( tmp_38_fu_1788_p1 );

    SC_METHOD(thread_currentSolution_ce0);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( exitcond8_fu_1106_p2 );
    sensitive << ( ap_CS_fsm_state116 );
    sensitive << ( ap_CS_fsm_state121 );

    SC_METHOD(thread_currentSolution_d0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state116 );
    sensitive << ( tmp_15_cast_cast_fu_859_p3 );
    sensitive << ( tmp_26_fu_1629_p2 );

    SC_METHOD(thread_currentSolution_we0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state116 );
    sensitive << ( exitcond3_fu_741_p2 );
    sensitive << ( tmp_25_fu_1623_p2 );

    SC_METHOD(thread_deltaEnergy_fu_1293_p3);
    sensitive << ( tmp_48_reg_2119 );
    sensitive << ( tmp_50_fu_1263_p1 );
    sensitive << ( neg_ti1_fu_1287_p2 );

    SC_METHOD(thread_exitcond1_fu_600_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( t_V_reg_392 );

    SC_METHOD(thread_exitcond2_fu_642_p2);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_642_p2 );
    sensitive << ( t_V_1_reg_403 );

    SC_METHOD(thread_exitcond3_fu_741_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( p_s_reg_425 );

    SC_METHOD(thread_exitcond8_fu_1106_p2);
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( p_6_reg_459 );

    SC_METHOD(thread_exitcond_fu_1776_p2);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( t_V_2_reg_500 );

    SC_METHOD(thread_fpga_output_V_fu_1882_p3);
    sensitive << ( tmp_85_reg_2279 );
    sensitive << ( neg_ti4_fu_1872_p2 );
    sensitive << ( tmp_89_fu_1878_p1 );

    SC_METHOD(thread_grp_fu_1066_ap_start);
    sensitive << ( tmp_14_fu_878_p2 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_1066_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_43_fu_1026_p2 );
    sensitive << ( tmp_44_fu_1032_p3 );

    SC_METHOD(thread_grp_fu_1066_p1);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_1312_ap_start);
    sensitive << ( ap_CS_fsm_state54 );

    SC_METHOD(thread_grp_fu_1312_p0);
    sensitive << ( deltaEnergy_reg_2131 );
    sensitive << ( ap_CS_fsm_state54 );

    SC_METHOD(thread_grp_fu_1312_p1);
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( tmp_61_fu_1308_p0 );

    SC_METHOD(thread_grp_fu_1609_ap_start);
    sensitive << ( ap_CS_fsm_state81 );

    SC_METHOD(thread_grp_fu_1609_p0);
    sensitive << ( ap_CS_fsm_state81 );
    sensitive << ( tmp_75_fu_1587_p3 );
    sensitive << ( tmp_74_fu_1581_p2 );

    SC_METHOD(thread_grp_fu_1609_p1);
    sensitive << ( ap_CS_fsm_state81 );

    SC_METHOD(thread_grp_fu_515_p4);
    sensitive << ( reg_V );

    SC_METHOD(thread_i_V_1_fu_747_p2);
    sensitive << ( p_s_reg_425 );

    SC_METHOD(thread_i_V_2_fu_1782_p2);
    sensitive << ( t_V_2_reg_500 );

    SC_METHOD(thread_i_V_fu_606_p2);
    sensitive << ( t_V_reg_392 );

    SC_METHOD(thread_icmp_fu_1753_p2);
    sensitive << ( tmp_14_reg_2007 );
    sensitive << ( ap_CS_fsm_state120 );
    sensitive << ( tmp_35_fu_1737_p2 );
    sensitive << ( tmp_84_fu_1743_p4 );

    SC_METHOD(thread_indvarinc1_fu_568_p2);
    sensitive << ( invdar1_reg_381 );

    SC_METHOD(thread_indvarinc2_fu_724_p2);
    sensitive << ( invdar2_reg_414 );

    SC_METHOD(thread_indvarinc_fu_532_p2);
    sensitive << ( invdar_reg_369 );

    SC_METHOD(thread_indvars_iv_next_fu_1770_p2);
    sensitive << ( indvars_iv_reg_436 );

    SC_METHOD(thread_input_stream_TDATA_blk_n);
    sensitive << ( input_stream_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_642_p2 );

    SC_METHOD(thread_input_stream_TREADY);
    sensitive << ( input_stream_V_dest_V_0_state );

    SC_METHOD(thread_input_stream_V_data_V_0_ack_in);
    sensitive << ( input_stream_V_data_V_0_state );

    SC_METHOD(thread_input_stream_V_data_V_0_ack_out);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_642_p2 );

    SC_METHOD(thread_input_stream_V_data_V_0_data_out);
    sensitive << ( input_stream_V_data_V_0_payload_A );
    sensitive << ( input_stream_V_data_V_0_payload_B );
    sensitive << ( input_stream_V_data_V_0_sel );

    SC_METHOD(thread_input_stream_V_data_V_0_load_A);
    sensitive << ( input_stream_V_data_V_0_sel_wr );
    sensitive << ( input_stream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_data_V_0_load_B);
    sensitive << ( input_stream_V_data_V_0_sel_wr );
    sensitive << ( input_stream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_data_V_0_sel);
    sensitive << ( input_stream_V_data_V_0_sel_rd );

    SC_METHOD(thread_input_stream_V_data_V_0_state_cmp_full);
    sensitive << ( input_stream_V_data_V_0_state );

    SC_METHOD(thread_input_stream_V_data_V_0_vld_in);
    sensitive << ( input_stream_TVALID );

    SC_METHOD(thread_input_stream_V_data_V_0_vld_out);
    sensitive << ( input_stream_V_data_V_0_state );

    SC_METHOD(thread_input_stream_V_dest_V_0_ack_in);
    sensitive << ( input_stream_V_dest_V_0_state );

    SC_METHOD(thread_input_stream_V_dest_V_0_ack_out);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_642_p2 );

    SC_METHOD(thread_input_stream_V_dest_V_0_data_out);
    sensitive << ( input_stream_V_dest_V_0_payload_A );
    sensitive << ( input_stream_V_dest_V_0_payload_B );
    sensitive << ( input_stream_V_dest_V_0_sel );

    SC_METHOD(thread_input_stream_V_dest_V_0_load_A);
    sensitive << ( input_stream_V_dest_V_0_sel_wr );
    sensitive << ( input_stream_V_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_dest_V_0_load_B);
    sensitive << ( input_stream_V_dest_V_0_sel_wr );
    sensitive << ( input_stream_V_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_dest_V_0_sel);
    sensitive << ( input_stream_V_dest_V_0_sel_rd );

    SC_METHOD(thread_input_stream_V_dest_V_0_state_cmp_full);
    sensitive << ( input_stream_V_dest_V_0_state );

    SC_METHOD(thread_input_stream_V_dest_V_0_vld_in);
    sensitive << ( input_stream_TVALID );

    SC_METHOD(thread_input_stream_V_dest_V_0_vld_out);
    sensitive << ( input_stream_V_dest_V_0_state );

    SC_METHOD(thread_input_stream_V_id_V_0_ack_in);
    sensitive << ( input_stream_V_id_V_0_state );

    SC_METHOD(thread_input_stream_V_id_V_0_ack_out);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_642_p2 );

    SC_METHOD(thread_input_stream_V_id_V_0_data_out);
    sensitive << ( input_stream_V_id_V_0_payload_A );
    sensitive << ( input_stream_V_id_V_0_payload_B );
    sensitive << ( input_stream_V_id_V_0_sel );

    SC_METHOD(thread_input_stream_V_id_V_0_load_A);
    sensitive << ( input_stream_V_id_V_0_sel_wr );
    sensitive << ( input_stream_V_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_id_V_0_load_B);
    sensitive << ( input_stream_V_id_V_0_sel_wr );
    sensitive << ( input_stream_V_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_id_V_0_sel);
    sensitive << ( input_stream_V_id_V_0_sel_rd );

    SC_METHOD(thread_input_stream_V_id_V_0_state_cmp_full);
    sensitive << ( input_stream_V_id_V_0_state );

    SC_METHOD(thread_input_stream_V_id_V_0_vld_in);
    sensitive << ( input_stream_TVALID );

    SC_METHOD(thread_input_stream_V_id_V_0_vld_out);
    sensitive << ( input_stream_V_id_V_0_state );

    SC_METHOD(thread_input_stream_V_keep_V_0_ack_in);
    sensitive << ( input_stream_V_keep_V_0_state );

    SC_METHOD(thread_input_stream_V_keep_V_0_ack_out);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_642_p2 );

    SC_METHOD(thread_input_stream_V_keep_V_0_data_out);
    sensitive << ( input_stream_V_keep_V_0_payload_A );
    sensitive << ( input_stream_V_keep_V_0_payload_B );
    sensitive << ( input_stream_V_keep_V_0_sel );

    SC_METHOD(thread_input_stream_V_keep_V_0_load_A);
    sensitive << ( input_stream_V_keep_V_0_sel_wr );
    sensitive << ( input_stream_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_keep_V_0_load_B);
    sensitive << ( input_stream_V_keep_V_0_sel_wr );
    sensitive << ( input_stream_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_keep_V_0_sel);
    sensitive << ( input_stream_V_keep_V_0_sel_rd );

    SC_METHOD(thread_input_stream_V_keep_V_0_state_cmp_full);
    sensitive << ( input_stream_V_keep_V_0_state );

    SC_METHOD(thread_input_stream_V_keep_V_0_vld_in);
    sensitive << ( input_stream_TVALID );

    SC_METHOD(thread_input_stream_V_keep_V_0_vld_out);
    sensitive << ( input_stream_V_keep_V_0_state );

    SC_METHOD(thread_input_stream_V_strb_V_0_ack_in);
    sensitive << ( input_stream_V_strb_V_0_state );

    SC_METHOD(thread_input_stream_V_strb_V_0_ack_out);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_642_p2 );

    SC_METHOD(thread_input_stream_V_strb_V_0_data_out);
    sensitive << ( input_stream_V_strb_V_0_payload_A );
    sensitive << ( input_stream_V_strb_V_0_payload_B );
    sensitive << ( input_stream_V_strb_V_0_sel );

    SC_METHOD(thread_input_stream_V_strb_V_0_load_A);
    sensitive << ( input_stream_V_strb_V_0_sel_wr );
    sensitive << ( input_stream_V_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_strb_V_0_load_B);
    sensitive << ( input_stream_V_strb_V_0_sel_wr );
    sensitive << ( input_stream_V_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_strb_V_0_sel);
    sensitive << ( input_stream_V_strb_V_0_sel_rd );

    SC_METHOD(thread_input_stream_V_strb_V_0_state_cmp_full);
    sensitive << ( input_stream_V_strb_V_0_state );

    SC_METHOD(thread_input_stream_V_strb_V_0_vld_in);
    sensitive << ( input_stream_TVALID );

    SC_METHOD(thread_input_stream_V_strb_V_0_vld_out);
    sensitive << ( input_stream_V_strb_V_0_state );

    SC_METHOD(thread_input_stream_V_user_V_0_ack_in);
    sensitive << ( input_stream_V_user_V_0_state );

    SC_METHOD(thread_input_stream_V_user_V_0_ack_out);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_642_p2 );

    SC_METHOD(thread_input_stream_V_user_V_0_data_out);
    sensitive << ( input_stream_V_user_V_0_payload_A );
    sensitive << ( input_stream_V_user_V_0_payload_B );
    sensitive << ( input_stream_V_user_V_0_sel );

    SC_METHOD(thread_input_stream_V_user_V_0_load_A);
    sensitive << ( input_stream_V_user_V_0_sel_wr );
    sensitive << ( input_stream_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_user_V_0_load_B);
    sensitive << ( input_stream_V_user_V_0_sel_wr );
    sensitive << ( input_stream_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_user_V_0_sel);
    sensitive << ( input_stream_V_user_V_0_sel_rd );

    SC_METHOD(thread_input_stream_V_user_V_0_state_cmp_full);
    sensitive << ( input_stream_V_user_V_0_state );

    SC_METHOD(thread_input_stream_V_user_V_0_vld_in);
    sensitive << ( input_stream_TVALID );

    SC_METHOD(thread_input_stream_V_user_V_0_vld_out);
    sensitive << ( input_stream_V_user_V_0_state );

    SC_METHOD(thread_iterate_V_fu_884_p2);
    sensitive << ( p_4_reg_448 );

    SC_METHOD(thread_j_V_1_fu_1112_p2);
    sensitive << ( p_6_reg_459 );

    SC_METHOD(thread_j_V_fu_648_p2);
    sensitive << ( t_V_1_reg_403 );

    SC_METHOD(thread_localFieldVal_1_fu_1215_p2);
    sensitive << ( localFieldVal_reg_470 );
    sensitive << ( tmp_59_fu_1208_p3 );

    SC_METHOD(thread_matrix_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_27_cast_fu_583_p1 );
    sensitive << ( tmp_40_cast_fu_716_p1 );
    sensitive << ( tmp_58_cast_fu_1132_p1 );

    SC_METHOD(thread_matrix_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_matrix_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_cast_fu_720_p1 );

    SC_METHOD(thread_matrix_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_mul1_fu_1423_p0);
    sensitive << ( x_assign_reg_2166 );
    sensitive << ( ap_CS_fsm_state79 );

    SC_METHOD(thread_mul1_fu_1423_p2);
    sensitive << ( mul1_fu_1423_p0 );

    SC_METHOD(thread_mul2_fu_1643_p0);
    sensitive << ( ap_CS_fsm_state117 );
    sensitive << ( mul2_fu_1643_p00 );

    SC_METHOD(thread_mul2_fu_1643_p00);
    sensitive << ( tmp_29_cast_reg_2221 );

    SC_METHOD(thread_mul2_fu_1643_p2);
    sensitive << ( mul2_fu_1643_p0 );

    SC_METHOD(thread_mul3_fu_1674_p0);
    sensitive << ( tmp_33_reg_2229 );
    sensitive << ( ap_CS_fsm_state118 );

    SC_METHOD(thread_mul3_fu_1674_p2);
    sensitive << ( mul3_fu_1674_p0 );

    SC_METHOD(thread_mul4_fu_1811_p1);
    sensitive << ( reg_528 );
    sensitive << ( ap_CS_fsm_state123 );

    SC_METHOD(thread_mul4_fu_1811_p2);
    sensitive << ( mul4_fu_1811_p1 );

    SC_METHOD(thread_mul7_fu_1242_p0);
    sensitive << ( tmp_19_reg_2112 );
    sensitive << ( ap_CS_fsm_state52 );

    SC_METHOD(thread_mul7_fu_1242_p2);
    sensitive << ( mul7_fu_1242_p0 );

    SC_METHOD(thread_mul_fu_1157_p0);
    sensitive << ( tmp_22_reg_2086 );
    sensitive << ( ap_CS_fsm_state48 );

    SC_METHOD(thread_mul_fu_1157_p2);
    sensitive << ( mul_fu_1157_p0 );

    SC_METHOD(thread_neg_mul1_fu_1446_p2);
    sensitive << ( mul1_reg_2186 );

    SC_METHOD(thread_neg_mul2_fu_1690_p2);
    sensitive << ( mul3_reg_2240 );

    SC_METHOD(thread_neg_mul3_fu_1847_p2);
    sensitive << ( mul4_reg_2285 );

    SC_METHOD(thread_neg_mul8_fu_1248_p2);
    sensitive << ( mul7_reg_2125 );

    SC_METHOD(thread_neg_mul_fu_1173_p2);
    sensitive << ( mul_reg_2097 );

    SC_METHOD(thread_neg_ti1_fu_1287_p2);
    sensitive << ( tmp_53_fu_1280_p3 );

    SC_METHOD(thread_neg_ti2_fu_1470_p2);
    sensitive << ( trunc1_fu_1467_p1 );

    SC_METHOD(thread_neg_ti3_fu_1719_p2);
    sensitive << ( tmp_79_fu_1712_p3 );

    SC_METHOD(thread_neg_ti4_fu_1872_p2);
    sensitive << ( tmp_88_fu_1868_p1 );

    SC_METHOD(thread_neg_ti_fu_1198_p2);
    sensitive << ( trunc_fu_1194_p1 );

    SC_METHOD(thread_or_cond_fu_1764_p2);
    sensitive << ( icmp_fu_1753_p2 );
    sensitive << ( tmp_37_fu_1759_p2 );

    SC_METHOD(thread_output_last_V_fu_1793_p2);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( exitcond_fu_1776_p2 );
    sensitive << ( t_V_2_reg_500 );

    SC_METHOD(thread_output_stream_TDATA);
    sensitive << ( output_stream_V_data_V_1_data_out );

    SC_METHOD(thread_output_stream_TDATA_blk_n);
    sensitive << ( output_stream_V_data_V_1_state );
    sensitive << ( ap_CS_fsm_state124 );
    sensitive << ( ap_CS_fsm_state125 );

    SC_METHOD(thread_output_stream_TDEST);
    sensitive << ( output_stream_V_dest_V_1_data_out );

    SC_METHOD(thread_output_stream_TID);
    sensitive << ( output_stream_V_id_V_1_data_out );

    SC_METHOD(thread_output_stream_TKEEP);
    sensitive << ( output_stream_V_keep_V_1_data_out );

    SC_METHOD(thread_output_stream_TLAST);
    sensitive << ( output_stream_V_last_V_1_data_out );

    SC_METHOD(thread_output_stream_TSTRB);
    sensitive << ( output_stream_V_strb_V_1_data_out );

    SC_METHOD(thread_output_stream_TUSER);
    sensitive << ( output_stream_V_user_V_1_data_out );

    SC_METHOD(thread_output_stream_TVALID);
    sensitive << ( output_stream_V_dest_V_1_state );

    SC_METHOD(thread_output_stream_V_data_V_1_ack_in);
    sensitive << ( output_stream_V_data_V_1_state );

    SC_METHOD(thread_output_stream_V_data_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_data_V_1_data_out);
    sensitive << ( output_stream_V_data_V_1_payload_A );
    sensitive << ( output_stream_V_data_V_1_payload_B );
    sensitive << ( output_stream_V_data_V_1_sel );

    SC_METHOD(thread_output_stream_V_data_V_1_load_A);
    sensitive << ( output_stream_V_data_V_1_sel_wr );
    sensitive << ( output_stream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_data_V_1_load_B);
    sensitive << ( output_stream_V_data_V_1_sel_wr );
    sensitive << ( output_stream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_data_V_1_sel);
    sensitive << ( output_stream_V_data_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_data_V_1_state_cmp_full);
    sensitive << ( output_stream_V_data_V_1_state );

    SC_METHOD(thread_output_stream_V_data_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state124 );

    SC_METHOD(thread_output_stream_V_data_V_1_vld_out);
    sensitive << ( output_stream_V_data_V_1_state );

    SC_METHOD(thread_output_stream_V_dest_V_1_ack_in);
    sensitive << ( output_stream_V_dest_V_1_state );

    SC_METHOD(thread_output_stream_V_dest_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_dest_V_1_data_out);
    sensitive << ( output_stream_V_dest_V_1_payload_A );
    sensitive << ( output_stream_V_dest_V_1_payload_B );
    sensitive << ( output_stream_V_dest_V_1_sel );

    SC_METHOD(thread_output_stream_V_dest_V_1_load_A);
    sensitive << ( output_stream_V_dest_V_1_sel_wr );
    sensitive << ( output_stream_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_dest_V_1_load_B);
    sensitive << ( output_stream_V_dest_V_1_sel_wr );
    sensitive << ( output_stream_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_dest_V_1_sel);
    sensitive << ( output_stream_V_dest_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_dest_V_1_state_cmp_full);
    sensitive << ( output_stream_V_dest_V_1_state );

    SC_METHOD(thread_output_stream_V_dest_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state124 );

    SC_METHOD(thread_output_stream_V_dest_V_1_vld_out);
    sensitive << ( output_stream_V_dest_V_1_state );

    SC_METHOD(thread_output_stream_V_id_V_1_ack_in);
    sensitive << ( output_stream_V_id_V_1_state );

    SC_METHOD(thread_output_stream_V_id_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_id_V_1_data_out);
    sensitive << ( output_stream_V_id_V_1_payload_A );
    sensitive << ( output_stream_V_id_V_1_payload_B );
    sensitive << ( output_stream_V_id_V_1_sel );

    SC_METHOD(thread_output_stream_V_id_V_1_load_A);
    sensitive << ( output_stream_V_id_V_1_sel_wr );
    sensitive << ( output_stream_V_id_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_id_V_1_load_B);
    sensitive << ( output_stream_V_id_V_1_sel_wr );
    sensitive << ( output_stream_V_id_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_id_V_1_sel);
    sensitive << ( output_stream_V_id_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_id_V_1_state_cmp_full);
    sensitive << ( output_stream_V_id_V_1_state );

    SC_METHOD(thread_output_stream_V_id_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state124 );

    SC_METHOD(thread_output_stream_V_id_V_1_vld_out);
    sensitive << ( output_stream_V_id_V_1_state );

    SC_METHOD(thread_output_stream_V_keep_V_1_ack_in);
    sensitive << ( output_stream_V_keep_V_1_state );

    SC_METHOD(thread_output_stream_V_keep_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_keep_V_1_data_out);
    sensitive << ( output_stream_V_keep_V_1_payload_A );
    sensitive << ( output_stream_V_keep_V_1_payload_B );
    sensitive << ( output_stream_V_keep_V_1_sel );

    SC_METHOD(thread_output_stream_V_keep_V_1_load_A);
    sensitive << ( output_stream_V_keep_V_1_sel_wr );
    sensitive << ( output_stream_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_keep_V_1_load_B);
    sensitive << ( output_stream_V_keep_V_1_sel_wr );
    sensitive << ( output_stream_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_keep_V_1_sel);
    sensitive << ( output_stream_V_keep_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_keep_V_1_state_cmp_full);
    sensitive << ( output_stream_V_keep_V_1_state );

    SC_METHOD(thread_output_stream_V_keep_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state124 );

    SC_METHOD(thread_output_stream_V_keep_V_1_vld_out);
    sensitive << ( output_stream_V_keep_V_1_state );

    SC_METHOD(thread_output_stream_V_last_V_1_ack_in);
    sensitive << ( output_stream_V_last_V_1_state );

    SC_METHOD(thread_output_stream_V_last_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_last_V_1_data_out);
    sensitive << ( output_stream_V_last_V_1_payload_A );
    sensitive << ( output_stream_V_last_V_1_payload_B );
    sensitive << ( output_stream_V_last_V_1_sel );

    SC_METHOD(thread_output_stream_V_last_V_1_load_A);
    sensitive << ( output_stream_V_last_V_1_sel_wr );
    sensitive << ( output_stream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_last_V_1_load_B);
    sensitive << ( output_stream_V_last_V_1_sel_wr );
    sensitive << ( output_stream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_last_V_1_sel);
    sensitive << ( output_stream_V_last_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_last_V_1_state_cmp_full);
    sensitive << ( output_stream_V_last_V_1_state );

    SC_METHOD(thread_output_stream_V_last_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state124 );

    SC_METHOD(thread_output_stream_V_last_V_1_vld_out);
    sensitive << ( output_stream_V_last_V_1_state );

    SC_METHOD(thread_output_stream_V_strb_V_1_ack_in);
    sensitive << ( output_stream_V_strb_V_1_state );

    SC_METHOD(thread_output_stream_V_strb_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_strb_V_1_data_out);
    sensitive << ( output_stream_V_strb_V_1_payload_A );
    sensitive << ( output_stream_V_strb_V_1_payload_B );
    sensitive << ( output_stream_V_strb_V_1_sel );

    SC_METHOD(thread_output_stream_V_strb_V_1_load_A);
    sensitive << ( output_stream_V_strb_V_1_sel_wr );
    sensitive << ( output_stream_V_strb_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_strb_V_1_load_B);
    sensitive << ( output_stream_V_strb_V_1_sel_wr );
    sensitive << ( output_stream_V_strb_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_strb_V_1_sel);
    sensitive << ( output_stream_V_strb_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_strb_V_1_state_cmp_full);
    sensitive << ( output_stream_V_strb_V_1_state );

    SC_METHOD(thread_output_stream_V_strb_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state124 );

    SC_METHOD(thread_output_stream_V_strb_V_1_vld_out);
    sensitive << ( output_stream_V_strb_V_1_state );

    SC_METHOD(thread_output_stream_V_user_V_1_ack_in);
    sensitive << ( output_stream_V_user_V_1_state );

    SC_METHOD(thread_output_stream_V_user_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_user_V_1_data_out);
    sensitive << ( output_stream_V_user_V_1_payload_A );
    sensitive << ( output_stream_V_user_V_1_payload_B );
    sensitive << ( output_stream_V_user_V_1_sel );

    SC_METHOD(thread_output_stream_V_user_V_1_load_A);
    sensitive << ( output_stream_V_user_V_1_sel_wr );
    sensitive << ( output_stream_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_user_V_1_load_B);
    sensitive << ( output_stream_V_user_V_1_sel_wr );
    sensitive << ( output_stream_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_user_V_1_sel);
    sensitive << ( output_stream_V_user_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_user_V_1_state_cmp_full);
    sensitive << ( output_stream_V_user_V_1_state );

    SC_METHOD(thread_output_stream_V_user_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state124 );

    SC_METHOD(thread_output_stream_V_user_V_1_vld_out);
    sensitive << ( output_stream_V_user_V_1_state );

    SC_METHOD(thread_p_shl1_cast_fu_558_p1);
    sensitive << ( tmp_9_fu_550_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_620_p1);
    sensitive << ( tmp_6_fu_612_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_632_p1);
    sensitive << ( tmp_7_fu_624_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_1080_p3);
    sensitive << ( tmp_45_fu_1076_p1 );

    SC_METHOD(thread_p_shl5_cast_fu_1092_p3);
    sensitive << ( tmp_46_fu_1088_p1 );

    SC_METHOD(thread_p_shl_cast_fu_546_p1);
    sensitive << ( tmp_fu_538_p3 );

    SC_METHOD(thread_p_v1_v_fu_1188_p3);
    sensitive << ( tmp_55_reg_2091 );
    sensitive << ( tmp_57_reg_2102 );
    sensitive << ( tmp_56_fu_1178_p4 );

    SC_METHOD(thread_p_v2_v_fu_1461_p3);
    sensitive << ( tmp_65_reg_2191 );
    sensitive << ( tmp_67_reg_2197 );
    sensitive << ( tmp_66_fu_1451_p4 );

    SC_METHOD(thread_p_v_v_fu_1862_p3);
    sensitive << ( tmp_85_reg_2279 );
    sensitive << ( tmp_87_reg_2290 );
    sensitive << ( tmp_86_fu_1852_p4 );

    SC_METHOD(thread_prob_cast_fu_1615_p1);
    sensitive << ( prob_reg_482 );

    SC_METHOD(thread_r_V_2_fu_1544_p3);
    sensitive << ( tmp_44_reg_2022 );
    sensitive << ( tmp_71_fu_1535_p4 );

    SC_METHOD(thread_ret_V_1_fu_845_p3);
    sensitive << ( tmp_30_fu_837_p3 );
    sensitive << ( tmp_28_fu_831_p2 );

    SC_METHOD(thread_ret_V_4_cast1_fu_1048_p2);
    sensitive << ( tmp_31_fu_1010_p3 );
    sensitive << ( tmp_29_fu_996_p4 );

    SC_METHOD(thread_ret_V_4_cast9_fu_1054_p2);
    sensitive << ( tmp_24_fu_988_p3 );
    sensitive << ( tmp_17_fu_974_p4 );

    SC_METHOD(thread_ret_V_4_cast_fu_1060_p2);
    sensitive << ( tmp_16_fu_966_p3 );
    sensitive << ( tmp_15_fu_952_p4 );

    SC_METHOD(thread_ret_V_4_fu_1595_p3);
    sensitive << ( tmp_75_fu_1587_p3 );
    sensitive << ( tmp_74_fu_1581_p2 );

    SC_METHOD(thread_ret_V_i1_fu_942_p2);
    sensitive << ( tmp4_fu_936_p2 );
    sensitive << ( tmp3_fu_930_p2 );

    SC_METHOD(thread_ret_V_i2_fu_1563_p2);
    sensitive << ( tmp6_fu_1557_p2 );
    sensitive << ( tmp5_fu_1551_p2 );

    SC_METHOD(thread_ret_V_i_fu_813_p2);
    sensitive << ( tmp2_fu_807_p2 );
    sensitive << ( tmp1_fu_801_p2 );

    SC_METHOD(thread_rev1_fu_1357_p2);
    sensitive << ( slt1_fu_1352_p2 );

    SC_METHOD(thread_rev2_fu_1395_p2);
    sensitive << ( slt2_fu_1390_p2 );

    SC_METHOD(thread_rev3_fu_1406_p2);
    sensitive << ( slt3_fu_1401_p2 );

    SC_METHOD(thread_rev_fu_1346_p2);
    sensitive << ( slt_fu_1341_p2 );

    SC_METHOD(thread_sel_div1_fu_1412_p3);
    sensitive << ( tmp_64_fu_1380_p3 );
    sensitive << ( rev2_fu_1395_p2 );
    sensitive << ( rev3_fu_1406_p2 );

    SC_METHOD(thread_sel_div_fu_1363_p3);
    sensitive << ( tmp_63_fu_1331_p3 );
    sensitive << ( rev_fu_1346_p2 );
    sensitive << ( rev1_fu_1357_p2 );

    SC_METHOD(thread_slt1_fu_1352_p2);
    sensitive << ( Ny1_reg_2160 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( x_fu_1338_p1 );

    SC_METHOD(thread_slt2_fu_1390_p2);
    sensitive << ( Ny3_reg_2176 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( x1_fu_1387_p1 );

    SC_METHOD(thread_slt3_fu_1401_p2);
    sensitive << ( Ny3_reg_2176 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( x1_fu_1387_p1 );

    SC_METHOD(thread_slt_fu_1341_p2);
    sensitive << ( Ny1_reg_2160 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( x_fu_1338_p1 );

    SC_METHOD(thread_tmp1_fu_801_p2);
    sensitive << ( tmp_44_i_fu_763_p4 );
    sensitive << ( tmp_i_fu_753_p4 );

    SC_METHOD(thread_tmp2_fu_807_p2);
    sensitive << ( tmp_45_i_fu_773_p4 );
    sensitive << ( tmp_47_i_fu_783_p4 );

    SC_METHOD(thread_tmp3_fu_930_p2);
    sensitive << ( tmp_44_i1_fu_900_p4 );
    sensitive << ( tmp_i1_fu_890_p4 );

    SC_METHOD(thread_tmp4_fu_936_p2);
    sensitive << ( tmp_45_i1_fu_910_p4 );
    sensitive << ( tmp_47_i1_fu_920_p4 );

    SC_METHOD(thread_tmp5_fu_1551_p2);
    sensitive << ( tmp_44_i2_fu_1501_p4 );
    sensitive << ( tmp_i3_fu_1492_p4 );

    SC_METHOD(thread_tmp6_fu_1557_p2);
    sensitive << ( tmp_45_i2_fu_1519_p3 );
    sensitive << ( tmp_47_i2_fu_1526_p4 );

    SC_METHOD(thread_tmp_10_fu_1890_p1);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_11_fu_686_p2);
    sensitive << ( tmp_8_reg_1961 );
    sensitive << ( tmp_12_cast_fu_682_p1 );

    SC_METHOD(thread_tmp_12_cast_cast_fu_720_p1);
    sensitive << ( tmp_10_reg_1974 );

    SC_METHOD(thread_tmp_12_cast_fu_682_p1);
    sensitive << ( t_V_1_reg_403 );

    SC_METHOD(thread_tmp_12_fu_793_p3);
    sensitive << ( reg_V );

    SC_METHOD(thread_tmp_13_fu_868_p1);
    sensitive << ( p_s_reg_425 );

    SC_METHOD(thread_tmp_14_fu_878_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( p_4_reg_448 );

    SC_METHOD(thread_tmp_15_cast_cast_fu_859_p3);
    sensitive << ( tmp_12_fu_793_p3 );

    SC_METHOD(thread_tmp_15_fu_952_p4);
    sensitive << ( reg_V );

    SC_METHOD(thread_tmp_16_fu_966_p3);
    sensitive << ( tmp_39_fu_962_p1 );

    SC_METHOD(thread_tmp_17_fu_974_p4);
    sensitive << ( reg_V );

    SC_METHOD(thread_tmp_18_fu_1072_p1);
    sensitive << ( grp_fu_1066_p2 );

    SC_METHOD(thread_tmp_19_fu_1225_p1);
    sensitive << ( ap_CS_fsm_state51 );
    sensitive << ( localFieldVal_reg_470 );

    SC_METHOD(thread_tmp_19_fu_1225_p2);
    sensitive << ( reg_528 );
    sensitive << ( tmp_19_fu_1225_p1 );

    SC_METHOD(thread_tmp_1_cast_fu_574_p1);
    sensitive << ( invdar1_reg_381 );

    SC_METHOD(thread_tmp_1_fu_562_p2);
    sensitive << ( p_shl_cast_fu_546_p1 );
    sensitive << ( p_shl1_cast_fu_558_p1 );

    SC_METHOD(thread_tmp_20_fu_1300_p2);
    sensitive << ( tmp_19_reg_2112 );
    sensitive << ( ap_CS_fsm_state53 );

    SC_METHOD(thread_tmp_21_cast_fu_1123_p1);
    sensitive << ( p_6_reg_459 );

    SC_METHOD(thread_tmp_21_fu_1118_p1);
    sensitive << ( p_6_reg_459 );

    SC_METHOD(thread_tmp_22_fu_1140_p0);
    sensitive << ( matrix_load_reg_2081 );
    sensitive << ( ap_CS_fsm_state47 );

    SC_METHOD(thread_tmp_22_fu_1140_p2);
    sensitive << ( reg_528 );
    sensitive << ( tmp_22_fu_1140_p0 );

    SC_METHOD(thread_tmp_23_fu_819_p1);
    sensitive << ( ret_V_i_fu_813_p2 );

    SC_METHOD(thread_tmp_24_fu_988_p3);
    sensitive << ( tmp_40_fu_984_p1 );

    SC_METHOD(thread_tmp_25_fu_1623_p2);
    sensitive << ( ap_CS_fsm_state116 );
    sensitive << ( tmp_76_fu_1619_p1 );
    sensitive << ( prob_cast_fu_1615_p1 );

    SC_METHOD(thread_tmp_26_fu_1629_p2);
    sensitive << ( reg_528 );

    SC_METHOD(thread_tmp_27_cast_fu_583_p1);
    sensitive << ( tmp_5_fu_578_p2 );

    SC_METHOD(thread_tmp_27_fu_823_p3);
    sensitive << ( tmp_23_fu_819_p1 );

    SC_METHOD(thread_tmp_28_fu_831_p2);
    sensitive << ( tmp_27_fu_823_p3 );
    sensitive << ( grp_fu_515_p4 );

    SC_METHOD(thread_tmp_29_cast_fu_1896_p0);
    sensitive << ( ap_CS_fsm_state116 );
    sensitive << ( tmp_29_cast_fu_1896_p00 );

    SC_METHOD(thread_tmp_29_cast_fu_1896_p00);
    sensitive << ( indvars_iv_reg_436 );

    SC_METHOD(thread_tmp_29_cast_fu_1896_p1);
    sensitive << ( ap_CS_fsm_state116 );

    SC_METHOD(thread_tmp_29_fu_996_p4);
    sensitive << ( reg_V );

    SC_METHOD(thread_tmp_2_fu_588_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( invdar1_reg_381 );

    SC_METHOD(thread_tmp_30_fu_837_p3);
    sensitive << ( ret_V_i_fu_813_p2 );

    SC_METHOD(thread_tmp_31_fu_1010_p3);
    sensitive << ( tmp_41_fu_1006_p1 );

    SC_METHOD(thread_tmp_33_fu_1657_p0);
    sensitive << ( ap_CS_fsm_state117 );
    sensitive << ( temperature_fu_254 );

    SC_METHOD(thread_tmp_33_fu_1657_p2);
    sensitive << ( tmp_33_fu_1657_p0 );

    SC_METHOD(thread_tmp_34_fu_1725_p3);
    sensitive << ( tmp_81_reg_2234 );
    sensitive << ( tmp_78_fu_1709_p1 );
    sensitive << ( neg_ti3_fu_1719_p2 );

    SC_METHOD(thread_tmp_35_fu_1737_p2);
    sensitive << ( tmp_14_reg_2007 );
    sensitive << ( ap_CS_fsm_state120 );
    sensitive << ( temperature_fu_254 );

    SC_METHOD(thread_tmp_36_fu_948_p1);
    sensitive << ( ret_V_i1_fu_942_p2 );

    SC_METHOD(thread_tmp_37_fu_1759_p2);
    sensitive << ( tmp_14_reg_2007 );
    sensitive << ( tmp_19_reg_2112 );
    sensitive << ( ap_CS_fsm_state120 );
    sensitive << ( tmp_35_fu_1737_p2 );

    SC_METHOD(thread_tmp_38_fu_1788_p1);
    sensitive << ( t_V_2_reg_500 );

    SC_METHOD(thread_tmp_39_fu_962_p1);
    sensitive << ( ret_V_i1_fu_942_p2 );

    SC_METHOD(thread_tmp_3_fu_594_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( invdar_reg_369 );
    sensitive << ( tmp_2_fu_588_p2 );

    SC_METHOD(thread_tmp_40_cast_fu_716_p1);
    sensitive << ( tmp_11_reg_1979 );

    SC_METHOD(thread_tmp_40_fu_984_p1);
    sensitive << ( ret_V_i1_fu_942_p2 );

    SC_METHOD(thread_tmp_41_fu_1006_p1);
    sensitive << ( ret_V_i1_fu_942_p2 );

    SC_METHOD(thread_tmp_42_fu_1018_p3);
    sensitive << ( tmp_36_fu_948_p1 );

    SC_METHOD(thread_tmp_43_fu_1026_p2);
    sensitive << ( grp_fu_515_p4 );
    sensitive << ( tmp_42_fu_1018_p3 );

    SC_METHOD(thread_tmp_43_i_fu_1486_p2);
    sensitive << ( tmp_69_fu_1479_p3 );

    SC_METHOD(thread_tmp_44_fu_1032_p3);
    sensitive << ( ret_V_i1_fu_942_p2 );

    SC_METHOD(thread_tmp_44_i1_fu_900_p4);
    sensitive << ( reg_V );

    SC_METHOD(thread_tmp_44_i2_fu_1501_p4);
    sensitive << ( ret_V_4_cast9_reg_2038 );

    SC_METHOD(thread_tmp_44_i_fu_763_p4);
    sensitive << ( reg_V );

    SC_METHOD(thread_tmp_45_fu_1076_p1);
    sensitive << ( grp_fu_1066_p2 );

    SC_METHOD(thread_tmp_45_i1_fu_910_p4);
    sensitive << ( reg_V );

    SC_METHOD(thread_tmp_45_i2_fu_1519_p3);
    sensitive << ( tmp_44_reg_2022 );
    sensitive << ( tmp_70_fu_1510_p4 );

    SC_METHOD(thread_tmp_45_i_fu_773_p4);
    sensitive << ( reg_V );

    SC_METHOD(thread_tmp_46_fu_1088_p1);
    sensitive << ( grp_fu_1066_p2 );

    SC_METHOD(thread_tmp_47_fu_1100_p2);
    sensitive << ( p_shl4_cast_fu_1080_p3 );
    sensitive << ( p_shl5_cast_fu_1092_p3 );

    SC_METHOD(thread_tmp_47_i1_fu_920_p4);
    sensitive << ( reg_V );

    SC_METHOD(thread_tmp_47_i2_fu_1526_p4);
    sensitive << ( ret_V_4_cast_reg_2043 );

    SC_METHOD(thread_tmp_47_i_fu_783_p4);
    sensitive << ( reg_V );

    SC_METHOD(thread_tmp_49_fu_1253_p4);
    sensitive << ( neg_mul8_fu_1248_p2 );

    SC_METHOD(thread_tmp_4_fu_735_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( invdar2_reg_414 );

    SC_METHOD(thread_tmp_50_fu_1263_p1);
    sensitive << ( tmp_49_fu_1253_p4 );

    SC_METHOD(thread_tmp_51_fu_1267_p4);
    sensitive << ( mul7_reg_2125 );

    SC_METHOD(thread_tmp_52_fu_1276_p1);
    sensitive << ( tmp_51_fu_1267_p4 );

    SC_METHOD(thread_tmp_53_fu_1280_p3);
    sensitive << ( tmp_48_reg_2119 );
    sensitive << ( tmp_50_fu_1263_p1 );
    sensitive << ( tmp_52_fu_1276_p1 );

    SC_METHOD(thread_tmp_54_fu_1127_p2);
    sensitive << ( tmp_47_reg_2053 );
    sensitive << ( tmp_21_cast_fu_1123_p1 );

    SC_METHOD(thread_tmp_56_fu_1178_p4);
    sensitive << ( neg_mul_fu_1173_p2 );

    SC_METHOD(thread_tmp_58_cast_fu_1132_p1);
    sensitive << ( tmp_54_fu_1127_p2 );

    SC_METHOD(thread_tmp_58_fu_1204_p1);
    sensitive << ( p_v1_v_fu_1188_p3 );

    SC_METHOD(thread_tmp_59_fu_1208_p3);
    sensitive << ( tmp_55_reg_2091 );
    sensitive << ( neg_ti_fu_1198_p2 );
    sensitive << ( tmp_58_fu_1204_p1 );

    SC_METHOD(thread_tmp_5_fu_578_p2);
    sensitive << ( tmp_1_reg_1907 );
    sensitive << ( tmp_1_cast_fu_574_p1 );

    SC_METHOD(thread_tmp_61_fu_1308_p0);
    sensitive << ( ap_CS_fsm_state54 );
    sensitive << ( temperature_fu_254 );

    SC_METHOD(thread_tmp_63_fu_1331_p3);
    sensitive << ( temperature_load_1_reg_2142 );

    SC_METHOD(thread_tmp_64_fu_1380_p3);
    sensitive << ( temperature_load_1_reg_2142 );

    SC_METHOD(thread_tmp_66_fu_1451_p4);
    sensitive << ( neg_mul1_fu_1446_p2 );

    SC_METHOD(thread_tmp_68_fu_1476_p1);
    sensitive << ( p_v2_v_reg_2202 );

    SC_METHOD(thread_tmp_69_fu_1479_p3);
    sensitive << ( tmp_65_reg_2191 );
    sensitive << ( neg_ti2_fu_1470_p2 );
    sensitive << ( tmp_68_fu_1476_p1 );

    SC_METHOD(thread_tmp_6_fu_612_p3);
    sensitive << ( t_V_reg_392 );

    SC_METHOD(thread_tmp_70_fu_1510_p4);
    sensitive << ( tmp_43_reg_2016 );

    SC_METHOD(thread_tmp_71_fu_1535_p4);
    sensitive << ( tmp_43_reg_2016 );

    SC_METHOD(thread_tmp_72_fu_1569_p1);
    sensitive << ( ret_V_i2_fu_1563_p2 );

    SC_METHOD(thread_tmp_73_fu_1573_p3);
    sensitive << ( tmp_72_fu_1569_p1 );

    SC_METHOD(thread_tmp_74_fu_1581_p2);
    sensitive << ( tmp_73_fu_1573_p3 );
    sensitive << ( r_V_2_fu_1544_p3 );

    SC_METHOD(thread_tmp_75_fu_1587_p3);
    sensitive << ( ret_V_i2_fu_1563_p2 );

    SC_METHOD(thread_tmp_76_fu_1619_p1);
    sensitive << ( grp_fu_1609_p2 );

    SC_METHOD(thread_tmp_77_fu_1705_p1);
    sensitive << ( tmp_82_fu_1695_p4 );

    SC_METHOD(thread_tmp_78_fu_1709_p1);
    sensitive << ( tmp_83_reg_2245 );

    SC_METHOD(thread_tmp_79_fu_1712_p3);
    sensitive << ( tmp_81_reg_2234 );
    sensitive << ( tmp_77_fu_1705_p1 );
    sensitive << ( tmp_78_fu_1709_p1 );

    SC_METHOD(thread_tmp_7_fu_624_p3);
    sensitive << ( t_V_reg_392 );

    SC_METHOD(thread_tmp_80_fu_1649_p3);
    sensitive << ( mul2_fu_1643_p2 );

    SC_METHOD(thread_tmp_82_fu_1695_p4);
    sensitive << ( neg_mul2_fu_1690_p2 );

    SC_METHOD(thread_tmp_84_fu_1743_p4);
    sensitive << ( temperature_fu_254 );

    SC_METHOD(thread_tmp_85_fu_1799_p1);
    sensitive << ( currentSolution_q0 );
    sensitive << ( ap_CS_fsm_state122 );

    SC_METHOD(thread_tmp_86_fu_1852_p4);
    sensitive << ( neg_mul3_fu_1847_p2 );

    SC_METHOD(thread_tmp_88_fu_1868_p1);
    sensitive << ( p_v_v_fu_1862_p3 );

    SC_METHOD(thread_tmp_89_fu_1878_p1);
    sensitive << ( p_v_v_fu_1862_p3 );

    SC_METHOD(thread_tmp_8_fu_636_p2);
    sensitive << ( p_shl2_cast_fu_620_p1 );
    sensitive << ( p_shl3_cast_fu_632_p1 );

    SC_METHOD(thread_tmp_9_fu_550_p3);
    sensitive << ( invdar_reg_369 );

    SC_METHOD(thread_tmp_fu_538_p3);
    sensitive << ( invdar_reg_369 );

    SC_METHOD(thread_tmp_i1_fu_890_p4);
    sensitive << ( reg_V );

    SC_METHOD(thread_tmp_i3_fu_1492_p4);
    sensitive << ( ret_V_4_cast1_reg_2033 );

    SC_METHOD(thread_tmp_i_fu_753_p4);
    sensitive << ( reg_V );

    SC_METHOD(thread_tmp_s_fu_730_p1);
    sensitive << ( invdar2_reg_414 );

    SC_METHOD(thread_trunc1_fu_1467_p1);
    sensitive << ( p_v2_v_reg_2202 );

    SC_METHOD(thread_trunc_fu_1194_p1);
    sensitive << ( p_v1_v_fu_1188_p3 );

    SC_METHOD(thread_x1_fu_1387_p1);
    sensitive << ( deltaEnergy_reg_2131 );

    SC_METHOD(thread_x_assign_fu_1327_p1);
    sensitive << ( grp_fu_1312_p2 );

    SC_METHOD(thread_x_fu_1338_p1);
    sensitive << ( deltaEnergy_reg_2131 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_data_V_1_state );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_state );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_state );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_state );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_state );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_state );
    sensitive << ( output_stream_V_dest_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_642_p2 );
    sensitive << ( ap_CS_fsm_state124 );
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_600_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_14_fu_878_p2 );
    sensitive << ( tmp_14_reg_2007 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state45 );
    sensitive << ( exitcond8_fu_1106_p2 );
    sensitive << ( ap_CS_fsm_state53 );
    sensitive << ( tmp_20_fu_1300_p2 );
    sensitive << ( ap_CS_fsm_state78 );
    sensitive << ( sel_div_fu_1363_p3 );
    sensitive << ( sel_div1_fu_1412_p3 );
    sensitive << ( ap_CS_fsm_state79 );
    sensitive << ( ap_CS_fsm_state117 );
    sensitive << ( tmp_80_fu_1649_p3 );
    sensitive << ( ap_CS_fsm_state120 );
    sensitive << ( tmp_35_fu_1737_p2 );
    sensitive << ( or_cond_fu_1764_p2 );
    sensitive << ( ap_CS_fsm_state121 );
    sensitive << ( exitcond_fu_1776_p2 );
    sensitive << ( tmp_2_fu_588_p2 );
    sensitive << ( tmp_3_fu_594_p2 );
    sensitive << ( tmp_4_fu_735_p2 );
    sensitive << ( exitcond3_fu_741_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    input_stream_V_data_V_0_sel_rd = SC_LOGIC_0;
    input_stream_V_data_V_0_sel_wr = SC_LOGIC_0;
    input_stream_V_data_V_0_state = "00";
    input_stream_V_keep_V_0_sel_rd = SC_LOGIC_0;
    input_stream_V_keep_V_0_sel_wr = SC_LOGIC_0;
    input_stream_V_keep_V_0_state = "00";
    input_stream_V_strb_V_0_sel_rd = SC_LOGIC_0;
    input_stream_V_strb_V_0_sel_wr = SC_LOGIC_0;
    input_stream_V_strb_V_0_state = "00";
    input_stream_V_user_V_0_sel_rd = SC_LOGIC_0;
    input_stream_V_user_V_0_sel_wr = SC_LOGIC_0;
    input_stream_V_user_V_0_state = "00";
    input_stream_V_id_V_0_sel_rd = SC_LOGIC_0;
    input_stream_V_id_V_0_sel_wr = SC_LOGIC_0;
    input_stream_V_id_V_0_state = "00";
    input_stream_V_dest_V_0_sel_rd = SC_LOGIC_0;
    input_stream_V_dest_V_0_sel_wr = SC_LOGIC_0;
    input_stream_V_dest_V_0_state = "00";
    output_stream_V_data_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_data_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_data_V_1_state = "00";
    output_stream_V_keep_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_keep_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_keep_V_1_state = "00";
    output_stream_V_strb_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_strb_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_strb_V_1_state = "00";
    output_stream_V_user_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_user_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_user_V_1_state = "00";
    output_stream_V_last_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_last_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_last_V_1_state = "00";
    output_stream_V_id_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_id_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_id_V_1_state = "00";
    output_stream_V_dest_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_dest_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_dest_V_1_state = "00";
    reg_V = "00000000000000001010110011101111";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "maxCut_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, input_stream_TDATA, "(port)input_stream_TDATA");
    sc_trace(mVcdFile, input_stream_TVALID, "(port)input_stream_TVALID");
    sc_trace(mVcdFile, input_stream_TREADY, "(port)input_stream_TREADY");
    sc_trace(mVcdFile, input_stream_TKEEP, "(port)input_stream_TKEEP");
    sc_trace(mVcdFile, input_stream_TSTRB, "(port)input_stream_TSTRB");
    sc_trace(mVcdFile, input_stream_TUSER, "(port)input_stream_TUSER");
    sc_trace(mVcdFile, input_stream_TLAST, "(port)input_stream_TLAST");
    sc_trace(mVcdFile, input_stream_TID, "(port)input_stream_TID");
    sc_trace(mVcdFile, input_stream_TDEST, "(port)input_stream_TDEST");
    sc_trace(mVcdFile, output_stream_TDATA, "(port)output_stream_TDATA");
    sc_trace(mVcdFile, output_stream_TVALID, "(port)output_stream_TVALID");
    sc_trace(mVcdFile, output_stream_TREADY, "(port)output_stream_TREADY");
    sc_trace(mVcdFile, output_stream_TKEEP, "(port)output_stream_TKEEP");
    sc_trace(mVcdFile, output_stream_TSTRB, "(port)output_stream_TSTRB");
    sc_trace(mVcdFile, output_stream_TUSER, "(port)output_stream_TUSER");
    sc_trace(mVcdFile, output_stream_TLAST, "(port)output_stream_TLAST");
    sc_trace(mVcdFile, output_stream_TID, "(port)output_stream_TID");
    sc_trace(mVcdFile, output_stream_TDEST, "(port)output_stream_TDEST");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, input_stream_V_data_V_0_data_out, "input_stream_V_data_V_0_data_out");
    sc_trace(mVcdFile, input_stream_V_data_V_0_vld_in, "input_stream_V_data_V_0_vld_in");
    sc_trace(mVcdFile, input_stream_V_data_V_0_vld_out, "input_stream_V_data_V_0_vld_out");
    sc_trace(mVcdFile, input_stream_V_data_V_0_ack_in, "input_stream_V_data_V_0_ack_in");
    sc_trace(mVcdFile, input_stream_V_data_V_0_ack_out, "input_stream_V_data_V_0_ack_out");
    sc_trace(mVcdFile, input_stream_V_data_V_0_payload_A, "input_stream_V_data_V_0_payload_A");
    sc_trace(mVcdFile, input_stream_V_data_V_0_payload_B, "input_stream_V_data_V_0_payload_B");
    sc_trace(mVcdFile, input_stream_V_data_V_0_sel_rd, "input_stream_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, input_stream_V_data_V_0_sel_wr, "input_stream_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, input_stream_V_data_V_0_sel, "input_stream_V_data_V_0_sel");
    sc_trace(mVcdFile, input_stream_V_data_V_0_load_A, "input_stream_V_data_V_0_load_A");
    sc_trace(mVcdFile, input_stream_V_data_V_0_load_B, "input_stream_V_data_V_0_load_B");
    sc_trace(mVcdFile, input_stream_V_data_V_0_state, "input_stream_V_data_V_0_state");
    sc_trace(mVcdFile, input_stream_V_data_V_0_state_cmp_full, "input_stream_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_data_out, "input_stream_V_keep_V_0_data_out");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_vld_in, "input_stream_V_keep_V_0_vld_in");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_vld_out, "input_stream_V_keep_V_0_vld_out");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_ack_in, "input_stream_V_keep_V_0_ack_in");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_ack_out, "input_stream_V_keep_V_0_ack_out");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_payload_A, "input_stream_V_keep_V_0_payload_A");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_payload_B, "input_stream_V_keep_V_0_payload_B");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_sel_rd, "input_stream_V_keep_V_0_sel_rd");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_sel_wr, "input_stream_V_keep_V_0_sel_wr");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_sel, "input_stream_V_keep_V_0_sel");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_load_A, "input_stream_V_keep_V_0_load_A");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_load_B, "input_stream_V_keep_V_0_load_B");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_state, "input_stream_V_keep_V_0_state");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_state_cmp_full, "input_stream_V_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_data_out, "input_stream_V_strb_V_0_data_out");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_vld_in, "input_stream_V_strb_V_0_vld_in");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_vld_out, "input_stream_V_strb_V_0_vld_out");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_ack_in, "input_stream_V_strb_V_0_ack_in");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_ack_out, "input_stream_V_strb_V_0_ack_out");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_payload_A, "input_stream_V_strb_V_0_payload_A");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_payload_B, "input_stream_V_strb_V_0_payload_B");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_sel_rd, "input_stream_V_strb_V_0_sel_rd");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_sel_wr, "input_stream_V_strb_V_0_sel_wr");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_sel, "input_stream_V_strb_V_0_sel");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_load_A, "input_stream_V_strb_V_0_load_A");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_load_B, "input_stream_V_strb_V_0_load_B");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_state, "input_stream_V_strb_V_0_state");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_state_cmp_full, "input_stream_V_strb_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_stream_V_user_V_0_data_out, "input_stream_V_user_V_0_data_out");
    sc_trace(mVcdFile, input_stream_V_user_V_0_vld_in, "input_stream_V_user_V_0_vld_in");
    sc_trace(mVcdFile, input_stream_V_user_V_0_vld_out, "input_stream_V_user_V_0_vld_out");
    sc_trace(mVcdFile, input_stream_V_user_V_0_ack_in, "input_stream_V_user_V_0_ack_in");
    sc_trace(mVcdFile, input_stream_V_user_V_0_ack_out, "input_stream_V_user_V_0_ack_out");
    sc_trace(mVcdFile, input_stream_V_user_V_0_payload_A, "input_stream_V_user_V_0_payload_A");
    sc_trace(mVcdFile, input_stream_V_user_V_0_payload_B, "input_stream_V_user_V_0_payload_B");
    sc_trace(mVcdFile, input_stream_V_user_V_0_sel_rd, "input_stream_V_user_V_0_sel_rd");
    sc_trace(mVcdFile, input_stream_V_user_V_0_sel_wr, "input_stream_V_user_V_0_sel_wr");
    sc_trace(mVcdFile, input_stream_V_user_V_0_sel, "input_stream_V_user_V_0_sel");
    sc_trace(mVcdFile, input_stream_V_user_V_0_load_A, "input_stream_V_user_V_0_load_A");
    sc_trace(mVcdFile, input_stream_V_user_V_0_load_B, "input_stream_V_user_V_0_load_B");
    sc_trace(mVcdFile, input_stream_V_user_V_0_state, "input_stream_V_user_V_0_state");
    sc_trace(mVcdFile, input_stream_V_user_V_0_state_cmp_full, "input_stream_V_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_stream_V_id_V_0_data_out, "input_stream_V_id_V_0_data_out");
    sc_trace(mVcdFile, input_stream_V_id_V_0_vld_in, "input_stream_V_id_V_0_vld_in");
    sc_trace(mVcdFile, input_stream_V_id_V_0_vld_out, "input_stream_V_id_V_0_vld_out");
    sc_trace(mVcdFile, input_stream_V_id_V_0_ack_in, "input_stream_V_id_V_0_ack_in");
    sc_trace(mVcdFile, input_stream_V_id_V_0_ack_out, "input_stream_V_id_V_0_ack_out");
    sc_trace(mVcdFile, input_stream_V_id_V_0_payload_A, "input_stream_V_id_V_0_payload_A");
    sc_trace(mVcdFile, input_stream_V_id_V_0_payload_B, "input_stream_V_id_V_0_payload_B");
    sc_trace(mVcdFile, input_stream_V_id_V_0_sel_rd, "input_stream_V_id_V_0_sel_rd");
    sc_trace(mVcdFile, input_stream_V_id_V_0_sel_wr, "input_stream_V_id_V_0_sel_wr");
    sc_trace(mVcdFile, input_stream_V_id_V_0_sel, "input_stream_V_id_V_0_sel");
    sc_trace(mVcdFile, input_stream_V_id_V_0_load_A, "input_stream_V_id_V_0_load_A");
    sc_trace(mVcdFile, input_stream_V_id_V_0_load_B, "input_stream_V_id_V_0_load_B");
    sc_trace(mVcdFile, input_stream_V_id_V_0_state, "input_stream_V_id_V_0_state");
    sc_trace(mVcdFile, input_stream_V_id_V_0_state_cmp_full, "input_stream_V_id_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_data_out, "input_stream_V_dest_V_0_data_out");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_vld_in, "input_stream_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_vld_out, "input_stream_V_dest_V_0_vld_out");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_ack_in, "input_stream_V_dest_V_0_ack_in");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_ack_out, "input_stream_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_payload_A, "input_stream_V_dest_V_0_payload_A");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_payload_B, "input_stream_V_dest_V_0_payload_B");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_sel_rd, "input_stream_V_dest_V_0_sel_rd");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_sel_wr, "input_stream_V_dest_V_0_sel_wr");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_sel, "input_stream_V_dest_V_0_sel");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_load_A, "input_stream_V_dest_V_0_load_A");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_load_B, "input_stream_V_dest_V_0_load_B");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_state, "input_stream_V_dest_V_0_state");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_state_cmp_full, "input_stream_V_dest_V_0_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_data_V_1_data_out, "output_stream_V_data_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_data_V_1_vld_in, "output_stream_V_data_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_data_V_1_vld_out, "output_stream_V_data_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_data_V_1_ack_in, "output_stream_V_data_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_data_V_1_ack_out, "output_stream_V_data_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_data_V_1_payload_A, "output_stream_V_data_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_data_V_1_payload_B, "output_stream_V_data_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_data_V_1_sel_rd, "output_stream_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_data_V_1_sel_wr, "output_stream_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_data_V_1_sel, "output_stream_V_data_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_data_V_1_load_A, "output_stream_V_data_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_data_V_1_load_B, "output_stream_V_data_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_data_V_1_state, "output_stream_V_data_V_1_state");
    sc_trace(mVcdFile, output_stream_V_data_V_1_state_cmp_full, "output_stream_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_data_out, "output_stream_V_keep_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_vld_in, "output_stream_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_vld_out, "output_stream_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_ack_in, "output_stream_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_ack_out, "output_stream_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_payload_A, "output_stream_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_payload_B, "output_stream_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_sel_rd, "output_stream_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_sel_wr, "output_stream_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_sel, "output_stream_V_keep_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_load_A, "output_stream_V_keep_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_load_B, "output_stream_V_keep_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_state, "output_stream_V_keep_V_1_state");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_state_cmp_full, "output_stream_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_data_out, "output_stream_V_strb_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_vld_in, "output_stream_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_vld_out, "output_stream_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_ack_in, "output_stream_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_ack_out, "output_stream_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_payload_A, "output_stream_V_strb_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_payload_B, "output_stream_V_strb_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_sel_rd, "output_stream_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_sel_wr, "output_stream_V_strb_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_sel, "output_stream_V_strb_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_load_A, "output_stream_V_strb_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_load_B, "output_stream_V_strb_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_state, "output_stream_V_strb_V_1_state");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_state_cmp_full, "output_stream_V_strb_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_user_V_1_data_out, "output_stream_V_user_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_user_V_1_vld_in, "output_stream_V_user_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_user_V_1_vld_out, "output_stream_V_user_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_user_V_1_ack_in, "output_stream_V_user_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_user_V_1_ack_out, "output_stream_V_user_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_user_V_1_payload_A, "output_stream_V_user_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_user_V_1_payload_B, "output_stream_V_user_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_user_V_1_sel_rd, "output_stream_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_user_V_1_sel_wr, "output_stream_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_user_V_1_sel, "output_stream_V_user_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_user_V_1_load_A, "output_stream_V_user_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_user_V_1_load_B, "output_stream_V_user_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_user_V_1_state, "output_stream_V_user_V_1_state");
    sc_trace(mVcdFile, output_stream_V_user_V_1_state_cmp_full, "output_stream_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_last_V_1_data_out, "output_stream_V_last_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_last_V_1_vld_in, "output_stream_V_last_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_last_V_1_vld_out, "output_stream_V_last_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_last_V_1_ack_in, "output_stream_V_last_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_last_V_1_ack_out, "output_stream_V_last_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_last_V_1_payload_A, "output_stream_V_last_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_last_V_1_payload_B, "output_stream_V_last_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_last_V_1_sel_rd, "output_stream_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_last_V_1_sel_wr, "output_stream_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_last_V_1_sel, "output_stream_V_last_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_last_V_1_load_A, "output_stream_V_last_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_last_V_1_load_B, "output_stream_V_last_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_last_V_1_state, "output_stream_V_last_V_1_state");
    sc_trace(mVcdFile, output_stream_V_last_V_1_state_cmp_full, "output_stream_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_id_V_1_data_out, "output_stream_V_id_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_id_V_1_vld_in, "output_stream_V_id_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_id_V_1_vld_out, "output_stream_V_id_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_id_V_1_ack_in, "output_stream_V_id_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_id_V_1_ack_out, "output_stream_V_id_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_id_V_1_payload_A, "output_stream_V_id_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_id_V_1_payload_B, "output_stream_V_id_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_id_V_1_sel_rd, "output_stream_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_id_V_1_sel_wr, "output_stream_V_id_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_id_V_1_sel, "output_stream_V_id_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_id_V_1_load_A, "output_stream_V_id_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_id_V_1_load_B, "output_stream_V_id_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_id_V_1_state, "output_stream_V_id_V_1_state");
    sc_trace(mVcdFile, output_stream_V_id_V_1_state_cmp_full, "output_stream_V_id_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_data_out, "output_stream_V_dest_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_vld_in, "output_stream_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_vld_out, "output_stream_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_ack_in, "output_stream_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_ack_out, "output_stream_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_payload_A, "output_stream_V_dest_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_payload_B, "output_stream_V_dest_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_sel_rd, "output_stream_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_sel_wr, "output_stream_V_dest_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_sel, "output_stream_V_dest_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_load_A, "output_stream_V_dest_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_load_B, "output_stream_V_dest_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_state, "output_stream_V_dest_V_1_state");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_state_cmp_full, "output_stream_V_dest_V_1_state_cmp_full");
    sc_trace(mVcdFile, reg_V, "reg_V");
    sc_trace(mVcdFile, input_stream_TDATA_blk_n, "input_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond2_fu_642_p2, "exitcond2_fu_642_p2");
    sc_trace(mVcdFile, output_stream_TDATA_blk_n, "output_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state124, "ap_CS_fsm_state124");
    sc_trace(mVcdFile, ap_CS_fsm_state125, "ap_CS_fsm_state125");
    sc_trace(mVcdFile, currentSolution_q0, "currentSolution_q0");
    sc_trace(mVcdFile, reg_528, "reg_528");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, ap_CS_fsm_state122, "ap_CS_fsm_state122");
    sc_trace(mVcdFile, indvarinc_fu_532_p2, "indvarinc_fu_532_p2");
    sc_trace(mVcdFile, indvarinc_reg_1902, "indvarinc_reg_1902");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_1_fu_562_p2, "tmp_1_fu_562_p2");
    sc_trace(mVcdFile, tmp_1_reg_1907, "tmp_1_reg_1907");
    sc_trace(mVcdFile, indvarinc1_fu_568_p2, "indvarinc1_fu_568_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_V_fu_606_p2, "i_V_fu_606_p2");
    sc_trace(mVcdFile, i_V_reg_1956, "i_V_reg_1956");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_8_fu_636_p2, "tmp_8_fu_636_p2");
    sc_trace(mVcdFile, tmp_8_reg_1961, "tmp_8_reg_1961");
    sc_trace(mVcdFile, exitcond1_fu_600_p2, "exitcond1_fu_600_p2");
    sc_trace(mVcdFile, j_V_fu_648_p2, "j_V_fu_648_p2");
    sc_trace(mVcdFile, j_V_reg_1969, "j_V_reg_1969");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, tmp_10_fu_1890_p2, "tmp_10_fu_1890_p2");
    sc_trace(mVcdFile, tmp_10_reg_1974, "tmp_10_reg_1974");
    sc_trace(mVcdFile, tmp_11_fu_686_p2, "tmp_11_fu_686_p2");
    sc_trace(mVcdFile, tmp_11_reg_1979, "tmp_11_reg_1979");
    sc_trace(mVcdFile, indvarinc2_fu_724_p2, "indvarinc2_fu_724_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_V_1_fu_747_p2, "i_V_1_fu_747_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_14_fu_878_p2, "tmp_14_fu_878_p2");
    sc_trace(mVcdFile, tmp_14_reg_2007, "tmp_14_reg_2007");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, iterate_V_fu_884_p2, "iterate_V_fu_884_p2");
    sc_trace(mVcdFile, iterate_V_reg_2011, "iterate_V_reg_2011");
    sc_trace(mVcdFile, tmp_43_fu_1026_p2, "tmp_43_fu_1026_p2");
    sc_trace(mVcdFile, tmp_43_reg_2016, "tmp_43_reg_2016");
    sc_trace(mVcdFile, tmp_44_fu_1032_p3, "tmp_44_fu_1032_p3");
    sc_trace(mVcdFile, tmp_44_reg_2022, "tmp_44_reg_2022");
    sc_trace(mVcdFile, ret_V_4_cast1_fu_1048_p2, "ret_V_4_cast1_fu_1048_p2");
    sc_trace(mVcdFile, ret_V_4_cast1_reg_2033, "ret_V_4_cast1_reg_2033");
    sc_trace(mVcdFile, ret_V_4_cast9_fu_1054_p2, "ret_V_4_cast9_fu_1054_p2");
    sc_trace(mVcdFile, ret_V_4_cast9_reg_2038, "ret_V_4_cast9_reg_2038");
    sc_trace(mVcdFile, ret_V_4_cast_fu_1060_p2, "ret_V_4_cast_fu_1060_p2");
    sc_trace(mVcdFile, ret_V_4_cast_reg_2043, "ret_V_4_cast_reg_2043");
    sc_trace(mVcdFile, tmp_18_fu_1072_p1, "tmp_18_fu_1072_p1");
    sc_trace(mVcdFile, tmp_18_reg_2048, "tmp_18_reg_2048");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, tmp_47_fu_1100_p2, "tmp_47_fu_1100_p2");
    sc_trace(mVcdFile, tmp_47_reg_2053, "tmp_47_reg_2053");
    sc_trace(mVcdFile, j_V_1_fu_1112_p2, "j_V_1_fu_1112_p2");
    sc_trace(mVcdFile, j_V_1_reg_2061, "j_V_1_reg_2061");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, exitcond8_fu_1106_p2, "exitcond8_fu_1106_p2");
    sc_trace(mVcdFile, currentSolution_addr_2_reg_2076, "currentSolution_addr_2_reg_2076");
    sc_trace(mVcdFile, matrix_q0, "matrix_q0");
    sc_trace(mVcdFile, matrix_load_reg_2081, "matrix_load_reg_2081");
    sc_trace(mVcdFile, tmp_22_fu_1140_p2, "tmp_22_fu_1140_p2");
    sc_trace(mVcdFile, tmp_22_reg_2086, "tmp_22_reg_2086");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, tmp_55_reg_2091, "tmp_55_reg_2091");
    sc_trace(mVcdFile, mul_fu_1157_p2, "mul_fu_1157_p2");
    sc_trace(mVcdFile, mul_reg_2097, "mul_reg_2097");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, tmp_57_reg_2102, "tmp_57_reg_2102");
    sc_trace(mVcdFile, localFieldVal_1_fu_1215_p2, "localFieldVal_1_fu_1215_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, tmp_19_fu_1225_p2, "tmp_19_fu_1225_p2");
    sc_trace(mVcdFile, tmp_19_reg_2112, "tmp_19_reg_2112");
    sc_trace(mVcdFile, ap_CS_fsm_state51, "ap_CS_fsm_state51");
    sc_trace(mVcdFile, tmp_48_reg_2119, "tmp_48_reg_2119");
    sc_trace(mVcdFile, mul7_fu_1242_p2, "mul7_fu_1242_p2");
    sc_trace(mVcdFile, mul7_reg_2125, "mul7_reg_2125");
    sc_trace(mVcdFile, ap_CS_fsm_state52, "ap_CS_fsm_state52");
    sc_trace(mVcdFile, deltaEnergy_fu_1293_p3, "deltaEnergy_fu_1293_p3");
    sc_trace(mVcdFile, deltaEnergy_reg_2131, "deltaEnergy_reg_2131");
    sc_trace(mVcdFile, ap_CS_fsm_state53, "ap_CS_fsm_state53");
    sc_trace(mVcdFile, tmp_20_fu_1300_p2, "tmp_20_fu_1300_p2");
    sc_trace(mVcdFile, tmp_20_reg_2138, "tmp_20_reg_2138");
    sc_trace(mVcdFile, temperature_load_1_reg_2142, "temperature_load_1_reg_2142");
    sc_trace(mVcdFile, ap_CS_fsm_state54, "ap_CS_fsm_state54");
    sc_trace(mVcdFile, Ny1_fu_1321_p2, "Ny1_fu_1321_p2");
    sc_trace(mVcdFile, Ny1_reg_2160, "Ny1_reg_2160");
    sc_trace(mVcdFile, ap_CS_fsm_state77, "ap_CS_fsm_state77");
    sc_trace(mVcdFile, x_assign_fu_1327_p1, "x_assign_fu_1327_p1");
    sc_trace(mVcdFile, x_assign_reg_2166, "x_assign_reg_2166");
    sc_trace(mVcdFile, ap_CS_fsm_state78, "ap_CS_fsm_state78");
    sc_trace(mVcdFile, sel_div_fu_1363_p3, "sel_div_fu_1363_p3");
    sc_trace(mVcdFile, sel_div_reg_2172, "sel_div_reg_2172");
    sc_trace(mVcdFile, Ny3_fu_1374_p2, "Ny3_fu_1374_p2");
    sc_trace(mVcdFile, Ny3_reg_2176, "Ny3_reg_2176");
    sc_trace(mVcdFile, sel_div1_fu_1412_p3, "sel_div1_fu_1412_p3");
    sc_trace(mVcdFile, sel_div1_reg_2182, "sel_div1_reg_2182");
    sc_trace(mVcdFile, ap_CS_fsm_state79, "ap_CS_fsm_state79");
    sc_trace(mVcdFile, mul1_fu_1423_p2, "mul1_fu_1423_p2");
    sc_trace(mVcdFile, mul1_reg_2186, "mul1_reg_2186");
    sc_trace(mVcdFile, tmp_65_reg_2191, "tmp_65_reg_2191");
    sc_trace(mVcdFile, tmp_67_reg_2197, "tmp_67_reg_2197");
    sc_trace(mVcdFile, p_v2_v_fu_1461_p3, "p_v2_v_fu_1461_p3");
    sc_trace(mVcdFile, p_v2_v_reg_2202, "p_v2_v_reg_2202");
    sc_trace(mVcdFile, ap_CS_fsm_state80, "ap_CS_fsm_state80");
    sc_trace(mVcdFile, tmp_43_i_fu_1486_p2, "tmp_43_i_fu_1486_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state81, "ap_CS_fsm_state81");
    sc_trace(mVcdFile, ret_V_4_fu_1595_p3, "ret_V_4_fu_1595_p3");
    sc_trace(mVcdFile, tmp_29_cast_fu_1896_p2, "tmp_29_cast_fu_1896_p2");
    sc_trace(mVcdFile, tmp_29_cast_reg_2221, "tmp_29_cast_reg_2221");
    sc_trace(mVcdFile, ap_CS_fsm_state116, "ap_CS_fsm_state116");
    sc_trace(mVcdFile, tmp_33_fu_1657_p2, "tmp_33_fu_1657_p2");
    sc_trace(mVcdFile, tmp_33_reg_2229, "tmp_33_reg_2229");
    sc_trace(mVcdFile, ap_CS_fsm_state117, "ap_CS_fsm_state117");
    sc_trace(mVcdFile, tmp_80_fu_1649_p3, "tmp_80_fu_1649_p3");
    sc_trace(mVcdFile, tmp_81_reg_2234, "tmp_81_reg_2234");
    sc_trace(mVcdFile, mul3_fu_1674_p2, "mul3_fu_1674_p2");
    sc_trace(mVcdFile, mul3_reg_2240, "mul3_reg_2240");
    sc_trace(mVcdFile, ap_CS_fsm_state118, "ap_CS_fsm_state118");
    sc_trace(mVcdFile, tmp_83_reg_2245, "tmp_83_reg_2245");
    sc_trace(mVcdFile, indvars_iv_next_fu_1770_p2, "indvars_iv_next_fu_1770_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state120, "ap_CS_fsm_state120");
    sc_trace(mVcdFile, tmp_35_fu_1737_p2, "tmp_35_fu_1737_p2");
    sc_trace(mVcdFile, or_cond_fu_1764_p2, "or_cond_fu_1764_p2");
    sc_trace(mVcdFile, i_V_2_fu_1782_p2, "i_V_2_fu_1782_p2");
    sc_trace(mVcdFile, i_V_2_reg_2264, "i_V_2_reg_2264");
    sc_trace(mVcdFile, ap_CS_fsm_state121, "ap_CS_fsm_state121");
    sc_trace(mVcdFile, ap_block_state121, "ap_block_state121");
    sc_trace(mVcdFile, exitcond_fu_1776_p2, "exitcond_fu_1776_p2");
    sc_trace(mVcdFile, output_last_V_fu_1793_p2, "output_last_V_fu_1793_p2");
    sc_trace(mVcdFile, output_last_V_reg_2274, "output_last_V_reg_2274");
    sc_trace(mVcdFile, tmp_85_reg_2279, "tmp_85_reg_2279");
    sc_trace(mVcdFile, mul4_fu_1811_p2, "mul4_fu_1811_p2");
    sc_trace(mVcdFile, mul4_reg_2285, "mul4_reg_2285");
    sc_trace(mVcdFile, ap_CS_fsm_state123, "ap_CS_fsm_state123");
    sc_trace(mVcdFile, tmp_87_reg_2290, "tmp_87_reg_2290");
    sc_trace(mVcdFile, fpga_output_V_fu_1882_p3, "fpga_output_V_fu_1882_p3");
    sc_trace(mVcdFile, matrix_address0, "matrix_address0");
    sc_trace(mVcdFile, matrix_ce0, "matrix_ce0");
    sc_trace(mVcdFile, matrix_we0, "matrix_we0");
    sc_trace(mVcdFile, matrix_d0, "matrix_d0");
    sc_trace(mVcdFile, currentSolution_address0, "currentSolution_address0");
    sc_trace(mVcdFile, currentSolution_ce0, "currentSolution_ce0");
    sc_trace(mVcdFile, currentSolution_we0, "currentSolution_we0");
    sc_trace(mVcdFile, currentSolution_d0, "currentSolution_d0");
    sc_trace(mVcdFile, invdar_reg_369, "invdar_reg_369");
    sc_trace(mVcdFile, tmp_2_fu_588_p2, "tmp_2_fu_588_p2");
    sc_trace(mVcdFile, tmp_3_fu_594_p2, "tmp_3_fu_594_p2");
    sc_trace(mVcdFile, invdar1_reg_381, "invdar1_reg_381");
    sc_trace(mVcdFile, t_V_reg_392, "t_V_reg_392");
    sc_trace(mVcdFile, t_V_1_reg_403, "t_V_1_reg_403");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, invdar2_reg_414, "invdar2_reg_414");
    sc_trace(mVcdFile, tmp_4_fu_735_p2, "tmp_4_fu_735_p2");
    sc_trace(mVcdFile, p_s_reg_425, "p_s_reg_425");
    sc_trace(mVcdFile, exitcond3_fu_741_p2, "exitcond3_fu_741_p2");
    sc_trace(mVcdFile, indvars_iv_reg_436, "indvars_iv_reg_436");
    sc_trace(mVcdFile, p_4_reg_448, "p_4_reg_448");
    sc_trace(mVcdFile, p_6_reg_459, "p_6_reg_459");
    sc_trace(mVcdFile, localFieldVal_reg_470, "localFieldVal_reg_470");
    sc_trace(mVcdFile, prob_reg_482, "prob_reg_482");
    sc_trace(mVcdFile, t_V_2_reg_500, "t_V_2_reg_500");
    sc_trace(mVcdFile, tmp_27_cast_fu_583_p1, "tmp_27_cast_fu_583_p1");
    sc_trace(mVcdFile, tmp_40_cast_fu_716_p1, "tmp_40_cast_fu_716_p1");
    sc_trace(mVcdFile, tmp_s_fu_730_p1, "tmp_s_fu_730_p1");
    sc_trace(mVcdFile, tmp_13_fu_868_p1, "tmp_13_fu_868_p1");
    sc_trace(mVcdFile, tmp_58_cast_fu_1132_p1, "tmp_58_cast_fu_1132_p1");
    sc_trace(mVcdFile, tmp_21_fu_1118_p1, "tmp_21_fu_1118_p1");
    sc_trace(mVcdFile, tmp_38_fu_1788_p1, "tmp_38_fu_1788_p1");
    sc_trace(mVcdFile, ret_V_1_fu_845_p3, "ret_V_1_fu_845_p3");
    sc_trace(mVcdFile, tmp_keep_V_fu_234, "tmp_keep_V_fu_234");
    sc_trace(mVcdFile, tmp_strb_V_fu_238, "tmp_strb_V_fu_238");
    sc_trace(mVcdFile, tmp_user_V_fu_242, "tmp_user_V_fu_242");
    sc_trace(mVcdFile, tmp_id_V_fu_246, "tmp_id_V_fu_246");
    sc_trace(mVcdFile, tmp_dest_V_fu_250, "tmp_dest_V_fu_250");
    sc_trace(mVcdFile, temperature_fu_254, "temperature_fu_254");
    sc_trace(mVcdFile, tmp_34_fu_1725_p3, "tmp_34_fu_1725_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state119, "ap_CS_fsm_state119");
    sc_trace(mVcdFile, tmp_12_cast_cast_fu_720_p1, "tmp_12_cast_cast_fu_720_p1");
    sc_trace(mVcdFile, tmp_15_cast_cast_fu_859_p3, "tmp_15_cast_cast_fu_859_p3");
    sc_trace(mVcdFile, tmp_25_fu_1623_p2, "tmp_25_fu_1623_p2");
    sc_trace(mVcdFile, tmp_26_fu_1629_p2, "tmp_26_fu_1629_p2");
    sc_trace(mVcdFile, tmp_fu_538_p3, "tmp_fu_538_p3");
    sc_trace(mVcdFile, tmp_9_fu_550_p3, "tmp_9_fu_550_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_546_p1, "p_shl_cast_fu_546_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_558_p1, "p_shl1_cast_fu_558_p1");
    sc_trace(mVcdFile, tmp_1_cast_fu_574_p1, "tmp_1_cast_fu_574_p1");
    sc_trace(mVcdFile, tmp_5_fu_578_p2, "tmp_5_fu_578_p2");
    sc_trace(mVcdFile, tmp_6_fu_612_p3, "tmp_6_fu_612_p3");
    sc_trace(mVcdFile, tmp_7_fu_624_p3, "tmp_7_fu_624_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_620_p1, "p_shl2_cast_fu_620_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_632_p1, "p_shl3_cast_fu_632_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_682_p1, "tmp_12_cast_fu_682_p1");
    sc_trace(mVcdFile, tmp_44_i_fu_763_p4, "tmp_44_i_fu_763_p4");
    sc_trace(mVcdFile, tmp_i_fu_753_p4, "tmp_i_fu_753_p4");
    sc_trace(mVcdFile, tmp_45_i_fu_773_p4, "tmp_45_i_fu_773_p4");
    sc_trace(mVcdFile, tmp_47_i_fu_783_p4, "tmp_47_i_fu_783_p4");
    sc_trace(mVcdFile, tmp2_fu_807_p2, "tmp2_fu_807_p2");
    sc_trace(mVcdFile, tmp1_fu_801_p2, "tmp1_fu_801_p2");
    sc_trace(mVcdFile, ret_V_i_fu_813_p2, "ret_V_i_fu_813_p2");
    sc_trace(mVcdFile, tmp_23_fu_819_p1, "tmp_23_fu_819_p1");
    sc_trace(mVcdFile, tmp_27_fu_823_p3, "tmp_27_fu_823_p3");
    sc_trace(mVcdFile, grp_fu_515_p4, "grp_fu_515_p4");
    sc_trace(mVcdFile, tmp_30_fu_837_p3, "tmp_30_fu_837_p3");
    sc_trace(mVcdFile, tmp_28_fu_831_p2, "tmp_28_fu_831_p2");
    sc_trace(mVcdFile, tmp_12_fu_793_p3, "tmp_12_fu_793_p3");
    sc_trace(mVcdFile, tmp_44_i1_fu_900_p4, "tmp_44_i1_fu_900_p4");
    sc_trace(mVcdFile, tmp_i1_fu_890_p4, "tmp_i1_fu_890_p4");
    sc_trace(mVcdFile, tmp_45_i1_fu_910_p4, "tmp_45_i1_fu_910_p4");
    sc_trace(mVcdFile, tmp_47_i1_fu_920_p4, "tmp_47_i1_fu_920_p4");
    sc_trace(mVcdFile, tmp4_fu_936_p2, "tmp4_fu_936_p2");
    sc_trace(mVcdFile, tmp3_fu_930_p2, "tmp3_fu_930_p2");
    sc_trace(mVcdFile, ret_V_i1_fu_942_p2, "ret_V_i1_fu_942_p2");
    sc_trace(mVcdFile, tmp_39_fu_962_p1, "tmp_39_fu_962_p1");
    sc_trace(mVcdFile, tmp_40_fu_984_p1, "tmp_40_fu_984_p1");
    sc_trace(mVcdFile, tmp_41_fu_1006_p1, "tmp_41_fu_1006_p1");
    sc_trace(mVcdFile, tmp_36_fu_948_p1, "tmp_36_fu_948_p1");
    sc_trace(mVcdFile, tmp_42_fu_1018_p3, "tmp_42_fu_1018_p3");
    sc_trace(mVcdFile, tmp_31_fu_1010_p3, "tmp_31_fu_1010_p3");
    sc_trace(mVcdFile, tmp_29_fu_996_p4, "tmp_29_fu_996_p4");
    sc_trace(mVcdFile, tmp_24_fu_988_p3, "tmp_24_fu_988_p3");
    sc_trace(mVcdFile, tmp_17_fu_974_p4, "tmp_17_fu_974_p4");
    sc_trace(mVcdFile, tmp_16_fu_966_p3, "tmp_16_fu_966_p3");
    sc_trace(mVcdFile, tmp_15_fu_952_p4, "tmp_15_fu_952_p4");
    sc_trace(mVcdFile, grp_fu_1066_p0, "grp_fu_1066_p0");
    sc_trace(mVcdFile, grp_fu_1066_p1, "grp_fu_1066_p1");
    sc_trace(mVcdFile, grp_fu_1066_p2, "grp_fu_1066_p2");
    sc_trace(mVcdFile, tmp_45_fu_1076_p1, "tmp_45_fu_1076_p1");
    sc_trace(mVcdFile, tmp_46_fu_1088_p1, "tmp_46_fu_1088_p1");
    sc_trace(mVcdFile, p_shl4_cast_fu_1080_p3, "p_shl4_cast_fu_1080_p3");
    sc_trace(mVcdFile, p_shl5_cast_fu_1092_p3, "p_shl5_cast_fu_1092_p3");
    sc_trace(mVcdFile, tmp_21_cast_fu_1123_p1, "tmp_21_cast_fu_1123_p1");
    sc_trace(mVcdFile, tmp_54_fu_1127_p2, "tmp_54_fu_1127_p2");
    sc_trace(mVcdFile, tmp_22_fu_1140_p0, "tmp_22_fu_1140_p0");
    sc_trace(mVcdFile, mul_fu_1157_p0, "mul_fu_1157_p0");
    sc_trace(mVcdFile, neg_mul_fu_1173_p2, "neg_mul_fu_1173_p2");
    sc_trace(mVcdFile, tmp_56_fu_1178_p4, "tmp_56_fu_1178_p4");
    sc_trace(mVcdFile, p_v1_v_fu_1188_p3, "p_v1_v_fu_1188_p3");
    sc_trace(mVcdFile, trunc_fu_1194_p1, "trunc_fu_1194_p1");
    sc_trace(mVcdFile, neg_ti_fu_1198_p2, "neg_ti_fu_1198_p2");
    sc_trace(mVcdFile, tmp_58_fu_1204_p1, "tmp_58_fu_1204_p1");
    sc_trace(mVcdFile, tmp_59_fu_1208_p3, "tmp_59_fu_1208_p3");
    sc_trace(mVcdFile, tmp_19_fu_1225_p1, "tmp_19_fu_1225_p1");
    sc_trace(mVcdFile, mul7_fu_1242_p0, "mul7_fu_1242_p0");
    sc_trace(mVcdFile, neg_mul8_fu_1248_p2, "neg_mul8_fu_1248_p2");
    sc_trace(mVcdFile, tmp_49_fu_1253_p4, "tmp_49_fu_1253_p4");
    sc_trace(mVcdFile, tmp_51_fu_1267_p4, "tmp_51_fu_1267_p4");
    sc_trace(mVcdFile, tmp_50_fu_1263_p1, "tmp_50_fu_1263_p1");
    sc_trace(mVcdFile, tmp_52_fu_1276_p1, "tmp_52_fu_1276_p1");
    sc_trace(mVcdFile, tmp_53_fu_1280_p3, "tmp_53_fu_1280_p3");
    sc_trace(mVcdFile, neg_ti1_fu_1287_p2, "neg_ti1_fu_1287_p2");
    sc_trace(mVcdFile, tmp_61_fu_1308_p0, "tmp_61_fu_1308_p0");
    sc_trace(mVcdFile, grp_fu_1312_p0, "grp_fu_1312_p0");
    sc_trace(mVcdFile, grp_fu_1312_p1, "grp_fu_1312_p1");
    sc_trace(mVcdFile, Ny1_fu_1321_p0, "Ny1_fu_1321_p0");
    sc_trace(mVcdFile, grp_fu_1312_p2, "grp_fu_1312_p2");
    sc_trace(mVcdFile, x_fu_1338_p1, "x_fu_1338_p1");
    sc_trace(mVcdFile, slt_fu_1341_p2, "slt_fu_1341_p2");
    sc_trace(mVcdFile, slt1_fu_1352_p2, "slt1_fu_1352_p2");
    sc_trace(mVcdFile, tmp_63_fu_1331_p3, "tmp_63_fu_1331_p3");
    sc_trace(mVcdFile, rev_fu_1346_p2, "rev_fu_1346_p2");
    sc_trace(mVcdFile, rev1_fu_1357_p2, "rev1_fu_1357_p2");
    sc_trace(mVcdFile, Ny3_fu_1374_p0, "Ny3_fu_1374_p0");
    sc_trace(mVcdFile, x1_fu_1387_p1, "x1_fu_1387_p1");
    sc_trace(mVcdFile, slt2_fu_1390_p2, "slt2_fu_1390_p2");
    sc_trace(mVcdFile, slt3_fu_1401_p2, "slt3_fu_1401_p2");
    sc_trace(mVcdFile, tmp_64_fu_1380_p3, "tmp_64_fu_1380_p3");
    sc_trace(mVcdFile, rev2_fu_1395_p2, "rev2_fu_1395_p2");
    sc_trace(mVcdFile, rev3_fu_1406_p2, "rev3_fu_1406_p2");
    sc_trace(mVcdFile, mul1_fu_1423_p0, "mul1_fu_1423_p0");
    sc_trace(mVcdFile, neg_mul1_fu_1446_p2, "neg_mul1_fu_1446_p2");
    sc_trace(mVcdFile, tmp_66_fu_1451_p4, "tmp_66_fu_1451_p4");
    sc_trace(mVcdFile, trunc1_fu_1467_p1, "trunc1_fu_1467_p1");
    sc_trace(mVcdFile, neg_ti2_fu_1470_p2, "neg_ti2_fu_1470_p2");
    sc_trace(mVcdFile, tmp_68_fu_1476_p1, "tmp_68_fu_1476_p1");
    sc_trace(mVcdFile, tmp_69_fu_1479_p3, "tmp_69_fu_1479_p3");
    sc_trace(mVcdFile, tmp_70_fu_1510_p4, "tmp_70_fu_1510_p4");
    sc_trace(mVcdFile, tmp_71_fu_1535_p4, "tmp_71_fu_1535_p4");
    sc_trace(mVcdFile, tmp_44_i2_fu_1501_p4, "tmp_44_i2_fu_1501_p4");
    sc_trace(mVcdFile, tmp_i3_fu_1492_p4, "tmp_i3_fu_1492_p4");
    sc_trace(mVcdFile, tmp_45_i2_fu_1519_p3, "tmp_45_i2_fu_1519_p3");
    sc_trace(mVcdFile, tmp_47_i2_fu_1526_p4, "tmp_47_i2_fu_1526_p4");
    sc_trace(mVcdFile, tmp6_fu_1557_p2, "tmp6_fu_1557_p2");
    sc_trace(mVcdFile, tmp5_fu_1551_p2, "tmp5_fu_1551_p2");
    sc_trace(mVcdFile, ret_V_i2_fu_1563_p2, "ret_V_i2_fu_1563_p2");
    sc_trace(mVcdFile, tmp_72_fu_1569_p1, "tmp_72_fu_1569_p1");
    sc_trace(mVcdFile, tmp_73_fu_1573_p3, "tmp_73_fu_1573_p3");
    sc_trace(mVcdFile, r_V_2_fu_1544_p3, "r_V_2_fu_1544_p3");
    sc_trace(mVcdFile, tmp_75_fu_1587_p3, "tmp_75_fu_1587_p3");
    sc_trace(mVcdFile, tmp_74_fu_1581_p2, "tmp_74_fu_1581_p2");
    sc_trace(mVcdFile, grp_fu_1609_p0, "grp_fu_1609_p0");
    sc_trace(mVcdFile, grp_fu_1609_p1, "grp_fu_1609_p1");
    sc_trace(mVcdFile, grp_fu_1609_p2, "grp_fu_1609_p2");
    sc_trace(mVcdFile, tmp_76_fu_1619_p1, "tmp_76_fu_1619_p1");
    sc_trace(mVcdFile, prob_cast_fu_1615_p1, "prob_cast_fu_1615_p1");
    sc_trace(mVcdFile, mul2_fu_1643_p0, "mul2_fu_1643_p0");
    sc_trace(mVcdFile, mul2_fu_1643_p2, "mul2_fu_1643_p2");
    sc_trace(mVcdFile, tmp_33_fu_1657_p0, "tmp_33_fu_1657_p0");
    sc_trace(mVcdFile, mul3_fu_1674_p0, "mul3_fu_1674_p0");
    sc_trace(mVcdFile, neg_mul2_fu_1690_p2, "neg_mul2_fu_1690_p2");
    sc_trace(mVcdFile, tmp_82_fu_1695_p4, "tmp_82_fu_1695_p4");
    sc_trace(mVcdFile, tmp_77_fu_1705_p1, "tmp_77_fu_1705_p1");
    sc_trace(mVcdFile, tmp_78_fu_1709_p1, "tmp_78_fu_1709_p1");
    sc_trace(mVcdFile, tmp_79_fu_1712_p3, "tmp_79_fu_1712_p3");
    sc_trace(mVcdFile, neg_ti3_fu_1719_p2, "neg_ti3_fu_1719_p2");
    sc_trace(mVcdFile, tmp_84_fu_1743_p4, "tmp_84_fu_1743_p4");
    sc_trace(mVcdFile, icmp_fu_1753_p2, "icmp_fu_1753_p2");
    sc_trace(mVcdFile, tmp_37_fu_1759_p2, "tmp_37_fu_1759_p2");
    sc_trace(mVcdFile, tmp_85_fu_1799_p1, "tmp_85_fu_1799_p1");
    sc_trace(mVcdFile, mul4_fu_1811_p1, "mul4_fu_1811_p1");
    sc_trace(mVcdFile, neg_mul3_fu_1847_p2, "neg_mul3_fu_1847_p2");
    sc_trace(mVcdFile, tmp_86_fu_1852_p4, "tmp_86_fu_1852_p4");
    sc_trace(mVcdFile, p_v_v_fu_1862_p3, "p_v_v_fu_1862_p3");
    sc_trace(mVcdFile, tmp_88_fu_1868_p1, "tmp_88_fu_1868_p1");
    sc_trace(mVcdFile, neg_ti4_fu_1872_p2, "neg_ti4_fu_1872_p2");
    sc_trace(mVcdFile, tmp_89_fu_1878_p1, "tmp_89_fu_1878_p1");
    sc_trace(mVcdFile, tmp_10_fu_1890_p1, "tmp_10_fu_1890_p1");
    sc_trace(mVcdFile, tmp_29_cast_fu_1896_p0, "tmp_29_cast_fu_1896_p0");
    sc_trace(mVcdFile, tmp_29_cast_fu_1896_p1, "tmp_29_cast_fu_1896_p1");
    sc_trace(mVcdFile, grp_fu_1066_ap_start, "grp_fu_1066_ap_start");
    sc_trace(mVcdFile, grp_fu_1066_ap_done, "grp_fu_1066_ap_done");
    sc_trace(mVcdFile, grp_fu_1312_ap_start, "grp_fu_1312_ap_start");
    sc_trace(mVcdFile, grp_fu_1312_ap_done, "grp_fu_1312_ap_done");
    sc_trace(mVcdFile, grp_fu_1609_ap_start, "grp_fu_1609_ap_start");
    sc_trace(mVcdFile, grp_fu_1609_ap_done, "grp_fu_1609_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul2_fu_1643_p00, "mul2_fu_1643_p00");
    sc_trace(mVcdFile, tmp_29_cast_fu_1896_p00, "tmp_29_cast_fu_1896_p00");
#endif

    }
    mHdltvinHandle.open("maxCut.hdltvin.dat");
    mHdltvoutHandle.open("maxCut.hdltvout.dat");
}

maxCut::~maxCut() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete maxCut_AXILiteS_s_axi_U;
    delete matrix_U;
    delete currentSolution_U;
    delete maxCut_srem_32ns_cud_U1;
    delete maxCut_sdiv_21ns_dEe_U2;
    delete maxCut_urem_32ns_eOg_U3;
    delete maxCut_mul_mul_8sfYi_U4;
    delete maxCut_mul_mul_14g8j_U5;
}

void maxCut::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void maxCut::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_741_p2.read()))) {
        indvars_iv_reg_436 = ap_const_lv14_4;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_reg_2007.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_35_fu_1737_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_1764_p2.read()))) {
        indvars_iv_reg_436 = indvars_iv_next_fu_1770_p2.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_vld_out.read()))) {
            input_stream_V_data_V_0_sel_rd =  (sc_logic) (~input_stream_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_ack_in.read()))) {
            input_stream_V_data_V_0_sel_wr =  (sc_logic) (~input_stream_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            input_stream_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            input_stream_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_ack_out.read()))))) {
            input_stream_V_data_V_0_state = ap_const_lv2_3;
        } else {
            input_stream_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_dest_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_vld_out.read()))) {
            input_stream_V_dest_V_0_sel_rd =  (sc_logic) (~input_stream_V_dest_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_dest_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_ack_in.read()))) {
            input_stream_V_dest_V_0_sel_wr =  (sc_logic) (~input_stream_V_dest_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_dest_V_0_state.read())))) {
            input_stream_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_dest_V_0_state.read())))) {
            input_stream_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_ack_out.read()))))) {
            input_stream_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            input_stream_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_id_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_vld_out.read()))) {
            input_stream_V_id_V_0_sel_rd =  (sc_logic) (~input_stream_V_id_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_id_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_ack_in.read()))) {
            input_stream_V_id_V_0_sel_wr =  (sc_logic) (~input_stream_V_id_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_id_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_id_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_id_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_id_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_id_V_0_state.read())))) {
            input_stream_V_id_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_id_V_0_state.read())))) {
            input_stream_V_id_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_id_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_id_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_id_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_ack_out.read()))))) {
            input_stream_V_id_V_0_state = ap_const_lv2_3;
        } else {
            input_stream_V_id_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_vld_out.read()))) {
            input_stream_V_keep_V_0_sel_rd =  (sc_logic) (~input_stream_V_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_ack_in.read()))) {
            input_stream_V_keep_V_0_sel_wr =  (sc_logic) (~input_stream_V_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_keep_V_0_state.read())))) {
            input_stream_V_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_keep_V_0_state.read())))) {
            input_stream_V_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_ack_out.read()))))) {
            input_stream_V_keep_V_0_state = ap_const_lv2_3;
        } else {
            input_stream_V_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_strb_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_vld_out.read()))) {
            input_stream_V_strb_V_0_sel_rd =  (sc_logic) (~input_stream_V_strb_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_strb_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_ack_in.read()))) {
            input_stream_V_strb_V_0_sel_wr =  (sc_logic) (~input_stream_V_strb_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_strb_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_strb_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_strb_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_strb_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_strb_V_0_state.read())))) {
            input_stream_V_strb_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_strb_V_0_state.read())))) {
            input_stream_V_strb_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_strb_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_strb_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_ack_out.read()))))) {
            input_stream_V_strb_V_0_state = ap_const_lv2_3;
        } else {
            input_stream_V_strb_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_vld_out.read()))) {
            input_stream_V_user_V_0_sel_rd =  (sc_logic) (~input_stream_V_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_ack_in.read()))) {
            input_stream_V_user_V_0_sel_wr =  (sc_logic) (~input_stream_V_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_user_V_0_state.read())))) {
            input_stream_V_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_user_V_0_state.read())))) {
            input_stream_V_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_ack_out.read()))))) {
            input_stream_V_user_V_0_state = ap_const_lv2_3;
        } else {
            input_stream_V_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_588_p2.read()))) {
        invdar1_reg_381 = indvarinc1_fu_568_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        invdar1_reg_381 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_600_p2.read()))) {
        invdar2_reg_414 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_735_p2.read()))) {
        invdar2_reg_414 = indvarinc2_fu_724_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_588_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_594_p2.read()))) {
        invdar_reg_369 = indvarinc_reg_1902.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        invdar_reg_369 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        localFieldVal_reg_470 = localFieldVal_1_fu_1215_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        localFieldVal_reg_470 = ap_const_lv22_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_vld_out.read()))) {
            output_stream_V_data_V_1_sel_rd =  (sc_logic) (~output_stream_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_ack_in.read()))) {
            output_stream_V_data_V_1_sel_wr =  (sc_logic) (~output_stream_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_data_V_1_state.read())))) {
            output_stream_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_data_V_1_state.read())))) {
            output_stream_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_ack_out.read()))))) {
            output_stream_V_data_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_vld_out.read()))) {
            output_stream_V_dest_V_1_sel_rd =  (sc_logic) (~output_stream_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_dest_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_ack_in.read()))) {
            output_stream_V_dest_V_1_sel_wr =  (sc_logic) (~output_stream_V_dest_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_dest_V_1_state.read())))) {
            output_stream_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_dest_V_1_state.read())))) {
            output_stream_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_ack_out.read()))))) {
            output_stream_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_vld_out.read()))) {
            output_stream_V_id_V_1_sel_rd =  (sc_logic) (~output_stream_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_id_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_ack_in.read()))) {
            output_stream_V_id_V_1_sel_wr =  (sc_logic) (~output_stream_V_id_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_id_V_1_state.read())))) {
            output_stream_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_id_V_1_state.read())))) {
            output_stream_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_ack_out.read()))))) {
            output_stream_V_id_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_vld_out.read()))) {
            output_stream_V_keep_V_1_sel_rd =  (sc_logic) (~output_stream_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_ack_in.read()))) {
            output_stream_V_keep_V_1_sel_wr =  (sc_logic) (~output_stream_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_keep_V_1_state.read())))) {
            output_stream_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_keep_V_1_state.read())))) {
            output_stream_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_ack_out.read()))))) {
            output_stream_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_vld_out.read()))) {
            output_stream_V_last_V_1_sel_rd =  (sc_logic) (~output_stream_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_ack_in.read()))) {
            output_stream_V_last_V_1_sel_wr =  (sc_logic) (~output_stream_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_last_V_1_state.read())))) {
            output_stream_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_last_V_1_state.read())))) {
            output_stream_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_ack_out.read()))))) {
            output_stream_V_last_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_vld_out.read()))) {
            output_stream_V_strb_V_1_sel_rd =  (sc_logic) (~output_stream_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_strb_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_ack_in.read()))) {
            output_stream_V_strb_V_1_sel_wr =  (sc_logic) (~output_stream_V_strb_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_strb_V_1_state.read())))) {
            output_stream_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_strb_V_1_state.read())))) {
            output_stream_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_ack_out.read()))))) {
            output_stream_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_vld_out.read()))) {
            output_stream_V_user_V_1_sel_rd =  (sc_logic) (~output_stream_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_ack_in.read()))) {
            output_stream_V_user_V_1_sel_wr =  (sc_logic) (~output_stream_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_user_V_1_state.read())))) {
            output_stream_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_user_V_1_state.read())))) {
            output_stream_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_ack_out.read()))))) {
            output_stream_V_user_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_741_p2.read()))) {
        p_4_reg_448 = ap_const_lv12_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_reg_2007.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_35_fu_1737_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_1764_p2.read()))) {
        p_4_reg_448 = iterate_V_reg_2011.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        p_6_reg_459 = j_V_1_reg_2061.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        p_6_reg_459 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_735_p2.read()))) {
        p_s_reg_425 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_741_p2.read()))) {
        p_s_reg_425 = i_V_1_fu_747_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, sel_div_fu_1363_p3.read()))) {
        prob_reg_482 = ap_const_lv14_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_20_reg_2138.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, sel_div_reg_2172.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, sel_div1_reg_2182.read()))) {
        prob_reg_482 = tmp_43_i_fu_1486_p2.read();
    } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_fu_1300_p2.read())) || 
                (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, sel_div1_fu_1412_p3.read())))) {
        prob_reg_482 = ap_const_lv14_2710;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        reg_V = ret_V_4_fu_1595_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_741_p2.read()))) {
        reg_V = ret_V_1_fu_845_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_600_p2.read()))) {
        t_V_1_reg_403 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_V_1_reg_403 = j_V_reg_1969.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        t_V_2_reg_500 = i_V_2_reg_2264.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read()) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_1764_p2.read()) || 
                  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_35_fu_1737_p2.read())) || 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_2007.read())))) {
        t_V_2_reg_500 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_642_p2.read()))) {
        t_V_reg_392 = i_V_reg_1956.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_588_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_594_p2.read()))) {
        t_V_reg_392 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state119.read())) {
        temperature_fu_254 = tmp_34_fu_1725_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_741_p2.read()))) {
        temperature_fu_254 = ap_const_lv32_30D40;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state77.read())) {
        Ny1_reg_2160 = Ny1_fu_1321_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, sel_div_fu_1363_p3.read()))) {
        Ny3_reg_2176 = Ny3_fu_1374_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_1106_p2.read()))) {
        currentSolution_addr_2_reg_2076 =  (sc_lv<3>) (tmp_18_reg_2048.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read())) {
        deltaEnergy_reg_2131 = deltaEnergy_fu_1293_p3.read();
        tmp_20_reg_2138 = tmp_20_fu_1300_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read())))) {
        i_V_2_reg_2264 = i_V_2_fu_1782_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_V_reg_1956 = i_V_fu_606_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        indvarinc_reg_1902 = indvarinc_fu_532_p2.read();
        tmp_1_reg_1907 = tmp_1_fu_562_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_load_A.read())) {
        input_stream_V_data_V_0_payload_A = input_stream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_load_B.read())) {
        input_stream_V_data_V_0_payload_B = input_stream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_load_A.read())) {
        input_stream_V_dest_V_0_payload_A = input_stream_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_load_B.read())) {
        input_stream_V_dest_V_0_payload_B = input_stream_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_load_A.read())) {
        input_stream_V_id_V_0_payload_A = input_stream_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_load_B.read())) {
        input_stream_V_id_V_0_payload_B = input_stream_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_load_A.read())) {
        input_stream_V_keep_V_0_payload_A = input_stream_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_load_B.read())) {
        input_stream_V_keep_V_0_payload_B = input_stream_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_load_A.read())) {
        input_stream_V_strb_V_0_payload_A = input_stream_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_load_B.read())) {
        input_stream_V_strb_V_0_payload_B = input_stream_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_load_A.read())) {
        input_stream_V_user_V_0_payload_A = input_stream_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_load_B.read())) {
        input_stream_V_user_V_0_payload_B = input_stream_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        iterate_V_reg_2011 = iterate_V_fu_884_p2.read();
        tmp_14_reg_2007 = tmp_14_fu_878_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        j_V_1_reg_2061 = j_V_1_fu_1112_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        j_V_reg_1969 = j_V_fu_648_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        matrix_load_reg_2081 = matrix_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, sel_div1_fu_1412_p3.read()))) {
        mul1_reg_2186 = mul1_fu_1423_p2.read();
        tmp_65_reg_2191 = x_assign_reg_2166.read().range(31, 31);
        tmp_67_reg_2197 = mul1_fu_1423_p2.read().range(46, 36);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state118.read())) {
        mul3_reg_2240 = mul3_fu_1674_p2.read();
        tmp_83_reg_2245 = mul3_fu_1674_p2.read().range(64, 49);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read())) {
        mul4_reg_2285 = mul4_fu_1811_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state52.read())) {
        mul7_reg_2125 = mul7_fu_1242_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        mul_reg_2097 = mul_fu_1157_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1776_p2.read()))) {
        output_last_V_reg_2274 = output_last_V_fu_1793_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_load_A.read())) {
        output_stream_V_data_V_1_payload_A = fpga_output_V_fu_1882_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_load_B.read())) {
        output_stream_V_data_V_1_payload_B = fpga_output_V_fu_1882_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_load_A.read())) {
        output_stream_V_dest_V_1_payload_A = tmp_dest_V_fu_250.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_load_B.read())) {
        output_stream_V_dest_V_1_payload_B = tmp_dest_V_fu_250.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_load_A.read())) {
        output_stream_V_id_V_1_payload_A = tmp_id_V_fu_246.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_load_B.read())) {
        output_stream_V_id_V_1_payload_B = tmp_id_V_fu_246.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_load_A.read())) {
        output_stream_V_keep_V_1_payload_A = tmp_keep_V_fu_234.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_load_B.read())) {
        output_stream_V_keep_V_1_payload_B = tmp_keep_V_fu_234.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_load_A.read())) {
        output_stream_V_last_V_1_payload_A = output_last_V_reg_2274.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_load_B.read())) {
        output_stream_V_last_V_1_payload_B = output_last_V_reg_2274.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_load_A.read())) {
        output_stream_V_strb_V_1_payload_A = tmp_strb_V_fu_238.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_load_B.read())) {
        output_stream_V_strb_V_1_payload_B = tmp_strb_V_fu_238.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_load_A.read())) {
        output_stream_V_user_V_1_payload_A = tmp_user_V_fu_242.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_load_B.read())) {
        output_stream_V_user_V_1_payload_B = tmp_user_V_fu_242.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state80.read())) {
        p_v2_v_reg_2202 = p_v2_v_fu_1461_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state122.read()))) {
        reg_528 = currentSolution_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_878_p2.read()))) {
        ret_V_4_cast1_reg_2033 = ret_V_4_cast1_fu_1048_p2.read();
        ret_V_4_cast9_reg_2038 = ret_V_4_cast9_fu_1054_p2.read();
        ret_V_4_cast_reg_2043 = ret_V_4_cast_fu_1060_p2.read();
        tmp_43_reg_2016 = tmp_43_fu_1026_p2.read();
        tmp_44_reg_2022 = ret_V_i1_fu_942_p2.read().range(16, 16);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read())) {
        sel_div1_reg_2182 = sel_div1_fu_1412_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read())) {
        sel_div_reg_2172 = sel_div_fu_1363_p3.read();
        x_assign_reg_2166 = x_assign_fu_1327_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        temperature_load_1_reg_2142 = temperature_fu_254.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        tmp_10_reg_1974 = tmp_10_fu_1890_p2.read();
        tmp_11_reg_1979 = tmp_11_fu_686_p2.read();
        tmp_dest_V_fu_250 = input_stream_V_dest_V_0_data_out.read();
        tmp_id_V_fu_246 = input_stream_V_id_V_0_data_out.read();
        tmp_keep_V_fu_234 = input_stream_V_keep_V_0_data_out.read();
        tmp_strb_V_fu_238 = input_stream_V_strb_V_0_data_out.read();
        tmp_user_V_fu_242 = input_stream_V_user_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        tmp_18_reg_2048 = tmp_18_fu_1072_p1.read();
        tmp_47_reg_2053 = tmp_47_fu_1100_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state51.read())) {
        tmp_19_reg_2112 = tmp_19_fu_1225_p2.read();
        tmp_48_reg_2119 = tmp_19_fu_1225_p2.read().range(31, 31);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        tmp_22_reg_2086 = tmp_22_fu_1140_p2.read();
        tmp_55_reg_2091 = tmp_22_fu_1140_p2.read().range(31, 31);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state116.read())) {
        tmp_29_cast_reg_2221 = tmp_29_cast_fu_1896_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state117.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_80_fu_1649_p3.read()))) {
        tmp_33_reg_2229 = tmp_33_fu_1657_p2.read();
        tmp_81_reg_2234 = tmp_33_fu_1657_p2.read().range(31, 31);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_55_reg_2091.read()))) {
        tmp_57_reg_2102 = mul_fu_1157_p2.read().range(64, 46);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state122.read())) {
        tmp_85_reg_2279 = tmp_85_fu_1799_p1.read().range(31, 31);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_85_reg_2279.read()))) {
        tmp_87_reg_2290 = mul4_fu_1811_p2.read().range(64, 46);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_600_p2.read()))) {
        tmp_8_reg_1961 = tmp_8_fu_636_p2.read();
    }
}

void maxCut::thread_Ny1_fu_1321_p0() {
    Ny1_fu_1321_p0 = temperature_load_1_reg_2142.read();
}

void maxCut::thread_Ny1_fu_1321_p2() {
    Ny1_fu_1321_p2 = (!Ny1_fu_1321_p0.read().is_01() || !ap_const_lv47_2711.is_01())? sc_lv<47>(): sc_bigint<32>(Ny1_fu_1321_p0.read()) * sc_biguint<47>(ap_const_lv47_2711);
}

void maxCut::thread_Ny3_fu_1374_p0() {
    Ny3_fu_1374_p0 = temperature_load_1_reg_2142.read();
}

void maxCut::thread_Ny3_fu_1374_p2() {
    Ny3_fu_1374_p2 = (!Ny3_fu_1374_p0.read().is_01() || !ap_const_lv47_7FFFFFFFD8EF.is_01())? sc_lv<47>(): sc_bigint<32>(Ny3_fu_1374_p0.read()) * sc_bigint<47>(ap_const_lv47_7FFFFFFFD8EF);
}

void maxCut::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void maxCut::thread_ap_CS_fsm_state116() {
    ap_CS_fsm_state116 = ap_CS_fsm.read()[115];
}

void maxCut::thread_ap_CS_fsm_state117() {
    ap_CS_fsm_state117 = ap_CS_fsm.read()[116];
}

void maxCut::thread_ap_CS_fsm_state118() {
    ap_CS_fsm_state118 = ap_CS_fsm.read()[117];
}

void maxCut::thread_ap_CS_fsm_state119() {
    ap_CS_fsm_state119 = ap_CS_fsm.read()[118];
}

void maxCut::thread_ap_CS_fsm_state120() {
    ap_CS_fsm_state120 = ap_CS_fsm.read()[119];
}

void maxCut::thread_ap_CS_fsm_state121() {
    ap_CS_fsm_state121 = ap_CS_fsm.read()[120];
}

void maxCut::thread_ap_CS_fsm_state122() {
    ap_CS_fsm_state122 = ap_CS_fsm.read()[121];
}

void maxCut::thread_ap_CS_fsm_state123() {
    ap_CS_fsm_state123 = ap_CS_fsm.read()[122];
}

void maxCut::thread_ap_CS_fsm_state124() {
    ap_CS_fsm_state124 = ap_CS_fsm.read()[123];
}

void maxCut::thread_ap_CS_fsm_state125() {
    ap_CS_fsm_state125 = ap_CS_fsm.read()[124];
}

void maxCut::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void maxCut::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void maxCut::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void maxCut::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void maxCut::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void maxCut::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void maxCut::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void maxCut::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void maxCut::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void maxCut::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void maxCut::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void maxCut::thread_ap_CS_fsm_state51() {
    ap_CS_fsm_state51 = ap_CS_fsm.read()[50];
}

void maxCut::thread_ap_CS_fsm_state52() {
    ap_CS_fsm_state52 = ap_CS_fsm.read()[51];
}

void maxCut::thread_ap_CS_fsm_state53() {
    ap_CS_fsm_state53 = ap_CS_fsm.read()[52];
}

void maxCut::thread_ap_CS_fsm_state54() {
    ap_CS_fsm_state54 = ap_CS_fsm.read()[53];
}

void maxCut::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void maxCut::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void maxCut::thread_ap_CS_fsm_state77() {
    ap_CS_fsm_state77 = ap_CS_fsm.read()[76];
}

void maxCut::thread_ap_CS_fsm_state78() {
    ap_CS_fsm_state78 = ap_CS_fsm.read()[77];
}

void maxCut::thread_ap_CS_fsm_state79() {
    ap_CS_fsm_state79 = ap_CS_fsm.read()[78];
}

void maxCut::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void maxCut::thread_ap_CS_fsm_state80() {
    ap_CS_fsm_state80 = ap_CS_fsm.read()[79];
}

void maxCut::thread_ap_CS_fsm_state81() {
    ap_CS_fsm_state81 = ap_CS_fsm.read()[80];
}

void maxCut::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void maxCut::thread_ap_block_state121() {
    ap_block_state121 = (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read()));
}

void maxCut::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read()));
}

void maxCut::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read())) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1776_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void maxCut::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void maxCut::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read())) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1776_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void maxCut::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void maxCut::thread_currentSolution_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read())) {
        currentSolution_address0 =  (sc_lv<3>) (tmp_38_fu_1788_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state116.read())) {
        currentSolution_address0 = currentSolution_addr_2_reg_2076.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_1106_p2.read()))) {
        currentSolution_address0 =  (sc_lv<3>) (tmp_18_reg_2048.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_1106_p2.read()))) {
        currentSolution_address0 =  (sc_lv<3>) (tmp_21_fu_1118_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        currentSolution_address0 =  (sc_lv<3>) (tmp_13_fu_868_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        currentSolution_address0 =  (sc_lv<3>) (tmp_s_fu_730_p1.read());
    } else {
        currentSolution_address0 = "XXX";
    }
}

void maxCut::thread_currentSolution_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_1106_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_1106_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state116.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read()))))) {
        currentSolution_ce0 = ap_const_logic_1;
    } else {
        currentSolution_ce0 = ap_const_logic_0;
    }
}

void maxCut::thread_currentSolution_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state116.read())) {
        currentSolution_d0 = tmp_26_fu_1629_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        currentSolution_d0 = tmp_15_cast_cast_fu_859_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        currentSolution_d0 = ap_const_lv32_0;
    } else {
        currentSolution_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void maxCut::thread_currentSolution_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_741_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state116.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_25_fu_1623_p2.read())))) {
        currentSolution_we0 = ap_const_logic_1;
    } else {
        currentSolution_we0 = ap_const_logic_0;
    }
}

void maxCut::thread_deltaEnergy_fu_1293_p3() {
    deltaEnergy_fu_1293_p3 = (!tmp_48_reg_2119.read()[0].is_01())? sc_lv<32>(): ((tmp_48_reg_2119.read()[0].to_bool())? tmp_50_fu_1263_p1.read(): neg_ti1_fu_1287_p2.read());
}

void maxCut::thread_exitcond1_fu_600_p2() {
    exitcond1_fu_600_p2 = (!t_V_reg_392.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_392.read() == ap_const_lv3_6);
}

void maxCut::thread_exitcond2_fu_642_p2() {
    exitcond2_fu_642_p2 = (!t_V_1_reg_403.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(t_V_1_reg_403.read() == ap_const_lv3_6);
}

void maxCut::thread_exitcond3_fu_741_p2() {
    exitcond3_fu_741_p2 = (!p_s_reg_425.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(p_s_reg_425.read() == ap_const_lv3_6);
}

void maxCut::thread_exitcond8_fu_1106_p2() {
    exitcond8_fu_1106_p2 = (!p_6_reg_459.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(p_6_reg_459.read() == ap_const_lv3_6);
}

void maxCut::thread_exitcond_fu_1776_p2() {
    exitcond_fu_1776_p2 = (!t_V_2_reg_500.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(t_V_2_reg_500.read() == ap_const_lv3_6);
}

void maxCut::thread_fpga_output_V_fu_1882_p3() {
    fpga_output_V_fu_1882_p3 = (!tmp_85_reg_2279.read()[0].is_01())? sc_lv<8>(): ((tmp_85_reg_2279.read()[0].to_bool())? neg_ti4_fu_1872_p2.read(): tmp_89_fu_1878_p1.read());
}

void maxCut::thread_grp_fu_1066_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_14_fu_878_p2.read()))) {
        grp_fu_1066_ap_start = ap_const_logic_1;
    } else {
        grp_fu_1066_ap_start = ap_const_logic_0;
    }
}

void maxCut::thread_grp_fu_1066_p0() {
    grp_fu_1066_p0 = esl_concat<1,31>(tmp_44_fu_1032_p3.read(), tmp_43_fu_1026_p2.read());
}

void maxCut::thread_grp_fu_1066_p1() {
    grp_fu_1066_p1 =  (sc_lv<4>) (ap_const_lv32_6);
}

void maxCut::thread_grp_fu_1312_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state54.read())) {
        grp_fu_1312_ap_start = ap_const_logic_1;
    } else {
        grp_fu_1312_ap_start = ap_const_logic_0;
    }
}

void maxCut::thread_grp_fu_1312_p0() {
    grp_fu_1312_p0 = deltaEnergy_reg_2131.read().range(21-1, 0);
}

void maxCut::thread_grp_fu_1312_p1() {
    grp_fu_1312_p1 = tmp_61_fu_1308_p0.read().range(21-1, 0);
}

void maxCut::thread_grp_fu_1609_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state81.read())) {
        grp_fu_1609_ap_start = ap_const_logic_1;
    } else {
        grp_fu_1609_ap_start = ap_const_logic_0;
    }
}

void maxCut::thread_grp_fu_1609_p0() {
    grp_fu_1609_p0 = esl_concat<1,31>(tmp_75_fu_1587_p3.read(), tmp_74_fu_1581_p2.read());
}

void maxCut::thread_grp_fu_1609_p1() {
    grp_fu_1609_p1 =  (sc_lv<16>) (ap_const_lv32_7FFF);
}

void maxCut::thread_grp_fu_515_p4() {
    grp_fu_515_p4 = reg_V.read().range(31, 1);
}

void maxCut::thread_i_V_1_fu_747_p2() {
    i_V_1_fu_747_p2 = (!p_s_reg_425.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(p_s_reg_425.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_i_V_2_fu_1782_p2() {
    i_V_2_fu_1782_p2 = (!t_V_2_reg_500.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(t_V_2_reg_500.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_i_V_fu_606_p2() {
    i_V_fu_606_p2 = (!t_V_reg_392.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(t_V_reg_392.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_icmp_fu_1753_p2() {
    icmp_fu_1753_p2 = (!tmp_84_fu_1743_p4.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<1>(): (sc_bigint<31>(tmp_84_fu_1743_p4.read()) < sc_bigint<31>(ap_const_lv31_1));
}

void maxCut::thread_indvarinc1_fu_568_p2() {
    indvarinc1_fu_568_p2 = (!invdar1_reg_381.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(invdar1_reg_381.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_indvarinc2_fu_724_p2() {
    indvarinc2_fu_724_p2 = (!invdar2_reg_414.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(invdar2_reg_414.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_indvarinc_fu_532_p2() {
    indvarinc_fu_532_p2 = (!invdar_reg_369.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(invdar_reg_369.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_indvars_iv_next_fu_1770_p2() {
    indvars_iv_next_fu_1770_p2 = (!indvars_iv_reg_436.read().is_01() || !ap_const_lv14_4.is_01())? sc_lv<14>(): (sc_biguint<14>(indvars_iv_reg_436.read()) + sc_biguint<14>(ap_const_lv14_4));
}

void maxCut::thread_input_stream_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()))) {
        input_stream_TDATA_blk_n = input_stream_V_data_V_0_state.read()[0];
    } else {
        input_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void maxCut::thread_input_stream_TREADY() {
    input_stream_TREADY = input_stream_V_dest_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_data_V_0_ack_in() {
    input_stream_V_data_V_0_ack_in = input_stream_V_data_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        input_stream_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        input_stream_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void maxCut::thread_input_stream_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_sel.read())) {
        input_stream_V_data_V_0_data_out = input_stream_V_data_V_0_payload_B.read();
    } else {
        input_stream_V_data_V_0_data_out = input_stream_V_data_V_0_payload_A.read();
    }
}

void maxCut::thread_input_stream_V_data_V_0_load_A() {
    input_stream_V_data_V_0_load_A = (input_stream_V_data_V_0_state_cmp_full.read() & ~input_stream_V_data_V_0_sel_wr.read());
}

void maxCut::thread_input_stream_V_data_V_0_load_B() {
    input_stream_V_data_V_0_load_B = (input_stream_V_data_V_0_sel_wr.read() & input_stream_V_data_V_0_state_cmp_full.read());
}

void maxCut::thread_input_stream_V_data_V_0_sel() {
    input_stream_V_data_V_0_sel = input_stream_V_data_V_0_sel_rd.read();
}

void maxCut::thread_input_stream_V_data_V_0_state_cmp_full() {
    input_stream_V_data_V_0_state_cmp_full =  (sc_logic) ((!input_stream_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_stream_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_input_stream_V_data_V_0_vld_in() {
    input_stream_V_data_V_0_vld_in = input_stream_TVALID.read();
}

void maxCut::thread_input_stream_V_data_V_0_vld_out() {
    input_stream_V_data_V_0_vld_out = input_stream_V_data_V_0_state.read()[0];
}

void maxCut::thread_input_stream_V_dest_V_0_ack_in() {
    input_stream_V_dest_V_0_ack_in = input_stream_V_dest_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_dest_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        input_stream_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        input_stream_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void maxCut::thread_input_stream_V_dest_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_sel.read())) {
        input_stream_V_dest_V_0_data_out = input_stream_V_dest_V_0_payload_B.read();
    } else {
        input_stream_V_dest_V_0_data_out = input_stream_V_dest_V_0_payload_A.read();
    }
}

void maxCut::thread_input_stream_V_dest_V_0_load_A() {
    input_stream_V_dest_V_0_load_A = (input_stream_V_dest_V_0_state_cmp_full.read() & ~input_stream_V_dest_V_0_sel_wr.read());
}

void maxCut::thread_input_stream_V_dest_V_0_load_B() {
    input_stream_V_dest_V_0_load_B = (input_stream_V_dest_V_0_sel_wr.read() & input_stream_V_dest_V_0_state_cmp_full.read());
}

void maxCut::thread_input_stream_V_dest_V_0_sel() {
    input_stream_V_dest_V_0_sel = input_stream_V_dest_V_0_sel_rd.read();
}

void maxCut::thread_input_stream_V_dest_V_0_state_cmp_full() {
    input_stream_V_dest_V_0_state_cmp_full =  (sc_logic) ((!input_stream_V_dest_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_stream_V_dest_V_0_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_input_stream_V_dest_V_0_vld_in() {
    input_stream_V_dest_V_0_vld_in = input_stream_TVALID.read();
}

void maxCut::thread_input_stream_V_dest_V_0_vld_out() {
    input_stream_V_dest_V_0_vld_out = input_stream_V_dest_V_0_state.read()[0];
}

void maxCut::thread_input_stream_V_id_V_0_ack_in() {
    input_stream_V_id_V_0_ack_in = input_stream_V_id_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_id_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        input_stream_V_id_V_0_ack_out = ap_const_logic_1;
    } else {
        input_stream_V_id_V_0_ack_out = ap_const_logic_0;
    }
}

void maxCut::thread_input_stream_V_id_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_sel.read())) {
        input_stream_V_id_V_0_data_out = input_stream_V_id_V_0_payload_B.read();
    } else {
        input_stream_V_id_V_0_data_out = input_stream_V_id_V_0_payload_A.read();
    }
}

void maxCut::thread_input_stream_V_id_V_0_load_A() {
    input_stream_V_id_V_0_load_A = (input_stream_V_id_V_0_state_cmp_full.read() & ~input_stream_V_id_V_0_sel_wr.read());
}

void maxCut::thread_input_stream_V_id_V_0_load_B() {
    input_stream_V_id_V_0_load_B = (input_stream_V_id_V_0_sel_wr.read() & input_stream_V_id_V_0_state_cmp_full.read());
}

void maxCut::thread_input_stream_V_id_V_0_sel() {
    input_stream_V_id_V_0_sel = input_stream_V_id_V_0_sel_rd.read();
}

void maxCut::thread_input_stream_V_id_V_0_state_cmp_full() {
    input_stream_V_id_V_0_state_cmp_full =  (sc_logic) ((!input_stream_V_id_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_stream_V_id_V_0_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_input_stream_V_id_V_0_vld_in() {
    input_stream_V_id_V_0_vld_in = input_stream_TVALID.read();
}

void maxCut::thread_input_stream_V_id_V_0_vld_out() {
    input_stream_V_id_V_0_vld_out = input_stream_V_id_V_0_state.read()[0];
}

void maxCut::thread_input_stream_V_keep_V_0_ack_in() {
    input_stream_V_keep_V_0_ack_in = input_stream_V_keep_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_keep_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        input_stream_V_keep_V_0_ack_out = ap_const_logic_1;
    } else {
        input_stream_V_keep_V_0_ack_out = ap_const_logic_0;
    }
}

void maxCut::thread_input_stream_V_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_sel.read())) {
        input_stream_V_keep_V_0_data_out = input_stream_V_keep_V_0_payload_B.read();
    } else {
        input_stream_V_keep_V_0_data_out = input_stream_V_keep_V_0_payload_A.read();
    }
}

void maxCut::thread_input_stream_V_keep_V_0_load_A() {
    input_stream_V_keep_V_0_load_A = (input_stream_V_keep_V_0_state_cmp_full.read() & ~input_stream_V_keep_V_0_sel_wr.read());
}

void maxCut::thread_input_stream_V_keep_V_0_load_B() {
    input_stream_V_keep_V_0_load_B = (input_stream_V_keep_V_0_sel_wr.read() & input_stream_V_keep_V_0_state_cmp_full.read());
}

void maxCut::thread_input_stream_V_keep_V_0_sel() {
    input_stream_V_keep_V_0_sel = input_stream_V_keep_V_0_sel_rd.read();
}

void maxCut::thread_input_stream_V_keep_V_0_state_cmp_full() {
    input_stream_V_keep_V_0_state_cmp_full =  (sc_logic) ((!input_stream_V_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_stream_V_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_input_stream_V_keep_V_0_vld_in() {
    input_stream_V_keep_V_0_vld_in = input_stream_TVALID.read();
}

void maxCut::thread_input_stream_V_keep_V_0_vld_out() {
    input_stream_V_keep_V_0_vld_out = input_stream_V_keep_V_0_state.read()[0];
}

void maxCut::thread_input_stream_V_strb_V_0_ack_in() {
    input_stream_V_strb_V_0_ack_in = input_stream_V_strb_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_strb_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        input_stream_V_strb_V_0_ack_out = ap_const_logic_1;
    } else {
        input_stream_V_strb_V_0_ack_out = ap_const_logic_0;
    }
}

void maxCut::thread_input_stream_V_strb_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_sel.read())) {
        input_stream_V_strb_V_0_data_out = input_stream_V_strb_V_0_payload_B.read();
    } else {
        input_stream_V_strb_V_0_data_out = input_stream_V_strb_V_0_payload_A.read();
    }
}

void maxCut::thread_input_stream_V_strb_V_0_load_A() {
    input_stream_V_strb_V_0_load_A = (input_stream_V_strb_V_0_state_cmp_full.read() & ~input_stream_V_strb_V_0_sel_wr.read());
}

void maxCut::thread_input_stream_V_strb_V_0_load_B() {
    input_stream_V_strb_V_0_load_B = (input_stream_V_strb_V_0_sel_wr.read() & input_stream_V_strb_V_0_state_cmp_full.read());
}

void maxCut::thread_input_stream_V_strb_V_0_sel() {
    input_stream_V_strb_V_0_sel = input_stream_V_strb_V_0_sel_rd.read();
}

void maxCut::thread_input_stream_V_strb_V_0_state_cmp_full() {
    input_stream_V_strb_V_0_state_cmp_full =  (sc_logic) ((!input_stream_V_strb_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_stream_V_strb_V_0_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_input_stream_V_strb_V_0_vld_in() {
    input_stream_V_strb_V_0_vld_in = input_stream_TVALID.read();
}

void maxCut::thread_input_stream_V_strb_V_0_vld_out() {
    input_stream_V_strb_V_0_vld_out = input_stream_V_strb_V_0_state.read()[0];
}

void maxCut::thread_input_stream_V_user_V_0_ack_in() {
    input_stream_V_user_V_0_ack_in = input_stream_V_user_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_user_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        input_stream_V_user_V_0_ack_out = ap_const_logic_1;
    } else {
        input_stream_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void maxCut::thread_input_stream_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_sel.read())) {
        input_stream_V_user_V_0_data_out = input_stream_V_user_V_0_payload_B.read();
    } else {
        input_stream_V_user_V_0_data_out = input_stream_V_user_V_0_payload_A.read();
    }
}

void maxCut::thread_input_stream_V_user_V_0_load_A() {
    input_stream_V_user_V_0_load_A = (input_stream_V_user_V_0_state_cmp_full.read() & ~input_stream_V_user_V_0_sel_wr.read());
}

void maxCut::thread_input_stream_V_user_V_0_load_B() {
    input_stream_V_user_V_0_load_B = (input_stream_V_user_V_0_sel_wr.read() & input_stream_V_user_V_0_state_cmp_full.read());
}

void maxCut::thread_input_stream_V_user_V_0_sel() {
    input_stream_V_user_V_0_sel = input_stream_V_user_V_0_sel_rd.read();
}

void maxCut::thread_input_stream_V_user_V_0_state_cmp_full() {
    input_stream_V_user_V_0_state_cmp_full =  (sc_logic) ((!input_stream_V_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_stream_V_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_input_stream_V_user_V_0_vld_in() {
    input_stream_V_user_V_0_vld_in = input_stream_TVALID.read();
}

void maxCut::thread_input_stream_V_user_V_0_vld_out() {
    input_stream_V_user_V_0_vld_out = input_stream_V_user_V_0_state.read()[0];
}

void maxCut::thread_iterate_V_fu_884_p2() {
    iterate_V_fu_884_p2 = (!p_4_reg_448.read().is_01() || !ap_const_lv12_1.is_01())? sc_lv<12>(): (sc_biguint<12>(p_4_reg_448.read()) + sc_biguint<12>(ap_const_lv12_1));
}

void maxCut::thread_j_V_1_fu_1112_p2() {
    j_V_1_fu_1112_p2 = (!p_6_reg_459.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(p_6_reg_459.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_j_V_fu_648_p2() {
    j_V_fu_648_p2 = (!t_V_1_reg_403.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(t_V_1_reg_403.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_localFieldVal_1_fu_1215_p2() {
    localFieldVal_1_fu_1215_p2 = (!tmp_59_fu_1208_p3.read().is_01() || !localFieldVal_reg_470.read().is_01())? sc_lv<22>(): (sc_biguint<22>(tmp_59_fu_1208_p3.read()) + sc_bigint<22>(localFieldVal_reg_470.read()));
}

void maxCut::thread_matrix_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        matrix_address0 =  (sc_lv<6>) (tmp_58_cast_fu_1132_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrix_address0 =  (sc_lv<6>) (tmp_40_cast_fu_716_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        matrix_address0 =  (sc_lv<6>) (tmp_27_cast_fu_583_p1.read());
    } else {
        matrix_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void maxCut::thread_matrix_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        matrix_ce0 = ap_const_logic_1;
    } else {
        matrix_ce0 = ap_const_logic_0;
    }
}

void maxCut::thread_matrix_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrix_d0 = tmp_12_cast_cast_fu_720_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        matrix_d0 = ap_const_lv24_0;
    } else {
        matrix_d0 =  (sc_lv<24>) ("XXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void maxCut::thread_matrix_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        matrix_we0 = ap_const_logic_1;
    } else {
        matrix_we0 = ap_const_logic_0;
    }
}

void maxCut::thread_mul1_fu_1423_p0() {
    mul1_fu_1423_p0 =  (sc_lv<21>) (x_assign_reg_2166.read());
}

void maxCut::thread_mul1_fu_1423_p2() {
    mul1_fu_1423_p2 = (!mul1_fu_1423_p0.read().is_01() || !ap_const_lv47_19999999A.is_01())? sc_lv<47>(): sc_bigint<21>(mul1_fu_1423_p0.read()) * sc_biguint<47>(ap_const_lv47_19999999A);
}

void maxCut::thread_mul2_fu_1643_p0() {
    mul2_fu_1643_p0 =  (sc_lv<24>) (mul2_fu_1643_p00.read());
}

void maxCut::thread_mul2_fu_1643_p00() {
    mul2_fu_1643_p00 = esl_zext<50,24>(tmp_29_cast_reg_2221.read());
}

void maxCut::thread_mul2_fu_1643_p2() {
    mul2_fu_1643_p2 = (!mul2_fu_1643_p0.read().is_01() || !ap_const_lv50_1A36E2F.is_01())? sc_lv<50>(): sc_biguint<24>(mul2_fu_1643_p0.read()) * sc_biguint<50>(ap_const_lv50_1A36E2F);
}

void maxCut::thread_mul3_fu_1674_p0() {
    mul3_fu_1674_p0 = tmp_33_reg_2229.read();
}

void maxCut::thread_mul3_fu_1674_p2() {
    mul3_fu_1674_p2 = (!mul3_fu_1674_p0.read().is_01() || !ap_const_lv65_14F8B588F.is_01())? sc_lv<65>(): sc_bigint<32>(mul3_fu_1674_p0.read()) * sc_biguint<65>(ap_const_lv65_14F8B588F);
}

void maxCut::thread_mul4_fu_1811_p1() {
    mul4_fu_1811_p1 = reg_528.read();
}

void maxCut::thread_mul4_fu_1811_p2() {
    mul4_fu_1811_p2 = (!ap_const_lv65_1A36E2EB2.is_01() || !mul4_fu_1811_p1.read().is_01())? sc_lv<65>(): sc_biguint<65>(ap_const_lv65_1A36E2EB2) * sc_bigint<32>(mul4_fu_1811_p1.read());
}

void maxCut::thread_mul7_fu_1242_p0() {
    mul7_fu_1242_p0 = tmp_19_reg_2112.read();
}

void maxCut::thread_mul7_fu_1242_p2() {
    mul7_fu_1242_p2 = (!mul7_fu_1242_p0.read().is_01() || !ap_const_lv65_1A36E2EB2.is_01())? sc_lv<65>(): sc_bigint<32>(mul7_fu_1242_p0.read()) * sc_biguint<65>(ap_const_lv65_1A36E2EB2);
}

void maxCut::thread_mul_fu_1157_p0() {
    mul_fu_1157_p0 = tmp_22_reg_2086.read();
}

void maxCut::thread_mul_fu_1157_p2() {
    mul_fu_1157_p2 = (!mul_fu_1157_p0.read().is_01() || !ap_const_lv65_1A36E2EB2.is_01())? sc_lv<65>(): sc_bigint<32>(mul_fu_1157_p0.read()) * sc_biguint<65>(ap_const_lv65_1A36E2EB2);
}

void maxCut::thread_neg_mul1_fu_1446_p2() {
    neg_mul1_fu_1446_p2 = (!ap_const_lv47_0.is_01() || !mul1_reg_2186.read().is_01())? sc_lv<47>(): (sc_biguint<47>(ap_const_lv47_0) - sc_biguint<47>(mul1_reg_2186.read()));
}

void maxCut::thread_neg_mul2_fu_1690_p2() {
    neg_mul2_fu_1690_p2 = (!ap_const_lv65_0.is_01() || !mul3_reg_2240.read().is_01())? sc_lv<65>(): (sc_biguint<65>(ap_const_lv65_0) - sc_biguint<65>(mul3_reg_2240.read()));
}

void maxCut::thread_neg_mul3_fu_1847_p2() {
    neg_mul3_fu_1847_p2 = (!ap_const_lv65_0.is_01() || !mul4_reg_2285.read().is_01())? sc_lv<65>(): (sc_biguint<65>(ap_const_lv65_0) - sc_biguint<65>(mul4_reg_2285.read()));
}

void maxCut::thread_neg_mul8_fu_1248_p2() {
    neg_mul8_fu_1248_p2 = (!ap_const_lv65_0.is_01() || !mul7_reg_2125.read().is_01())? sc_lv<65>(): (sc_biguint<65>(ap_const_lv65_0) - sc_biguint<65>(mul7_reg_2125.read()));
}

void maxCut::thread_neg_mul_fu_1173_p2() {
    neg_mul_fu_1173_p2 = (!ap_const_lv65_0.is_01() || !mul_reg_2097.read().is_01())? sc_lv<65>(): (sc_biguint<65>(ap_const_lv65_0) - sc_biguint<65>(mul_reg_2097.read()));
}

void maxCut::thread_neg_ti1_fu_1287_p2() {
    neg_ti1_fu_1287_p2 = (!ap_const_lv32_0.is_01() || !tmp_53_fu_1280_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(tmp_53_fu_1280_p3.read()));
}

void maxCut::thread_neg_ti2_fu_1470_p2() {
    neg_ti2_fu_1470_p2 = (!ap_const_lv14_0.is_01() || !trunc1_fu_1467_p1.read().is_01())? sc_lv<14>(): (sc_biguint<14>(ap_const_lv14_0) - sc_bigint<14>(trunc1_fu_1467_p1.read()));
}

void maxCut::thread_neg_ti3_fu_1719_p2() {
    neg_ti3_fu_1719_p2 = (!ap_const_lv32_0.is_01() || !tmp_79_fu_1712_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(tmp_79_fu_1712_p3.read()));
}

void maxCut::thread_neg_ti4_fu_1872_p2() {
    neg_ti4_fu_1872_p2 = (!ap_const_lv8_0.is_01() || !tmp_88_fu_1868_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_0) - sc_biguint<8>(tmp_88_fu_1868_p1.read()));
}

void maxCut::thread_neg_ti_fu_1198_p2() {
    neg_ti_fu_1198_p2 = (!ap_const_lv22_0.is_01() || !trunc_fu_1194_p1.read().is_01())? sc_lv<22>(): (sc_biguint<22>(ap_const_lv22_0) - sc_bigint<22>(trunc_fu_1194_p1.read()));
}

void maxCut::thread_or_cond_fu_1764_p2() {
    or_cond_fu_1764_p2 = (icmp_fu_1753_p2.read() & tmp_37_fu_1759_p2.read());
}

void maxCut::thread_output_last_V_fu_1793_p2() {
    output_last_V_fu_1793_p2 = (!t_V_2_reg_500.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(t_V_2_reg_500.read() == ap_const_lv3_5);
}

void maxCut::thread_output_stream_TDATA() {
    output_stream_TDATA = output_stream_V_data_V_1_data_out.read();
}

void maxCut::thread_output_stream_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()))) {
        output_stream_TDATA_blk_n = output_stream_V_data_V_1_state.read()[1];
    } else {
        output_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void maxCut::thread_output_stream_TDEST() {
    output_stream_TDEST = output_stream_V_dest_V_1_data_out.read();
}

void maxCut::thread_output_stream_TID() {
    output_stream_TID = output_stream_V_id_V_1_data_out.read();
}

void maxCut::thread_output_stream_TKEEP() {
    output_stream_TKEEP = output_stream_V_keep_V_1_data_out.read();
}

void maxCut::thread_output_stream_TLAST() {
    output_stream_TLAST = output_stream_V_last_V_1_data_out.read();
}

void maxCut::thread_output_stream_TSTRB() {
    output_stream_TSTRB = output_stream_V_strb_V_1_data_out.read();
}

void maxCut::thread_output_stream_TUSER() {
    output_stream_TUSER = output_stream_V_user_V_1_data_out.read();
}

void maxCut::thread_output_stream_TVALID() {
    output_stream_TVALID = output_stream_V_dest_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_data_V_1_ack_in() {
    output_stream_V_data_V_1_ack_in = output_stream_V_data_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_data_V_1_ack_out() {
    output_stream_V_data_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_sel.read())) {
        output_stream_V_data_V_1_data_out = output_stream_V_data_V_1_payload_B.read();
    } else {
        output_stream_V_data_V_1_data_out = output_stream_V_data_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_data_V_1_load_A() {
    output_stream_V_data_V_1_load_A = (output_stream_V_data_V_1_state_cmp_full.read() & ~output_stream_V_data_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_data_V_1_load_B() {
    output_stream_V_data_V_1_load_B = (output_stream_V_data_V_1_sel_wr.read() & output_stream_V_data_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_data_V_1_sel() {
    output_stream_V_data_V_1_sel = output_stream_V_data_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_data_V_1_state_cmp_full() {
    output_stream_V_data_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_data_V_1_vld_out() {
    output_stream_V_data_V_1_vld_out = output_stream_V_data_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_dest_V_1_ack_in() {
    output_stream_V_dest_V_1_ack_in = output_stream_V_dest_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_dest_V_1_ack_out() {
    output_stream_V_dest_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_dest_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_sel.read())) {
        output_stream_V_dest_V_1_data_out = output_stream_V_dest_V_1_payload_B.read();
    } else {
        output_stream_V_dest_V_1_data_out = output_stream_V_dest_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_dest_V_1_load_A() {
    output_stream_V_dest_V_1_load_A = (output_stream_V_dest_V_1_state_cmp_full.read() & ~output_stream_V_dest_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_dest_V_1_load_B() {
    output_stream_V_dest_V_1_load_B = (output_stream_V_dest_V_1_sel_wr.read() & output_stream_V_dest_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_dest_V_1_sel() {
    output_stream_V_dest_V_1_sel = output_stream_V_dest_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_dest_V_1_state_cmp_full() {
    output_stream_V_dest_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_dest_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_dest_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_dest_V_1_vld_out() {
    output_stream_V_dest_V_1_vld_out = output_stream_V_dest_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_id_V_1_ack_in() {
    output_stream_V_id_V_1_ack_in = output_stream_V_id_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_id_V_1_ack_out() {
    output_stream_V_id_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_id_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_sel.read())) {
        output_stream_V_id_V_1_data_out = output_stream_V_id_V_1_payload_B.read();
    } else {
        output_stream_V_id_V_1_data_out = output_stream_V_id_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_id_V_1_load_A() {
    output_stream_V_id_V_1_load_A = (output_stream_V_id_V_1_state_cmp_full.read() & ~output_stream_V_id_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_id_V_1_load_B() {
    output_stream_V_id_V_1_load_B = (output_stream_V_id_V_1_sel_wr.read() & output_stream_V_id_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_id_V_1_sel() {
    output_stream_V_id_V_1_sel = output_stream_V_id_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_id_V_1_state_cmp_full() {
    output_stream_V_id_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_id_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_id_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_id_V_1_vld_out() {
    output_stream_V_id_V_1_vld_out = output_stream_V_id_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_keep_V_1_ack_in() {
    output_stream_V_keep_V_1_ack_in = output_stream_V_keep_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_keep_V_1_ack_out() {
    output_stream_V_keep_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_sel.read())) {
        output_stream_V_keep_V_1_data_out = output_stream_V_keep_V_1_payload_B.read();
    } else {
        output_stream_V_keep_V_1_data_out = output_stream_V_keep_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_keep_V_1_load_A() {
    output_stream_V_keep_V_1_load_A = (output_stream_V_keep_V_1_state_cmp_full.read() & ~output_stream_V_keep_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_keep_V_1_load_B() {
    output_stream_V_keep_V_1_load_B = (output_stream_V_keep_V_1_sel_wr.read() & output_stream_V_keep_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_keep_V_1_sel() {
    output_stream_V_keep_V_1_sel = output_stream_V_keep_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_keep_V_1_state_cmp_full() {
    output_stream_V_keep_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_keep_V_1_vld_out() {
    output_stream_V_keep_V_1_vld_out = output_stream_V_keep_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_last_V_1_ack_in() {
    output_stream_V_last_V_1_ack_in = output_stream_V_last_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_last_V_1_ack_out() {
    output_stream_V_last_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_sel.read())) {
        output_stream_V_last_V_1_data_out = output_stream_V_last_V_1_payload_B.read();
    } else {
        output_stream_V_last_V_1_data_out = output_stream_V_last_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_last_V_1_load_A() {
    output_stream_V_last_V_1_load_A = (output_stream_V_last_V_1_state_cmp_full.read() & ~output_stream_V_last_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_last_V_1_load_B() {
    output_stream_V_last_V_1_load_B = (output_stream_V_last_V_1_sel_wr.read() & output_stream_V_last_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_last_V_1_sel() {
    output_stream_V_last_V_1_sel = output_stream_V_last_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_last_V_1_state_cmp_full() {
    output_stream_V_last_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_last_V_1_vld_out() {
    output_stream_V_last_V_1_vld_out = output_stream_V_last_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_strb_V_1_ack_in() {
    output_stream_V_strb_V_1_ack_in = output_stream_V_strb_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_strb_V_1_ack_out() {
    output_stream_V_strb_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_strb_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_sel.read())) {
        output_stream_V_strb_V_1_data_out = output_stream_V_strb_V_1_payload_B.read();
    } else {
        output_stream_V_strb_V_1_data_out = output_stream_V_strb_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_strb_V_1_load_A() {
    output_stream_V_strb_V_1_load_A = (output_stream_V_strb_V_1_state_cmp_full.read() & ~output_stream_V_strb_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_strb_V_1_load_B() {
    output_stream_V_strb_V_1_load_B = (output_stream_V_strb_V_1_sel_wr.read() & output_stream_V_strb_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_strb_V_1_sel() {
    output_stream_V_strb_V_1_sel = output_stream_V_strb_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_strb_V_1_state_cmp_full() {
    output_stream_V_strb_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_strb_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_strb_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_strb_V_1_vld_out() {
    output_stream_V_strb_V_1_vld_out = output_stream_V_strb_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_user_V_1_ack_in() {
    output_stream_V_user_V_1_ack_in = output_stream_V_user_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_user_V_1_ack_out() {
    output_stream_V_user_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_sel.read())) {
        output_stream_V_user_V_1_data_out = output_stream_V_user_V_1_payload_B.read();
    } else {
        output_stream_V_user_V_1_data_out = output_stream_V_user_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_user_V_1_load_A() {
    output_stream_V_user_V_1_load_A = (output_stream_V_user_V_1_state_cmp_full.read() & ~output_stream_V_user_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_user_V_1_load_B() {
    output_stream_V_user_V_1_load_B = (output_stream_V_user_V_1_sel_wr.read() & output_stream_V_user_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_user_V_1_sel() {
    output_stream_V_user_V_1_sel = output_stream_V_user_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_user_V_1_state_cmp_full() {
    output_stream_V_user_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_user_V_1_vld_out() {
    output_stream_V_user_V_1_vld_out = output_stream_V_user_V_1_state.read()[0];
}

void maxCut::thread_p_shl1_cast_fu_558_p1() {
    p_shl1_cast_fu_558_p1 = esl_zext<7,4>(tmp_9_fu_550_p3.read());
}

void maxCut::thread_p_shl2_cast_fu_620_p1() {
    p_shl2_cast_fu_620_p1 = esl_zext<7,6>(tmp_6_fu_612_p3.read());
}

void maxCut::thread_p_shl3_cast_fu_632_p1() {
    p_shl3_cast_fu_632_p1 = esl_zext<7,4>(tmp_7_fu_624_p3.read());
}

void maxCut::thread_p_shl4_cast_fu_1080_p3() {
    p_shl4_cast_fu_1080_p3 = esl_concat<4,3>(tmp_45_fu_1076_p1.read(), ap_const_lv3_0);
}

void maxCut::thread_p_shl5_cast_fu_1092_p3() {
    p_shl5_cast_fu_1092_p3 = esl_concat<6,1>(tmp_46_fu_1088_p1.read(), ap_const_lv1_0);
}

void maxCut::thread_p_shl_cast_fu_546_p1() {
    p_shl_cast_fu_546_p1 = esl_zext<7,6>(tmp_fu_538_p3.read());
}

void maxCut::thread_p_v1_v_fu_1188_p3() {
    p_v1_v_fu_1188_p3 = (!tmp_55_reg_2091.read()[0].is_01())? sc_lv<19>(): ((tmp_55_reg_2091.read()[0].to_bool())? tmp_56_fu_1178_p4.read(): tmp_57_reg_2102.read());
}

void maxCut::thread_p_v2_v_fu_1461_p3() {
    p_v2_v_fu_1461_p3 = (!tmp_65_reg_2191.read()[0].is_01())? sc_lv<11>(): ((tmp_65_reg_2191.read()[0].to_bool())? tmp_66_fu_1451_p4.read(): tmp_67_reg_2197.read());
}

void maxCut::thread_p_v_v_fu_1862_p3() {
    p_v_v_fu_1862_p3 = (!tmp_85_reg_2279.read()[0].is_01())? sc_lv<19>(): ((tmp_85_reg_2279.read()[0].to_bool())? tmp_86_fu_1852_p4.read(): tmp_87_reg_2290.read());
}

void maxCut::thread_prob_cast_fu_1615_p1() {
    prob_cast_fu_1615_p1 = esl_zext<16,14>(prob_reg_482.read());
}

void maxCut::thread_r_V_2_fu_1544_p3() {
    r_V_2_fu_1544_p3 = esl_concat<1,30>(tmp_44_reg_2022.read(), tmp_71_fu_1535_p4.read());
}

void maxCut::thread_ret_V_1_fu_845_p3() {
    ret_V_1_fu_845_p3 = esl_concat<1,31>(tmp_30_fu_837_p3.read(), tmp_28_fu_831_p2.read());
}

void maxCut::thread_ret_V_4_cast1_fu_1048_p2() {
    ret_V_4_cast1_fu_1048_p2 = (tmp_31_fu_1010_p3.read() | tmp_29_fu_996_p4.read());
}

void maxCut::thread_ret_V_4_cast9_fu_1054_p2() {
    ret_V_4_cast9_fu_1054_p2 = (tmp_24_fu_988_p3.read() | tmp_17_fu_974_p4.read());
}

void maxCut::thread_ret_V_4_cast_fu_1060_p2() {
    ret_V_4_cast_fu_1060_p2 = (tmp_16_fu_966_p3.read() | tmp_15_fu_952_p4.read());
}

void maxCut::thread_ret_V_4_fu_1595_p3() {
    ret_V_4_fu_1595_p3 = esl_concat<1,31>(tmp_75_fu_1587_p3.read(), tmp_74_fu_1581_p2.read());
}

void maxCut::thread_ret_V_i1_fu_942_p2() {
    ret_V_i1_fu_942_p2 = (tmp4_fu_936_p2.read() ^ tmp3_fu_930_p2.read());
}

void maxCut::thread_ret_V_i2_fu_1563_p2() {
    ret_V_i2_fu_1563_p2 = (tmp6_fu_1557_p2.read() ^ tmp5_fu_1551_p2.read());
}

void maxCut::thread_ret_V_i_fu_813_p2() {
    ret_V_i_fu_813_p2 = (tmp2_fu_807_p2.read() ^ tmp1_fu_801_p2.read());
}

void maxCut::thread_rev1_fu_1357_p2() {
    rev1_fu_1357_p2 = (slt1_fu_1352_p2.read() ^ ap_const_lv1_1);
}

void maxCut::thread_rev2_fu_1395_p2() {
    rev2_fu_1395_p2 = (slt2_fu_1390_p2.read() ^ ap_const_lv1_1);
}

void maxCut::thread_rev3_fu_1406_p2() {
    rev3_fu_1406_p2 = (slt3_fu_1401_p2.read() ^ ap_const_lv1_1);
}

void maxCut::thread_rev_fu_1346_p2() {
    rev_fu_1346_p2 = (slt_fu_1341_p2.read() ^ ap_const_lv1_1);
}

void maxCut::thread_sel_div1_fu_1412_p3() {
    sel_div1_fu_1412_p3 = (!tmp_64_fu_1380_p3.read()[0].is_01())? sc_lv<1>(): ((tmp_64_fu_1380_p3.read()[0].to_bool())? rev2_fu_1395_p2.read(): rev3_fu_1406_p2.read());
}

void maxCut::thread_sel_div_fu_1363_p3() {
    sel_div_fu_1363_p3 = (!tmp_63_fu_1331_p3.read()[0].is_01())? sc_lv<1>(): ((tmp_63_fu_1331_p3.read()[0].to_bool())? rev_fu_1346_p2.read(): rev1_fu_1357_p2.read());
}

void maxCut::thread_slt1_fu_1352_p2() {
    slt1_fu_1352_p2 = (!x_fu_1338_p1.read().is_01() || !Ny1_reg_2160.read().is_01())? sc_lv<1>(): (sc_bigint<47>(x_fu_1338_p1.read()) < sc_bigint<47>(Ny1_reg_2160.read()));
}

void maxCut::thread_slt2_fu_1390_p2() {
    slt2_fu_1390_p2 = (!x1_fu_1387_p1.read().is_01() || !Ny3_reg_2176.read().is_01())? sc_lv<1>(): (sc_bigint<47>(x1_fu_1387_p1.read()) < sc_bigint<47>(Ny3_reg_2176.read()));
}

void maxCut::thread_slt3_fu_1401_p2() {
    slt3_fu_1401_p2 = (!Ny3_reg_2176.read().is_01() || !x1_fu_1387_p1.read().is_01())? sc_lv<1>(): (sc_bigint<47>(Ny3_reg_2176.read()) < sc_bigint<47>(x1_fu_1387_p1.read()));
}

void maxCut::thread_slt_fu_1341_p2() {
    slt_fu_1341_p2 = (!Ny1_reg_2160.read().is_01() || !x_fu_1338_p1.read().is_01())? sc_lv<1>(): (sc_bigint<47>(Ny1_reg_2160.read()) < sc_bigint<47>(x_fu_1338_p1.read()));
}

void maxCut::thread_tmp1_fu_801_p2() {
    tmp1_fu_801_p2 = (tmp_44_i_fu_763_p4.read() ^ tmp_i_fu_753_p4.read());
}

void maxCut::thread_tmp2_fu_807_p2() {
    tmp2_fu_807_p2 = (tmp_45_i_fu_773_p4.read() ^ tmp_47_i_fu_783_p4.read());
}

void maxCut::thread_tmp3_fu_930_p2() {
    tmp3_fu_930_p2 = (tmp_44_i1_fu_900_p4.read() ^ tmp_i1_fu_890_p4.read());
}

void maxCut::thread_tmp4_fu_936_p2() {
    tmp4_fu_936_p2 = (tmp_45_i1_fu_910_p4.read() ^ tmp_47_i1_fu_920_p4.read());
}

void maxCut::thread_tmp5_fu_1551_p2() {
    tmp5_fu_1551_p2 = (tmp_44_i2_fu_1501_p4.read() ^ tmp_i3_fu_1492_p4.read());
}

void maxCut::thread_tmp6_fu_1557_p2() {
    tmp6_fu_1557_p2 = (tmp_45_i2_fu_1519_p3.read() ^ tmp_47_i2_fu_1526_p4.read());
}

void maxCut::thread_tmp_10_fu_1890_p1() {
    tmp_10_fu_1890_p1 =  (sc_lv<15>) (ap_const_lv23_2710);
}

void maxCut::thread_tmp_11_fu_686_p2() {
    tmp_11_fu_686_p2 = (!tmp_8_reg_1961.read().is_01() || !tmp_12_cast_fu_682_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_8_reg_1961.read()) + sc_biguint<7>(tmp_12_cast_fu_682_p1.read()));
}

void maxCut::thread_tmp_12_cast_cast_fu_720_p1() {
    tmp_12_cast_cast_fu_720_p1 = esl_sext<24,23>(tmp_10_reg_1974.read());
}

void maxCut::thread_tmp_12_cast_fu_682_p1() {
    tmp_12_cast_fu_682_p1 = esl_zext<7,3>(t_V_1_reg_403.read());
}

void maxCut::thread_tmp_12_fu_793_p3() {
    tmp_12_fu_793_p3 = reg_V.read().range(1, 1);
}

void maxCut::thread_tmp_13_fu_868_p1() {
    tmp_13_fu_868_p1 = esl_zext<64,3>(p_s_reg_425.read());
}

void maxCut::thread_tmp_14_fu_878_p2() {
    tmp_14_fu_878_p2 = (!p_4_reg_448.read().is_01() || !ap_const_lv12_9C4.is_01())? sc_lv<1>(): (sc_biguint<12>(p_4_reg_448.read()) < sc_biguint<12>(ap_const_lv12_9C4));
}

void maxCut::thread_tmp_15_cast_cast_fu_859_p3() {
    tmp_15_cast_cast_fu_859_p3 = (!tmp_12_fu_793_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_12_fu_793_p3.read()[0].to_bool())? ap_const_lv32_2710: ap_const_lv32_FFFFD8F0);
}

void maxCut::thread_tmp_15_fu_952_p4() {
    tmp_15_fu_952_p4 = reg_V.read().range(30, 1);
}

void maxCut::thread_tmp_16_fu_966_p3() {
    tmp_16_fu_966_p3 = esl_concat<15,15>(tmp_39_fu_962_p1.read(), ap_const_lv15_0);
}

void maxCut::thread_tmp_17_fu_974_p4() {
    tmp_17_fu_974_p4 = reg_V.read().range(29, 1);
}

void maxCut::thread_tmp_18_fu_1072_p1() {
    tmp_18_fu_1072_p1 = esl_sext<64,32>(grp_fu_1066_p2.read());
}

void maxCut::thread_tmp_19_fu_1225_p1() {
    tmp_19_fu_1225_p1 = localFieldVal_reg_470.read();
}

void maxCut::thread_tmp_19_fu_1225_p2() {
    tmp_19_fu_1225_p2 = (!reg_528.read().is_01() || !tmp_19_fu_1225_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_528.read()) * sc_bigint<22>(tmp_19_fu_1225_p1.read());
}

void maxCut::thread_tmp_1_cast_fu_574_p1() {
    tmp_1_cast_fu_574_p1 = esl_zext<7,3>(invdar1_reg_381.read());
}

void maxCut::thread_tmp_1_fu_562_p2() {
    tmp_1_fu_562_p2 = (!p_shl_cast_fu_546_p1.read().is_01() || !p_shl1_cast_fu_558_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(p_shl_cast_fu_546_p1.read()) - sc_biguint<7>(p_shl1_cast_fu_558_p1.read()));
}

void maxCut::thread_tmp_20_fu_1300_p2() {
    tmp_20_fu_1300_p2 = (!tmp_19_reg_2112.read().is_01() || !ap_const_lv32_FFFFD8F0.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_19_reg_2112.read()) > sc_bigint<32>(ap_const_lv32_FFFFD8F0));
}

void maxCut::thread_tmp_21_cast_fu_1123_p1() {
    tmp_21_cast_fu_1123_p1 = esl_zext<7,3>(p_6_reg_459.read());
}

void maxCut::thread_tmp_21_fu_1118_p1() {
    tmp_21_fu_1118_p1 = esl_zext<64,3>(p_6_reg_459.read());
}

void maxCut::thread_tmp_22_fu_1140_p0() {
    tmp_22_fu_1140_p0 = matrix_load_reg_2081.read();
}

void maxCut::thread_tmp_22_fu_1140_p2() {
    tmp_22_fu_1140_p2 = (!tmp_22_fu_1140_p0.read().is_01() || !reg_528.read().is_01())? sc_lv<32>(): sc_bigint<24>(tmp_22_fu_1140_p0.read()) * sc_bigint<32>(reg_528.read());
}

void maxCut::thread_tmp_23_fu_819_p1() {
    tmp_23_fu_819_p1 = ret_V_i_fu_813_p2.read().range(16-1, 0);
}

void maxCut::thread_tmp_24_fu_988_p3() {
    tmp_24_fu_988_p3 = esl_concat<14,15>(tmp_40_fu_984_p1.read(), ap_const_lv15_0);
}

void maxCut::thread_tmp_25_fu_1623_p2() {
    tmp_25_fu_1623_p2 = (!tmp_76_fu_1619_p1.read().is_01() || !prob_cast_fu_1615_p1.read().is_01())? sc_lv<1>(): (sc_biguint<16>(tmp_76_fu_1619_p1.read()) > sc_biguint<16>(prob_cast_fu_1615_p1.read()));
}

void maxCut::thread_tmp_26_fu_1629_p2() {
    tmp_26_fu_1629_p2 = (!ap_const_lv32_0.is_01() || !reg_528.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_bigint<32>(reg_528.read()));
}

void maxCut::thread_tmp_27_cast_fu_583_p1() {
    tmp_27_cast_fu_583_p1 = esl_sext<64,7>(tmp_5_fu_578_p2.read());
}

void maxCut::thread_tmp_27_fu_823_p3() {
    tmp_27_fu_823_p3 = esl_concat<16,15>(tmp_23_fu_819_p1.read(), ap_const_lv15_0);
}

void maxCut::thread_tmp_28_fu_831_p2() {
    tmp_28_fu_831_p2 = (tmp_27_fu_823_p3.read() | grp_fu_515_p4.read());
}

void maxCut::thread_tmp_29_cast_fu_1896_p0() {
    tmp_29_cast_fu_1896_p0 =  (sc_lv<14>) (tmp_29_cast_fu_1896_p00.read());
}

void maxCut::thread_tmp_29_cast_fu_1896_p00() {
    tmp_29_cast_fu_1896_p00 = esl_zext<24,14>(indvars_iv_reg_436.read());
}

void maxCut::thread_tmp_29_cast_fu_1896_p1() {
    tmp_29_cast_fu_1896_p1 =  (sc_lv<11>) (ap_const_lv24_3E8);
}

void maxCut::thread_tmp_29_fu_996_p4() {
    tmp_29_fu_996_p4 = reg_V.read().range(27, 1);
}

void maxCut::thread_tmp_2_fu_588_p2() {
    tmp_2_fu_588_p2 = (!invdar1_reg_381.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(invdar1_reg_381.read() == ap_const_lv3_5);
}

void maxCut::thread_tmp_30_fu_837_p3() {
    tmp_30_fu_837_p3 = ret_V_i_fu_813_p2.read().range(16, 16);
}

void maxCut::thread_tmp_31_fu_1010_p3() {
    tmp_31_fu_1010_p3 = esl_concat<12,15>(tmp_41_fu_1006_p1.read(), ap_const_lv15_0);
}

void maxCut::thread_tmp_33_fu_1657_p0() {
    tmp_33_fu_1657_p0 = temperature_fu_254.read();
}

void maxCut::thread_tmp_33_fu_1657_p2() {
    tmp_33_fu_1657_p2 = (!tmp_33_fu_1657_p0.read().is_01() || !ap_const_lv32_1869F.is_01())? sc_lv<32>(): sc_bigint<32>(tmp_33_fu_1657_p0.read()) * sc_biguint<32>(ap_const_lv32_1869F);
}

void maxCut::thread_tmp_34_fu_1725_p3() {
    tmp_34_fu_1725_p3 = (!tmp_81_reg_2234.read()[0].is_01())? sc_lv<32>(): ((tmp_81_reg_2234.read()[0].to_bool())? neg_ti3_fu_1719_p2.read(): tmp_78_fu_1709_p1.read());
}

void maxCut::thread_tmp_35_fu_1737_p2() {
    tmp_35_fu_1737_p2 = (!temperature_fu_254.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(temperature_fu_254.read() == ap_const_lv32_0);
}

void maxCut::thread_tmp_36_fu_948_p1() {
    tmp_36_fu_948_p1 = ret_V_i1_fu_942_p2.read().range(16-1, 0);
}

void maxCut::thread_tmp_37_fu_1759_p2() {
    tmp_37_fu_1759_p2 = (!tmp_19_reg_2112.read().is_01() || !ap_const_lv32_FF674270.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_19_reg_2112.read()) > sc_bigint<32>(ap_const_lv32_FF674270));
}

void maxCut::thread_tmp_38_fu_1788_p1() {
    tmp_38_fu_1788_p1 = esl_zext<64,3>(t_V_2_reg_500.read());
}

void maxCut::thread_tmp_39_fu_962_p1() {
    tmp_39_fu_962_p1 = ret_V_i1_fu_942_p2.read().range(15-1, 0);
}

void maxCut::thread_tmp_3_fu_594_p2() {
    tmp_3_fu_594_p2 = (!invdar_reg_369.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(invdar_reg_369.read() == ap_const_lv3_5);
}

void maxCut::thread_tmp_40_cast_fu_716_p1() {
    tmp_40_cast_fu_716_p1 = esl_sext<64,7>(tmp_11_reg_1979.read());
}

void maxCut::thread_tmp_40_fu_984_p1() {
    tmp_40_fu_984_p1 = ret_V_i1_fu_942_p2.read().range(14-1, 0);
}

void maxCut::thread_tmp_41_fu_1006_p1() {
    tmp_41_fu_1006_p1 = ret_V_i1_fu_942_p2.read().range(12-1, 0);
}

void maxCut::thread_tmp_42_fu_1018_p3() {
    tmp_42_fu_1018_p3 = esl_concat<16,15>(tmp_36_fu_948_p1.read(), ap_const_lv15_0);
}

void maxCut::thread_tmp_43_fu_1026_p2() {
    tmp_43_fu_1026_p2 = (tmp_42_fu_1018_p3.read() | grp_fu_515_p4.read());
}

void maxCut::thread_tmp_43_i_fu_1486_p2() {
    tmp_43_i_fu_1486_p2 = (!ap_const_lv14_2710.is_01() || !tmp_69_fu_1479_p3.read().is_01())? sc_lv<14>(): (sc_bigint<14>(ap_const_lv14_2710) - sc_biguint<14>(tmp_69_fu_1479_p3.read()));
}

void maxCut::thread_tmp_44_fu_1032_p3() {
    tmp_44_fu_1032_p3 = ret_V_i1_fu_942_p2.read().range(16, 16);
}

void maxCut::thread_tmp_44_i1_fu_900_p4() {
    tmp_44_i1_fu_900_p4 = reg_V.read().range(28, 12);
}

void maxCut::thread_tmp_44_i2_fu_1501_p4() {
    tmp_44_i2_fu_1501_p4 = ret_V_4_cast9_reg_2038.read().range(28, 12);
}

void maxCut::thread_tmp_44_i_fu_763_p4() {
    tmp_44_i_fu_763_p4 = reg_V.read().range(28, 12);
}

void maxCut::thread_tmp_45_fu_1076_p1() {
    tmp_45_fu_1076_p1 = grp_fu_1066_p2.read().range(4-1, 0);
}

void maxCut::thread_tmp_45_i1_fu_910_p4() {
    tmp_45_i1_fu_910_p4 = reg_V.read().range(31, 15);
}

void maxCut::thread_tmp_45_i2_fu_1519_p3() {
    tmp_45_i2_fu_1519_p3 = esl_concat<1,16>(tmp_44_reg_2022.read(), tmp_70_fu_1510_p4.read());
}

void maxCut::thread_tmp_45_i_fu_773_p4() {
    tmp_45_i_fu_773_p4 = reg_V.read().range(31, 15);
}

void maxCut::thread_tmp_46_fu_1088_p1() {
    tmp_46_fu_1088_p1 = grp_fu_1066_p2.read().range(6-1, 0);
}

void maxCut::thread_tmp_47_fu_1100_p2() {
    tmp_47_fu_1100_p2 = (!p_shl4_cast_fu_1080_p3.read().is_01() || !p_shl5_cast_fu_1092_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(p_shl4_cast_fu_1080_p3.read()) - sc_biguint<7>(p_shl5_cast_fu_1092_p3.read()));
}

void maxCut::thread_tmp_47_i1_fu_920_p4() {
    tmp_47_i1_fu_920_p4 = reg_V.read().range(29, 13);
}

void maxCut::thread_tmp_47_i2_fu_1526_p4() {
    tmp_47_i2_fu_1526_p4 = ret_V_4_cast_reg_2043.read().range(29, 13);
}

void maxCut::thread_tmp_47_i_fu_783_p4() {
    tmp_47_i_fu_783_p4 = reg_V.read().range(29, 13);
}

void maxCut::thread_tmp_49_fu_1253_p4() {
    tmp_49_fu_1253_p4 = neg_mul8_fu_1248_p2.read().range(64, 46);
}

void maxCut::thread_tmp_4_fu_735_p2() {
    tmp_4_fu_735_p2 = (!invdar2_reg_414.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(invdar2_reg_414.read() == ap_const_lv3_5);
}

void maxCut::thread_tmp_50_fu_1263_p1() {
    tmp_50_fu_1263_p1 = esl_sext<32,19>(tmp_49_fu_1253_p4.read());
}

void maxCut::thread_tmp_51_fu_1267_p4() {
    tmp_51_fu_1267_p4 = mul7_reg_2125.read().range(64, 46);
}

void maxCut::thread_tmp_52_fu_1276_p1() {
    tmp_52_fu_1276_p1 = esl_sext<32,19>(tmp_51_fu_1267_p4.read());
}

void maxCut::thread_tmp_53_fu_1280_p3() {
    tmp_53_fu_1280_p3 = (!tmp_48_reg_2119.read()[0].is_01())? sc_lv<32>(): ((tmp_48_reg_2119.read()[0].to_bool())? tmp_50_fu_1263_p1.read(): tmp_52_fu_1276_p1.read());
}

void maxCut::thread_tmp_54_fu_1127_p2() {
    tmp_54_fu_1127_p2 = (!tmp_21_cast_fu_1123_p1.read().is_01() || !tmp_47_reg_2053.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_21_cast_fu_1123_p1.read()) + sc_biguint<7>(tmp_47_reg_2053.read()));
}

void maxCut::thread_tmp_56_fu_1178_p4() {
    tmp_56_fu_1178_p4 = neg_mul_fu_1173_p2.read().range(64, 46);
}

void maxCut::thread_tmp_58_cast_fu_1132_p1() {
    tmp_58_cast_fu_1132_p1 = esl_sext<64,7>(tmp_54_fu_1127_p2.read());
}

void maxCut::thread_tmp_58_fu_1204_p1() {
    tmp_58_fu_1204_p1 = esl_sext<22,19>(p_v1_v_fu_1188_p3.read());
}

void maxCut::thread_tmp_59_fu_1208_p3() {
    tmp_59_fu_1208_p3 = (!tmp_55_reg_2091.read()[0].is_01())? sc_lv<22>(): ((tmp_55_reg_2091.read()[0].to_bool())? neg_ti_fu_1198_p2.read(): tmp_58_fu_1204_p1.read());
}

void maxCut::thread_tmp_5_fu_578_p2() {
    tmp_5_fu_578_p2 = (!tmp_1_reg_1907.read().is_01() || !tmp_1_cast_fu_574_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_1_reg_1907.read()) + sc_biguint<7>(tmp_1_cast_fu_574_p1.read()));
}

void maxCut::thread_tmp_61_fu_1308_p0() {
    tmp_61_fu_1308_p0 = temperature_fu_254.read();
}

void maxCut::thread_tmp_63_fu_1331_p3() {
    tmp_63_fu_1331_p3 = temperature_load_1_reg_2142.read().range(31, 31);
}

void maxCut::thread_tmp_64_fu_1380_p3() {
    tmp_64_fu_1380_p3 = temperature_load_1_reg_2142.read().range(31, 31);
}

void maxCut::thread_tmp_66_fu_1451_p4() {
    tmp_66_fu_1451_p4 = neg_mul1_fu_1446_p2.read().range(46, 36);
}

void maxCut::thread_tmp_68_fu_1476_p1() {
    tmp_68_fu_1476_p1 = esl_sext<14,11>(p_v2_v_reg_2202.read());
}

void maxCut::thread_tmp_69_fu_1479_p3() {
    tmp_69_fu_1479_p3 = (!tmp_65_reg_2191.read()[0].is_01())? sc_lv<14>(): ((tmp_65_reg_2191.read()[0].to_bool())? neg_ti2_fu_1470_p2.read(): tmp_68_fu_1476_p1.read());
}

void maxCut::thread_tmp_6_fu_612_p3() {
    tmp_6_fu_612_p3 = esl_concat<3,3>(t_V_reg_392.read(), ap_const_lv3_0);
}

void maxCut::thread_tmp_70_fu_1510_p4() {
    tmp_70_fu_1510_p4 = tmp_43_reg_2016.read().range(30, 15);
}

void maxCut::thread_tmp_71_fu_1535_p4() {
    tmp_71_fu_1535_p4 = tmp_43_reg_2016.read().range(30, 1);
}

void maxCut::thread_tmp_72_fu_1569_p1() {
    tmp_72_fu_1569_p1 = ret_V_i2_fu_1563_p2.read().range(16-1, 0);
}

void maxCut::thread_tmp_73_fu_1573_p3() {
    tmp_73_fu_1573_p3 = esl_concat<16,15>(tmp_72_fu_1569_p1.read(), ap_const_lv15_0);
}

void maxCut::thread_tmp_74_fu_1581_p2() {
    tmp_74_fu_1581_p2 = (tmp_73_fu_1573_p3.read() | r_V_2_fu_1544_p3.read());
}

void maxCut::thread_tmp_75_fu_1587_p3() {
    tmp_75_fu_1587_p3 = ret_V_i2_fu_1563_p2.read().range(16, 16);
}

void maxCut::thread_tmp_76_fu_1619_p1() {
    tmp_76_fu_1619_p1 = grp_fu_1609_p2.read().range(16-1, 0);
}

void maxCut::thread_tmp_77_fu_1705_p1() {
    tmp_77_fu_1705_p1 = esl_sext<32,16>(tmp_82_fu_1695_p4.read());
}

void maxCut::thread_tmp_78_fu_1709_p1() {
    tmp_78_fu_1709_p1 = esl_sext<32,16>(tmp_83_reg_2245.read());
}

void maxCut::thread_tmp_79_fu_1712_p3() {
    tmp_79_fu_1712_p3 = (!tmp_81_reg_2234.read()[0].is_01())? sc_lv<32>(): ((tmp_81_reg_2234.read()[0].to_bool())? tmp_77_fu_1705_p1.read(): tmp_78_fu_1709_p1.read());
}

void maxCut::thread_tmp_7_fu_624_p3() {
    tmp_7_fu_624_p3 = esl_concat<3,1>(t_V_reg_392.read(), ap_const_lv1_0);
}

void maxCut::thread_tmp_80_fu_1649_p3() {
    tmp_80_fu_1649_p3 = mul2_fu_1643_p2.read().range(38, 38);
}

void maxCut::thread_tmp_82_fu_1695_p4() {
    tmp_82_fu_1695_p4 = neg_mul2_fu_1690_p2.read().range(64, 49);
}

void maxCut::thread_tmp_84_fu_1743_p4() {
    tmp_84_fu_1743_p4 = temperature_fu_254.read().range(31, 1);
}

void maxCut::thread_tmp_85_fu_1799_p1() {
    tmp_85_fu_1799_p1 = currentSolution_q0.read();
}

void maxCut::thread_tmp_86_fu_1852_p4() {
    tmp_86_fu_1852_p4 = neg_mul3_fu_1847_p2.read().range(64, 46);
}

void maxCut::thread_tmp_88_fu_1868_p1() {
    tmp_88_fu_1868_p1 = p_v_v_fu_1862_p3.read().range(8-1, 0);
}

void maxCut::thread_tmp_89_fu_1878_p1() {
    tmp_89_fu_1878_p1 = p_v_v_fu_1862_p3.read().range(8-1, 0);
}

void maxCut::thread_tmp_8_fu_636_p2() {
    tmp_8_fu_636_p2 = (!p_shl2_cast_fu_620_p1.read().is_01() || !p_shl3_cast_fu_632_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(p_shl2_cast_fu_620_p1.read()) - sc_biguint<7>(p_shl3_cast_fu_632_p1.read()));
}

void maxCut::thread_tmp_9_fu_550_p3() {
    tmp_9_fu_550_p3 = esl_concat<3,1>(invdar_reg_369.read(), ap_const_lv1_0);
}

void maxCut::thread_tmp_fu_538_p3() {
    tmp_fu_538_p3 = esl_concat<3,3>(invdar_reg_369.read(), ap_const_lv3_0);
}

void maxCut::thread_tmp_i1_fu_890_p4() {
    tmp_i1_fu_890_p4 = reg_V.read().range(26, 10);
}

void maxCut::thread_tmp_i3_fu_1492_p4() {
    tmp_i3_fu_1492_p4 = ret_V_4_cast1_reg_2033.read().range(26, 10);
}

void maxCut::thread_tmp_i_fu_753_p4() {
    tmp_i_fu_753_p4 = reg_V.read().range(26, 10);
}

void maxCut::thread_tmp_s_fu_730_p1() {
    tmp_s_fu_730_p1 = esl_zext<64,3>(invdar2_reg_414.read());
}

void maxCut::thread_trunc1_fu_1467_p1() {
    trunc1_fu_1467_p1 = esl_sext<14,11>(p_v2_v_reg_2202.read());
}

void maxCut::thread_trunc_fu_1194_p1() {
    trunc_fu_1194_p1 = esl_sext<22,19>(p_v1_v_fu_1188_p3.read());
}

void maxCut::thread_x1_fu_1387_p1() {
    x1_fu_1387_p1 = esl_sext<47,32>(deltaEnergy_reg_2131.read());
}

void maxCut::thread_x_assign_fu_1327_p1() {
    x_assign_fu_1327_p1 = esl_sext<32,21>(grp_fu_1312_p2.read());
}

void maxCut::thread_x_fu_1338_p1() {
    x_fu_1338_p1 = esl_sext<47,32>(deltaEnergy_reg_2131.read());
}

void maxCut::thread_ap_NS_fsm() {
    if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_588_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_594_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state4;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_588_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_594_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state3;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_600_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state7;
        } else {
            ap_NS_fsm = ap_ST_fsm_state5;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_642_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state4;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_642_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
            ap_NS_fsm = ap_ST_fsm_state6;
        } else {
            ap_NS_fsm = ap_ST_fsm_state5;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_735_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state8;
        } else {
            ap_NS_fsm = ap_ST_fsm_state7;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_741_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state9;
        } else {
            ap_NS_fsm = ap_ST_fsm_state8;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_fu_878_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state120;
        } else {
            ap_NS_fsm = ap_ST_fsm_state10;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        ap_NS_fsm = ap_ST_fsm_state43;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_1106_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state50;
        } else {
            ap_NS_fsm = ap_ST_fsm_state46;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state48;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        ap_NS_fsm = ap_ST_fsm_state51;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state53.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_20_fu_1300_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state81;
        } else {
            ap_NS_fsm = ap_ST_fsm_state54;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state78.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, sel_div_fu_1363_p3.read()))) {
            ap_NS_fsm = ap_ST_fsm_state81;
        } else {
            ap_NS_fsm = ap_ST_fsm_state79;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state79.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, sel_div1_fu_1412_p3.read()))) {
            ap_NS_fsm = ap_ST_fsm_state81;
        } else {
            ap_NS_fsm = ap_ST_fsm_state80;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_state82;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        ap_NS_fsm = ap_ST_fsm_state83;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state84;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state84))
    {
        ap_NS_fsm = ap_ST_fsm_state85;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state85))
    {
        ap_NS_fsm = ap_ST_fsm_state86;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state86))
    {
        ap_NS_fsm = ap_ST_fsm_state87;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state87))
    {
        ap_NS_fsm = ap_ST_fsm_state88;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state88))
    {
        ap_NS_fsm = ap_ST_fsm_state89;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state89))
    {
        ap_NS_fsm = ap_ST_fsm_state90;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state90))
    {
        ap_NS_fsm = ap_ST_fsm_state91;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state91))
    {
        ap_NS_fsm = ap_ST_fsm_state92;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state92))
    {
        ap_NS_fsm = ap_ST_fsm_state93;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state93))
    {
        ap_NS_fsm = ap_ST_fsm_state94;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state94))
    {
        ap_NS_fsm = ap_ST_fsm_state95;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state95))
    {
        ap_NS_fsm = ap_ST_fsm_state96;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state96))
    {
        ap_NS_fsm = ap_ST_fsm_state97;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state97))
    {
        ap_NS_fsm = ap_ST_fsm_state98;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state98))
    {
        ap_NS_fsm = ap_ST_fsm_state99;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state99))
    {
        ap_NS_fsm = ap_ST_fsm_state100;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state100))
    {
        ap_NS_fsm = ap_ST_fsm_state101;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state101))
    {
        ap_NS_fsm = ap_ST_fsm_state102;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state102))
    {
        ap_NS_fsm = ap_ST_fsm_state103;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state103))
    {
        ap_NS_fsm = ap_ST_fsm_state104;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state104))
    {
        ap_NS_fsm = ap_ST_fsm_state105;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state105))
    {
        ap_NS_fsm = ap_ST_fsm_state106;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state106))
    {
        ap_NS_fsm = ap_ST_fsm_state107;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state107))
    {
        ap_NS_fsm = ap_ST_fsm_state108;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state108))
    {
        ap_NS_fsm = ap_ST_fsm_state109;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state109))
    {
        ap_NS_fsm = ap_ST_fsm_state110;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state110))
    {
        ap_NS_fsm = ap_ST_fsm_state111;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state111))
    {
        ap_NS_fsm = ap_ST_fsm_state112;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state112))
    {
        ap_NS_fsm = ap_ST_fsm_state113;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state113))
    {
        ap_NS_fsm = ap_ST_fsm_state114;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state114))
    {
        ap_NS_fsm = ap_ST_fsm_state115;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state115))
    {
        ap_NS_fsm = ap_ST_fsm_state116;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state116))
    {
        ap_NS_fsm = ap_ST_fsm_state117;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state117))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state117.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_80_fu_1649_p3.read()))) {
            ap_NS_fsm = ap_ST_fsm_state120;
        } else {
            ap_NS_fsm = ap_ST_fsm_state118;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state118))
    {
        ap_NS_fsm = ap_ST_fsm_state119;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state119))
    {
        ap_NS_fsm = ap_ST_fsm_state120;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state120))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state120.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_1764_p2.read()) || 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_35_fu_1737_p2.read())) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_14_reg_2007.read())))) {
            ap_NS_fsm = ap_ST_fsm_state121;
        } else {
            ap_NS_fsm = ap_ST_fsm_state9;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state121))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1776_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1776_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state122;
        } else {
            ap_NS_fsm = ap_ST_fsm_state121;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state122))
    {
        ap_NS_fsm = ap_ST_fsm_state123;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state123))
    {
        ap_NS_fsm = ap_ST_fsm_state124;
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state124))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read()) && esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state125;
        } else {
            ap_NS_fsm = ap_ST_fsm_state124;
        }
    }
    else if (esl_seteq<1,125,125>(ap_CS_fsm.read(), ap_ST_fsm_state125))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) && esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state121;
        } else {
            ap_NS_fsm = ap_ST_fsm_state125;
        }
    }
    else
    {
        ap_NS_fsm =  (sc_lv<125>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void maxCut::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TDATA\" :  \"" << input_stream_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TVALID\" :  \"" << input_stream_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"input_stream_TREADY\" :  \"" << input_stream_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TKEEP\" :  \"" << input_stream_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TSTRB\" :  \"" << input_stream_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TUSER\" :  \"" << input_stream_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TLAST\" :  \"" << input_stream_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TID\" :  \"" << input_stream_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TDEST\" :  \"" << input_stream_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TDATA\" :  \"" << output_stream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TVALID\" :  \"" << output_stream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_stream_TREADY\" :  \"" << output_stream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TKEEP\" :  \"" << output_stream_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TSTRB\" :  \"" << output_stream_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TUSER\" :  \"" << output_stream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TLAST\" :  \"" << output_stream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TID\" :  \"" << output_stream_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TDEST\" :  \"" << output_stream_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

