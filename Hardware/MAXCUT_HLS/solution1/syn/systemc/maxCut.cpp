// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "maxCut.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic maxCut::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic maxCut::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<135> maxCut::ap_ST_fsm_state1 = "1";
const sc_lv<135> maxCut::ap_ST_fsm_state2 = "10";
const sc_lv<135> maxCut::ap_ST_fsm_state3 = "100";
const sc_lv<135> maxCut::ap_ST_fsm_state4 = "1000";
const sc_lv<135> maxCut::ap_ST_fsm_state5 = "10000";
const sc_lv<135> maxCut::ap_ST_fsm_state6 = "100000";
const sc_lv<135> maxCut::ap_ST_fsm_state7 = "1000000";
const sc_lv<135> maxCut::ap_ST_fsm_state8 = "10000000";
const sc_lv<135> maxCut::ap_ST_fsm_state9 = "100000000";
const sc_lv<135> maxCut::ap_ST_fsm_state10 = "1000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state11 = "10000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state12 = "100000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state43 = "1000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state44 = "10000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state45 = "100000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state46 = "1000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state47 = "10000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state48 = "100000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state49 = "1000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state50 = "10000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state51 = "100000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state52 = "1000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state53 = "10000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state54 = "100000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state55 = "1000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state56 = "10000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state57 = "100000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state58 = "1000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state59 = "10000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state60 = "100000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state61 = "1000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state62 = "10000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state63 = "100000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state64 = "1000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state65 = "10000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state66 = "100000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state67 = "1000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state68 = "10000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state69 = "100000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state70 = "1000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state71 = "10000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state72 = "100000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state73 = "1000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state74 = "10000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state75 = "100000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state76 = "1000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state77 = "10000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state78 = "100000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state79 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state80 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state81 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state82 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state83 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state84 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state85 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state86 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state87 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state88 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state89 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state90 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state91 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state92 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state93 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state94 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state95 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state96 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state97 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state98 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state99 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state100 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state101 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state102 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state103 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state104 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state105 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state106 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state107 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state108 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state109 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state110 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state111 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state112 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state113 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state114 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state115 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state116 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state117 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state118 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state119 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state120 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state121 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state122 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state123 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state124 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state125 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state126 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state127 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state128 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state129 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state130 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state131 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state132 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state133 = "1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state134 = "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<135> maxCut::ap_ST_fsm_state135 = "100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> maxCut::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> maxCut::ap_const_lv1_0 = "0";
const sc_lv<1> maxCut::ap_const_lv1_1 = "1";
const sc_lv<2> maxCut::ap_const_lv2_0 = "00";
const sc_lv<2> maxCut::ap_const_lv2_2 = "10";
const sc_lv<2> maxCut::ap_const_lv2_3 = "11";
const sc_lv<2> maxCut::ap_const_lv2_1 = "1";
const sc_lv<32> maxCut::ap_const_lv32_4 = "100";
const sc_lv<32> maxCut::ap_const_lv32_85 = "10000101";
const sc_lv<32> maxCut::ap_const_lv32_86 = "10000110";
const int maxCut::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> maxCut::ap_const_lv32_2A = "101010";
const sc_lv<32> maxCut::ap_const_lv32_2F = "101111";
const sc_lv<32> maxCut::ap_const_lv32_83 = "10000011";
const sc_lv<32> maxCut::ap_const_lv32_1 = "1";
const sc_lv<32> maxCut::ap_const_lv32_2 = "10";
const sc_lv<32> maxCut::ap_const_lv32_3 = "11";
const sc_lv<32> maxCut::ap_const_lv32_6 = "110";
const sc_lv<32> maxCut::ap_const_lv32_7 = "111";
const sc_lv<32> maxCut::ap_const_lv32_8 = "1000";
const sc_lv<32> maxCut::ap_const_lv32_28 = "101000";
const sc_lv<32> maxCut::ap_const_lv32_29 = "101001";
const sc_lv<32> maxCut::ap_const_lv32_2B = "101011";
const sc_lv<32> maxCut::ap_const_lv32_2C = "101100";
const sc_lv<32> maxCut::ap_const_lv32_2D = "101101";
const sc_lv<32> maxCut::ap_const_lv32_2E = "101110";
const sc_lv<32> maxCut::ap_const_lv32_30 = "110000";
const sc_lv<32> maxCut::ap_const_lv32_31 = "110001";
const sc_lv<32> maxCut::ap_const_lv32_54 = "1010100";
const sc_lv<32> maxCut::ap_const_lv32_55 = "1010101";
const sc_lv<32> maxCut::ap_const_lv32_78 = "1111000";
const sc_lv<32> maxCut::ap_const_lv32_79 = "1111001";
const sc_lv<32> maxCut::ap_const_lv32_7A = "1111010";
const sc_lv<32> maxCut::ap_const_lv32_7B = "1111011";
const sc_lv<32> maxCut::ap_const_lv32_7C = "1111100";
const sc_lv<32> maxCut::ap_const_lv32_7D = "1111101";
const sc_lv<32> maxCut::ap_const_lv32_7E = "1111110";
const sc_lv<32> maxCut::ap_const_lv32_7F = "1111111";
const sc_lv<32> maxCut::ap_const_lv32_81 = "10000001";
const sc_lv<32> maxCut::ap_const_lv32_82 = "10000010";
const sc_lv<32> maxCut::ap_const_lv32_84 = "10000100";
const sc_lv<3> maxCut::ap_const_lv3_0 = "000";
const sc_lv<32> maxCut::ap_const_lv32_5 = "101";
const sc_lv<18> maxCut::ap_const_lv18_0 = "000000000000000000";
const sc_lv<28> maxCut::ap_const_lv28_3E8 = "1111101000";
const sc_lv<25> maxCut::ap_const_lv25_0 = "0000000000000000000000000";
const sc_lv<32> maxCut::ap_const_lv32_3E8 = "1111101000";
const sc_lv<32> maxCut::ap_const_lv32_4E20 = "100111000100000";
const sc_lv<32> maxCut::ap_const_lv32_80 = "10000000";
const sc_lv<20> maxCut::ap_const_lv20_0 = "00000000000000000000";
const sc_lv<32> maxCut::ap_const_lv32_11 = "10001";
const sc_lv<32> maxCut::ap_const_lv32_1D = "11101";
const sc_lv<3> maxCut::ap_const_lv3_1 = "1";
const sc_lv<3> maxCut::ap_const_lv3_5 = "101";
const sc_lv<3> maxCut::ap_const_lv3_6 = "110";
const sc_lv<15> maxCut::ap_const_lv15_0 = "000000000000000";
const sc_lv<32> maxCut::ap_const_lv32_10 = "10000";
const sc_lv<32> maxCut::ap_const_lv32_FFFFFC18 = "11111111111111111111110000011000";
const sc_lv<18> maxCut::ap_const_lv18_3D090 = "111101000010010000";
const sc_lv<18> maxCut::ap_const_lv18_1 = "1";
const sc_lv<29> maxCut::ap_const_lv29_6 = "110";
const sc_lv<32> maxCut::ap_const_lv32_1F = "11111";
const sc_lv<65> maxCut::ap_const_lv65_10624DD30 = "100000110001001001101110100110000";
const sc_lv<32> maxCut::ap_const_lv32_40 = "1000000";
const sc_lv<65> maxCut::ap_const_lv65_0 = "00000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<22> maxCut::ap_const_lv22_0 = "0000000000000000000000";
const sc_lv<22> maxCut::ap_const_lv22_3E8 = "1111101000";
const sc_lv<32> maxCut::ap_const_lv32_F = "1111";
const sc_lv<32> maxCut::ap_const_lv32_12 = "10010";
const sc_lv<38> maxCut::ap_const_lv38_3E8 = "1111101000";
const sc_lv<76> maxCut::ap_const_lv76_4000800101 = "100000000000000100000000000000100000001";
const sc_lv<32> maxCut::ap_const_lv32_35 = "110101";
const sc_lv<32> maxCut::ap_const_lv32_4B = "1001011";
const sc_lv<57> maxCut::ap_const_lv57_10C6F7A1 = "10000110001101111011110100001";
const sc_lv<32> maxCut::ap_const_lv32_1869F = "11000011010011111";
const sc_lv<65> maxCut::ap_const_lv65_14F8B588F = "101001111100010110101100010001111";
const sc_lv<32> maxCut::ap_const_lv32_B = "1011";
const sc_lv<32> maxCut::ap_const_lv32_18A88 = "11000101010001000";
const sc_lv<8> maxCut::ap_const_lv8_0 = "00000000";
const sc_lv<19> maxCut::ap_const_lv19_3E8 = "1111101000";
const bool maxCut::ap_const_boolean_1 = true;

maxCut::maxCut(sc_module_name name) : sc_module(name), mVcdFile(0) {
    maxCut_AXILiteS_s_axi_U = new maxCut_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("maxCut_AXILiteS_s_axi_U");
    maxCut_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    maxCut_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    maxCut_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    maxCut_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    maxCut_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    maxCut_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    maxCut_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    maxCut_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    maxCut_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    maxCut_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    maxCut_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    maxCut_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    maxCut_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    maxCut_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    maxCut_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    maxCut_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    maxCut_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    maxCut_AXILiteS_s_axi_U->ACLK(ap_clk);
    maxCut_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    maxCut_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    maxCut_AXILiteS_s_axi_U->ap_start(ap_start);
    maxCut_AXILiteS_s_axi_U->interrupt(interrupt);
    maxCut_AXILiteS_s_axi_U->ap_ready(ap_ready);
    maxCut_AXILiteS_s_axi_U->ap_done(ap_done);
    maxCut_AXILiteS_s_axi_U->ap_idle(ap_idle);
    matrix_U = new maxCut_matrix("matrix_U");
    matrix_U->clk(ap_clk);
    matrix_U->reset(ap_rst_n_inv);
    matrix_U->address0(matrix_address0);
    matrix_U->ce0(matrix_ce0);
    matrix_U->we0(matrix_we0);
    matrix_U->d0(matrix_d0);
    matrix_U->q0(matrix_q0);
    currentSolution_U = new maxCut_currentSolbkb("currentSolution_U");
    currentSolution_U->clk(ap_clk);
    currentSolution_U->reset(ap_rst_n_inv);
    currentSolution_U->address0(currentSolution_address0);
    currentSolution_U->ce0(currentSolution_ce0);
    currentSolution_U->we0(currentSolution_we0);
    currentSolution_U->d0(currentSolution_d0);
    currentSolution_U->q0(currentSolution_q0);
    maxCut_urem_29ns_cud_U1 = new maxCut_urem_29ns_cud<1,33,29,4,29>("maxCut_urem_29ns_cud_U1");
    maxCut_urem_29ns_cud_U1->clk(ap_clk);
    maxCut_urem_29ns_cud_U1->reset(ap_rst_n_inv);
    maxCut_urem_29ns_cud_U1->start(grp_fu_925_ap_start);
    maxCut_urem_29ns_cud_U1->done(grp_fu_925_ap_done);
    maxCut_urem_29ns_cud_U1->din0(grp_fu_925_p0);
    maxCut_urem_29ns_cud_U1->din1(grp_fu_925_p1);
    maxCut_urem_29ns_cud_U1->ce(ap_var_for_const0);
    maxCut_urem_29ns_cud_U1->dout(grp_fu_925_p2);
    maxCut_urem_32ns_dEe_U2 = new maxCut_urem_32ns_dEe<1,36,32,11,32>("maxCut_urem_32ns_dEe_U2");
    maxCut_urem_32ns_dEe_U2->clk(ap_clk);
    maxCut_urem_32ns_dEe_U2->reset(ap_rst_n_inv);
    maxCut_urem_32ns_dEe_U2->start(grp_fu_1098_ap_start);
    maxCut_urem_32ns_dEe_U2->done(grp_fu_1098_ap_done);
    maxCut_urem_32ns_dEe_U2->din0(tmp_20_reg_1799);
    maxCut_urem_32ns_dEe_U2->din1(grp_fu_1098_p1);
    maxCut_urem_32ns_dEe_U2->ce(ap_var_for_const0);
    maxCut_urem_32ns_dEe_U2->dout(grp_fu_1098_p2);
    maxCut_sdiv_32ns_eOg_U3 = new maxCut_sdiv_32ns_eOg<1,36,32,32,32>("maxCut_sdiv_32ns_eOg_U3");
    maxCut_sdiv_32ns_eOg_U3->clk(ap_clk);
    maxCut_sdiv_32ns_eOg_U3->reset(ap_rst_n_inv);
    maxCut_sdiv_32ns_eOg_U3->start(grp_fu_1107_ap_start);
    maxCut_sdiv_32ns_eOg_U3->done(grp_fu_1107_ap_done);
    maxCut_sdiv_32ns_eOg_U3->din0(grp_fu_1107_p0);
    maxCut_sdiv_32ns_eOg_U3->din1(temperature_fu_228);
    maxCut_sdiv_32ns_eOg_U3->ce(ap_var_for_const0);
    maxCut_sdiv_32ns_eOg_U3->dout(grp_fu_1107_p2);
    maxCut_mul_mul_8sfYi_U4 = new maxCut_mul_mul_8sfYi<1,1,8,11,19>("maxCut_mul_mul_8sfYi_U4");
    maxCut_mul_mul_8sfYi_U4->din0(input_stream_V_data_V_0_data_out);
    maxCut_mul_mul_8sfYi_U4->din1(tmp_10_fu_1580_p1);
    maxCut_mul_mul_8sfYi_U4->dout(tmp_10_fu_1580_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state121);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state122);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state123);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state124);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state125);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state126);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state127);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state128);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state129);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state130);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state131);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state132);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state133);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state134);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state135);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state44);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state45);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state46);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state47);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state48);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state49);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state50);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state85);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state86);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state131);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_ack_in );

    SC_METHOD(thread_ap_block_state5);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( exitcond2_fu_609_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_data_V_1_state );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_state );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_state );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_state );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_state );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_state );
    sensitive << ( output_stream_V_dest_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( exitcond_fu_1466_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_data_V_1_state );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_state );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_state );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_state );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_state );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_state );
    sensitive << ( output_stream_V_dest_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( exitcond_fu_1466_p2 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_currentSolution_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_18_reg_1724 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( exitcond8_fu_965_p2 );
    sensitive << ( currentSolution_addr_2_reg_1752 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( tmp_s_fu_697_p1 );
    sensitive << ( tmp_16_fu_825_p1 );
    sensitive << ( tmp_22_fu_977_p1 );
    sensitive << ( tmp_40_fu_1478_p1 );

    SC_METHOD(thread_currentSolution_ce0);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( exitcond8_fu_965_p2 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( ap_CS_fsm_state131 );

    SC_METHOD(thread_currentSolution_d0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( tmp_15_cast_cast_fu_816_p3 );
    sensitive << ( tmp_30_fu_1332_p2 );

    SC_METHOD(thread_currentSolution_we0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( exitcond3_fu_708_p2 );
    sensitive << ( tmp_29_fu_1326_p2 );

    SC_METHOD(thread_exitcond1_fu_567_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( t_V_reg_366 );

    SC_METHOD(thread_exitcond2_fu_609_p2);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_609_p2 );
    sensitive << ( t_V_1_reg_377 );

    SC_METHOD(thread_exitcond3_fu_708_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( p_s_reg_399 );

    SC_METHOD(thread_exitcond8_fu_965_p2);
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( p_6_reg_433 );

    SC_METHOD(thread_exitcond_fu_1466_p2);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( t_V_2_reg_467 );

    SC_METHOD(thread_fpga_output_V_fu_1572_p3);
    sensitive << ( tmp_80_reg_1931 );
    sensitive << ( neg_ti3_fu_1562_p2 );
    sensitive << ( tmp_84_fu_1568_p1 );

    SC_METHOD(thread_grp_fu_1098_ap_start);
    sensitive << ( tmp_21_fu_1093_p2 );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_grp_fu_1098_p1);
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_grp_fu_1107_ap_start);
    sensitive << ( ap_CS_fsm_state86 );

    SC_METHOD(thread_grp_fu_1107_p0);
    sensitive << ( tmp_20_reg_1799 );
    sensitive << ( deltaEnergy_reg_1811 );
    sensitive << ( ap_CS_fsm_state86 );

    SC_METHOD(thread_grp_fu_482_p4);
    sensitive << ( lfsr_V );

    SC_METHOD(thread_grp_fu_925_ap_start);
    sensitive << ( tmp_17_fu_835_p2 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_grp_fu_925_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_47_fu_911_p2 );
    sensitive << ( grp_fu_482_p4 );

    SC_METHOD(thread_grp_fu_925_p1);
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_i_V_1_fu_714_p2);
    sensitive << ( p_s_reg_399 );

    SC_METHOD(thread_i_V_2_fu_1472_p2);
    sensitive << ( t_V_2_reg_467 );

    SC_METHOD(thread_i_V_fu_573_p2);
    sensitive << ( t_V_reg_366 );

    SC_METHOD(thread_indvarinc1_fu_535_p2);
    sensitive << ( invdar1_reg_355 );

    SC_METHOD(thread_indvarinc2_fu_691_p2);
    sensitive << ( invdar2_reg_388 );

    SC_METHOD(thread_indvarinc_fu_499_p2);
    sensitive << ( invdar_reg_343 );

    SC_METHOD(thread_input_stream_TDATA_blk_n);
    sensitive << ( input_stream_V_data_V_0_state );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_609_p2 );

    SC_METHOD(thread_input_stream_TREADY);
    sensitive << ( input_stream_V_dest_V_0_state );

    SC_METHOD(thread_input_stream_V_data_V_0_ack_in);
    sensitive << ( input_stream_V_data_V_0_state );

    SC_METHOD(thread_input_stream_V_data_V_0_ack_out);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_609_p2 );

    SC_METHOD(thread_input_stream_V_data_V_0_data_out);
    sensitive << ( input_stream_V_data_V_0_payload_A );
    sensitive << ( input_stream_V_data_V_0_payload_B );
    sensitive << ( input_stream_V_data_V_0_sel );

    SC_METHOD(thread_input_stream_V_data_V_0_load_A);
    sensitive << ( input_stream_V_data_V_0_sel_wr );
    sensitive << ( input_stream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_data_V_0_load_B);
    sensitive << ( input_stream_V_data_V_0_sel_wr );
    sensitive << ( input_stream_V_data_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_data_V_0_sel);
    sensitive << ( input_stream_V_data_V_0_sel_rd );

    SC_METHOD(thread_input_stream_V_data_V_0_state_cmp_full);
    sensitive << ( input_stream_V_data_V_0_state );

    SC_METHOD(thread_input_stream_V_data_V_0_vld_in);
    sensitive << ( input_stream_TVALID );

    SC_METHOD(thread_input_stream_V_data_V_0_vld_out);
    sensitive << ( input_stream_V_data_V_0_state );

    SC_METHOD(thread_input_stream_V_dest_V_0_ack_in);
    sensitive << ( input_stream_V_dest_V_0_state );

    SC_METHOD(thread_input_stream_V_dest_V_0_ack_out);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_609_p2 );

    SC_METHOD(thread_input_stream_V_dest_V_0_data_out);
    sensitive << ( input_stream_V_dest_V_0_payload_A );
    sensitive << ( input_stream_V_dest_V_0_payload_B );
    sensitive << ( input_stream_V_dest_V_0_sel );

    SC_METHOD(thread_input_stream_V_dest_V_0_load_A);
    sensitive << ( input_stream_V_dest_V_0_sel_wr );
    sensitive << ( input_stream_V_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_dest_V_0_load_B);
    sensitive << ( input_stream_V_dest_V_0_sel_wr );
    sensitive << ( input_stream_V_dest_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_dest_V_0_sel);
    sensitive << ( input_stream_V_dest_V_0_sel_rd );

    SC_METHOD(thread_input_stream_V_dest_V_0_state_cmp_full);
    sensitive << ( input_stream_V_dest_V_0_state );

    SC_METHOD(thread_input_stream_V_dest_V_0_vld_in);
    sensitive << ( input_stream_TVALID );

    SC_METHOD(thread_input_stream_V_dest_V_0_vld_out);
    sensitive << ( input_stream_V_dest_V_0_state );

    SC_METHOD(thread_input_stream_V_id_V_0_ack_in);
    sensitive << ( input_stream_V_id_V_0_state );

    SC_METHOD(thread_input_stream_V_id_V_0_ack_out);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_609_p2 );

    SC_METHOD(thread_input_stream_V_id_V_0_data_out);
    sensitive << ( input_stream_V_id_V_0_payload_A );
    sensitive << ( input_stream_V_id_V_0_payload_B );
    sensitive << ( input_stream_V_id_V_0_sel );

    SC_METHOD(thread_input_stream_V_id_V_0_load_A);
    sensitive << ( input_stream_V_id_V_0_sel_wr );
    sensitive << ( input_stream_V_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_id_V_0_load_B);
    sensitive << ( input_stream_V_id_V_0_sel_wr );
    sensitive << ( input_stream_V_id_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_id_V_0_sel);
    sensitive << ( input_stream_V_id_V_0_sel_rd );

    SC_METHOD(thread_input_stream_V_id_V_0_state_cmp_full);
    sensitive << ( input_stream_V_id_V_0_state );

    SC_METHOD(thread_input_stream_V_id_V_0_vld_in);
    sensitive << ( input_stream_TVALID );

    SC_METHOD(thread_input_stream_V_id_V_0_vld_out);
    sensitive << ( input_stream_V_id_V_0_state );

    SC_METHOD(thread_input_stream_V_keep_V_0_ack_in);
    sensitive << ( input_stream_V_keep_V_0_state );

    SC_METHOD(thread_input_stream_V_keep_V_0_ack_out);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_609_p2 );

    SC_METHOD(thread_input_stream_V_keep_V_0_data_out);
    sensitive << ( input_stream_V_keep_V_0_payload_A );
    sensitive << ( input_stream_V_keep_V_0_payload_B );
    sensitive << ( input_stream_V_keep_V_0_sel );

    SC_METHOD(thread_input_stream_V_keep_V_0_load_A);
    sensitive << ( input_stream_V_keep_V_0_sel_wr );
    sensitive << ( input_stream_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_keep_V_0_load_B);
    sensitive << ( input_stream_V_keep_V_0_sel_wr );
    sensitive << ( input_stream_V_keep_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_keep_V_0_sel);
    sensitive << ( input_stream_V_keep_V_0_sel_rd );

    SC_METHOD(thread_input_stream_V_keep_V_0_state_cmp_full);
    sensitive << ( input_stream_V_keep_V_0_state );

    SC_METHOD(thread_input_stream_V_keep_V_0_vld_in);
    sensitive << ( input_stream_TVALID );

    SC_METHOD(thread_input_stream_V_keep_V_0_vld_out);
    sensitive << ( input_stream_V_keep_V_0_state );

    SC_METHOD(thread_input_stream_V_strb_V_0_ack_in);
    sensitive << ( input_stream_V_strb_V_0_state );

    SC_METHOD(thread_input_stream_V_strb_V_0_ack_out);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_609_p2 );

    SC_METHOD(thread_input_stream_V_strb_V_0_data_out);
    sensitive << ( input_stream_V_strb_V_0_payload_A );
    sensitive << ( input_stream_V_strb_V_0_payload_B );
    sensitive << ( input_stream_V_strb_V_0_sel );

    SC_METHOD(thread_input_stream_V_strb_V_0_load_A);
    sensitive << ( input_stream_V_strb_V_0_sel_wr );
    sensitive << ( input_stream_V_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_strb_V_0_load_B);
    sensitive << ( input_stream_V_strb_V_0_sel_wr );
    sensitive << ( input_stream_V_strb_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_strb_V_0_sel);
    sensitive << ( input_stream_V_strb_V_0_sel_rd );

    SC_METHOD(thread_input_stream_V_strb_V_0_state_cmp_full);
    sensitive << ( input_stream_V_strb_V_0_state );

    SC_METHOD(thread_input_stream_V_strb_V_0_vld_in);
    sensitive << ( input_stream_TVALID );

    SC_METHOD(thread_input_stream_V_strb_V_0_vld_out);
    sensitive << ( input_stream_V_strb_V_0_state );

    SC_METHOD(thread_input_stream_V_user_V_0_ack_in);
    sensitive << ( input_stream_V_user_V_0_state );

    SC_METHOD(thread_input_stream_V_user_V_0_ack_out);
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_609_p2 );

    SC_METHOD(thread_input_stream_V_user_V_0_data_out);
    sensitive << ( input_stream_V_user_V_0_payload_A );
    sensitive << ( input_stream_V_user_V_0_payload_B );
    sensitive << ( input_stream_V_user_V_0_sel );

    SC_METHOD(thread_input_stream_V_user_V_0_load_A);
    sensitive << ( input_stream_V_user_V_0_sel_wr );
    sensitive << ( input_stream_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_user_V_0_load_B);
    sensitive << ( input_stream_V_user_V_0_sel_wr );
    sensitive << ( input_stream_V_user_V_0_state_cmp_full );

    SC_METHOD(thread_input_stream_V_user_V_0_sel);
    sensitive << ( input_stream_V_user_V_0_sel_rd );

    SC_METHOD(thread_input_stream_V_user_V_0_state_cmp_full);
    sensitive << ( input_stream_V_user_V_0_state );

    SC_METHOD(thread_input_stream_V_user_V_0_vld_in);
    sensitive << ( input_stream_TVALID );

    SC_METHOD(thread_input_stream_V_user_V_0_vld_out);
    sensitive << ( input_stream_V_user_V_0_state );

    SC_METHOD(thread_iterate_V_fu_841_p2);
    sensitive << ( p_4_reg_410 );

    SC_METHOD(thread_j_V_1_fu_971_p2);
    sensitive << ( p_6_reg_433 );

    SC_METHOD(thread_j_V_fu_615_p2);
    sensitive << ( t_V_1_reg_377 );

    SC_METHOD(thread_localFieldVal_1_fu_1072_p2);
    sensitive << ( localFieldVal_reg_444 );
    sensitive << ( tmp_62_fu_1065_p3 );

    SC_METHOD(thread_matrix_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_27_cast_fu_550_p1 );
    sensitive << ( tmp_64_cast_fu_683_p1 );
    sensitive << ( tmp_68_cast_fu_991_p1 );

    SC_METHOD(thread_matrix_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_matrix_d0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( tmp_12_cast_cast_fu_687_p1 );

    SC_METHOD(thread_matrix_we0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_mul1_fu_1307_p0);
    sensitive << ( ap_CS_fsm_state126 );
    sensitive << ( mul1_fu_1307_p00 );

    SC_METHOD(thread_mul1_fu_1307_p00);
    sensitive << ( ret_V_reg_1865 );

    SC_METHOD(thread_mul1_fu_1307_p2);
    sensitive << ( mul1_fu_1307_p0 );

    SC_METHOD(thread_mul2_fu_1343_p0);
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( mul2_fu_1343_p00 );

    SC_METHOD(thread_mul2_fu_1343_p00);
    sensitive << ( phi_mul_reg_421 );

    SC_METHOD(thread_mul2_fu_1343_p2);
    sensitive << ( mul2_fu_1343_p0 );

    SC_METHOD(thread_mul3_fu_1374_p0);
    sensitive << ( tmp_35_reg_1881 );
    sensitive << ( ap_CS_fsm_state128 );

    SC_METHOD(thread_mul3_fu_1374_p2);
    sensitive << ( mul3_fu_1374_p0 );

    SC_METHOD(thread_mul4_fu_1501_p1);
    sensitive << ( reg_495 );
    sensitive << ( ap_CS_fsm_state133 );

    SC_METHOD(thread_mul4_fu_1501_p2);
    sensitive << ( mul4_fu_1501_p1 );

    SC_METHOD(thread_mul7_fu_1128_p0);
    sensitive << ( tmp_i2_reg_1833 );
    sensitive << ( ap_CS_fsm_state123 );

    SC_METHOD(thread_mul7_fu_1128_p2);
    sensitive << ( mul7_fu_1128_p0 );

    SC_METHOD(thread_mul_fu_1016_p0);
    sensitive << ( tmp_23_reg_1762 );
    sensitive << ( ap_CS_fsm_state45 );

    SC_METHOD(thread_mul_fu_1016_p2);
    sensitive << ( mul_fu_1016_p0 );

    SC_METHOD(thread_neg_mul1_fu_1390_p2);
    sensitive << ( mul3_reg_1892 );

    SC_METHOD(thread_neg_mul2_fu_1537_p2);
    sensitive << ( mul4_reg_1937 );

    SC_METHOD(thread_neg_mul8_fu_1144_p2);
    sensitive << ( mul7_reg_1844 );

    SC_METHOD(thread_neg_mul_fu_1032_p2);
    sensitive << ( mul_reg_1773 );

    SC_METHOD(thread_neg_ti1_fu_1165_p2);
    sensitive << ( p_v2_v_fu_1159_p3 );

    SC_METHOD(thread_neg_ti2_fu_1419_p2);
    sensitive << ( tmp_79_fu_1412_p3 );

    SC_METHOD(thread_neg_ti3_fu_1562_p2);
    sensitive << ( tmp_83_fu_1558_p1 );

    SC_METHOD(thread_neg_ti_fu_1056_p2);
    sensitive << ( trunc_fu_1053_p1 );

    SC_METHOD(thread_or_cond_fu_1454_p2);
    sensitive << ( tmp_38_fu_1443_p2 );
    sensitive << ( tmp_39_fu_1449_p2 );

    SC_METHOD(thread_output_last_V_fu_1483_p2);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( exitcond_fu_1466_p2 );
    sensitive << ( t_V_2_reg_467 );

    SC_METHOD(thread_output_stream_TDATA);
    sensitive << ( output_stream_V_data_V_1_data_out );

    SC_METHOD(thread_output_stream_TDATA_blk_n);
    sensitive << ( output_stream_V_data_V_1_state );
    sensitive << ( ap_CS_fsm_state134 );
    sensitive << ( ap_CS_fsm_state135 );

    SC_METHOD(thread_output_stream_TDEST);
    sensitive << ( output_stream_V_dest_V_1_data_out );

    SC_METHOD(thread_output_stream_TID);
    sensitive << ( output_stream_V_id_V_1_data_out );

    SC_METHOD(thread_output_stream_TKEEP);
    sensitive << ( output_stream_V_keep_V_1_data_out );

    SC_METHOD(thread_output_stream_TLAST);
    sensitive << ( output_stream_V_last_V_1_data_out );

    SC_METHOD(thread_output_stream_TSTRB);
    sensitive << ( output_stream_V_strb_V_1_data_out );

    SC_METHOD(thread_output_stream_TUSER);
    sensitive << ( output_stream_V_user_V_1_data_out );

    SC_METHOD(thread_output_stream_TVALID);
    sensitive << ( output_stream_V_dest_V_1_state );

    SC_METHOD(thread_output_stream_V_data_V_1_ack_in);
    sensitive << ( output_stream_V_data_V_1_state );

    SC_METHOD(thread_output_stream_V_data_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_data_V_1_data_out);
    sensitive << ( output_stream_V_data_V_1_payload_A );
    sensitive << ( output_stream_V_data_V_1_payload_B );
    sensitive << ( output_stream_V_data_V_1_sel );

    SC_METHOD(thread_output_stream_V_data_V_1_load_A);
    sensitive << ( output_stream_V_data_V_1_sel_wr );
    sensitive << ( output_stream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_data_V_1_load_B);
    sensitive << ( output_stream_V_data_V_1_sel_wr );
    sensitive << ( output_stream_V_data_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_data_V_1_sel);
    sensitive << ( output_stream_V_data_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_data_V_1_state_cmp_full);
    sensitive << ( output_stream_V_data_V_1_state );

    SC_METHOD(thread_output_stream_V_data_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state134 );

    SC_METHOD(thread_output_stream_V_data_V_1_vld_out);
    sensitive << ( output_stream_V_data_V_1_state );

    SC_METHOD(thread_output_stream_V_dest_V_1_ack_in);
    sensitive << ( output_stream_V_dest_V_1_state );

    SC_METHOD(thread_output_stream_V_dest_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_dest_V_1_data_out);
    sensitive << ( output_stream_V_dest_V_1_payload_A );
    sensitive << ( output_stream_V_dest_V_1_payload_B );
    sensitive << ( output_stream_V_dest_V_1_sel );

    SC_METHOD(thread_output_stream_V_dest_V_1_load_A);
    sensitive << ( output_stream_V_dest_V_1_sel_wr );
    sensitive << ( output_stream_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_dest_V_1_load_B);
    sensitive << ( output_stream_V_dest_V_1_sel_wr );
    sensitive << ( output_stream_V_dest_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_dest_V_1_sel);
    sensitive << ( output_stream_V_dest_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_dest_V_1_state_cmp_full);
    sensitive << ( output_stream_V_dest_V_1_state );

    SC_METHOD(thread_output_stream_V_dest_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state134 );

    SC_METHOD(thread_output_stream_V_dest_V_1_vld_out);
    sensitive << ( output_stream_V_dest_V_1_state );

    SC_METHOD(thread_output_stream_V_id_V_1_ack_in);
    sensitive << ( output_stream_V_id_V_1_state );

    SC_METHOD(thread_output_stream_V_id_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_id_V_1_data_out);
    sensitive << ( output_stream_V_id_V_1_payload_A );
    sensitive << ( output_stream_V_id_V_1_payload_B );
    sensitive << ( output_stream_V_id_V_1_sel );

    SC_METHOD(thread_output_stream_V_id_V_1_load_A);
    sensitive << ( output_stream_V_id_V_1_sel_wr );
    sensitive << ( output_stream_V_id_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_id_V_1_load_B);
    sensitive << ( output_stream_V_id_V_1_sel_wr );
    sensitive << ( output_stream_V_id_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_id_V_1_sel);
    sensitive << ( output_stream_V_id_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_id_V_1_state_cmp_full);
    sensitive << ( output_stream_V_id_V_1_state );

    SC_METHOD(thread_output_stream_V_id_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state134 );

    SC_METHOD(thread_output_stream_V_id_V_1_vld_out);
    sensitive << ( output_stream_V_id_V_1_state );

    SC_METHOD(thread_output_stream_V_keep_V_1_ack_in);
    sensitive << ( output_stream_V_keep_V_1_state );

    SC_METHOD(thread_output_stream_V_keep_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_keep_V_1_data_out);
    sensitive << ( output_stream_V_keep_V_1_payload_A );
    sensitive << ( output_stream_V_keep_V_1_payload_B );
    sensitive << ( output_stream_V_keep_V_1_sel );

    SC_METHOD(thread_output_stream_V_keep_V_1_load_A);
    sensitive << ( output_stream_V_keep_V_1_sel_wr );
    sensitive << ( output_stream_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_keep_V_1_load_B);
    sensitive << ( output_stream_V_keep_V_1_sel_wr );
    sensitive << ( output_stream_V_keep_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_keep_V_1_sel);
    sensitive << ( output_stream_V_keep_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_keep_V_1_state_cmp_full);
    sensitive << ( output_stream_V_keep_V_1_state );

    SC_METHOD(thread_output_stream_V_keep_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state134 );

    SC_METHOD(thread_output_stream_V_keep_V_1_vld_out);
    sensitive << ( output_stream_V_keep_V_1_state );

    SC_METHOD(thread_output_stream_V_last_V_1_ack_in);
    sensitive << ( output_stream_V_last_V_1_state );

    SC_METHOD(thread_output_stream_V_last_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_last_V_1_data_out);
    sensitive << ( output_stream_V_last_V_1_payload_A );
    sensitive << ( output_stream_V_last_V_1_payload_B );
    sensitive << ( output_stream_V_last_V_1_sel );

    SC_METHOD(thread_output_stream_V_last_V_1_load_A);
    sensitive << ( output_stream_V_last_V_1_sel_wr );
    sensitive << ( output_stream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_last_V_1_load_B);
    sensitive << ( output_stream_V_last_V_1_sel_wr );
    sensitive << ( output_stream_V_last_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_last_V_1_sel);
    sensitive << ( output_stream_V_last_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_last_V_1_state_cmp_full);
    sensitive << ( output_stream_V_last_V_1_state );

    SC_METHOD(thread_output_stream_V_last_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state134 );

    SC_METHOD(thread_output_stream_V_last_V_1_vld_out);
    sensitive << ( output_stream_V_last_V_1_state );

    SC_METHOD(thread_output_stream_V_strb_V_1_ack_in);
    sensitive << ( output_stream_V_strb_V_1_state );

    SC_METHOD(thread_output_stream_V_strb_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_strb_V_1_data_out);
    sensitive << ( output_stream_V_strb_V_1_payload_A );
    sensitive << ( output_stream_V_strb_V_1_payload_B );
    sensitive << ( output_stream_V_strb_V_1_sel );

    SC_METHOD(thread_output_stream_V_strb_V_1_load_A);
    sensitive << ( output_stream_V_strb_V_1_sel_wr );
    sensitive << ( output_stream_V_strb_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_strb_V_1_load_B);
    sensitive << ( output_stream_V_strb_V_1_sel_wr );
    sensitive << ( output_stream_V_strb_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_strb_V_1_sel);
    sensitive << ( output_stream_V_strb_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_strb_V_1_state_cmp_full);
    sensitive << ( output_stream_V_strb_V_1_state );

    SC_METHOD(thread_output_stream_V_strb_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state134 );

    SC_METHOD(thread_output_stream_V_strb_V_1_vld_out);
    sensitive << ( output_stream_V_strb_V_1_state );

    SC_METHOD(thread_output_stream_V_user_V_1_ack_in);
    sensitive << ( output_stream_V_user_V_1_state );

    SC_METHOD(thread_output_stream_V_user_V_1_ack_out);
    sensitive << ( output_stream_TREADY );

    SC_METHOD(thread_output_stream_V_user_V_1_data_out);
    sensitive << ( output_stream_V_user_V_1_payload_A );
    sensitive << ( output_stream_V_user_V_1_payload_B );
    sensitive << ( output_stream_V_user_V_1_sel );

    SC_METHOD(thread_output_stream_V_user_V_1_load_A);
    sensitive << ( output_stream_V_user_V_1_sel_wr );
    sensitive << ( output_stream_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_user_V_1_load_B);
    sensitive << ( output_stream_V_user_V_1_sel_wr );
    sensitive << ( output_stream_V_user_V_1_state_cmp_full );

    SC_METHOD(thread_output_stream_V_user_V_1_sel);
    sensitive << ( output_stream_V_user_V_1_sel_rd );

    SC_METHOD(thread_output_stream_V_user_V_1_state_cmp_full);
    sensitive << ( output_stream_V_user_V_1_state );

    SC_METHOD(thread_output_stream_V_user_V_1_vld_in);
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( ap_CS_fsm_state134 );

    SC_METHOD(thread_output_stream_V_user_V_1_vld_out);
    sensitive << ( output_stream_V_user_V_1_state );

    SC_METHOD(thread_p_shl1_cast_fu_525_p1);
    sensitive << ( tmp_9_fu_517_p3 );

    SC_METHOD(thread_p_shl2_cast_fu_587_p1);
    sensitive << ( tmp_6_fu_579_p3 );

    SC_METHOD(thread_p_shl3_cast_fu_599_p1);
    sensitive << ( tmp_7_fu_591_p3 );

    SC_METHOD(thread_p_shl4_cast_fu_939_p3);
    sensitive << ( tmp_49_fu_935_p1 );

    SC_METHOD(thread_p_shl5_cast_fu_951_p3);
    sensitive << ( tmp_50_fu_947_p1 );

    SC_METHOD(thread_p_shl_cast_fu_513_p1);
    sensitive << ( tmp_fu_505_p3 );

    SC_METHOD(thread_p_v1_v_fu_1047_p3);
    sensitive << ( tmp_53_reg_1767 );
    sensitive << ( tmp_55_reg_1778 );
    sensitive << ( tmp_54_fu_1037_p4 );

    SC_METHOD(thread_p_v2_v_fu_1159_p3);
    sensitive << ( tmp_63_reg_1838 );
    sensitive << ( tmp_65_reg_1849 );
    sensitive << ( tmp_64_fu_1149_p4 );

    SC_METHOD(thread_p_v_v_fu_1552_p3);
    sensitive << ( tmp_80_reg_1931 );
    sensitive << ( tmp_82_reg_1942 );
    sensitive << ( tmp_81_fu_1542_p4 );

    SC_METHOD(thread_phitmp_fu_1460_p2);
    sensitive << ( phi_mul_reg_421 );

    SC_METHOD(thread_r_V_1_fu_774_p3);
    sensitive << ( ret_V2_i_fu_768_p2 );

    SC_METHOD(thread_r_V_3_fu_893_p3);
    sensitive << ( ret_V2_i2_fu_887_p2 );

    SC_METHOD(thread_r_V_4_fu_1229_p3);
    sensitive << ( ret_V2_i4_fu_1223_p2 );

    SC_METHOD(thread_ret_V2_i2_fu_887_p2);
    sensitive << ( tmp_45_fu_881_p2 );
    sensitive << ( tmp_44_fu_875_p2 );

    SC_METHOD(thread_ret_V2_i4_fu_1223_p2);
    sensitive << ( tmp_58_fu_1218_p2 );
    sensitive << ( tmp_57_fu_1212_p2 );

    SC_METHOD(thread_ret_V2_i_fu_768_p2);
    sensitive << ( tmp_27_fu_762_p2 );
    sensitive << ( tmp_26_fu_756_p2 );

    SC_METHOD(thread_ret_V_1_cast_fu_806_p1);
    sensitive << ( ret_V_1_fu_798_p3 );

    SC_METHOD(thread_ret_V_1_fu_798_p3);
    sensitive << ( grp_fu_482_p4 );
    sensitive << ( tmp_32_fu_792_p2 );

    SC_METHOD(thread_ret_V_4_fu_1276_p3);
    sensitive << ( tmp_61_fu_1267_p4 );
    sensitive << ( tmp_60_fu_1261_p2 );

    SC_METHOD(thread_ret_V_5_cast_fu_1284_p1);
    sensitive << ( ret_V_4_fu_1276_p3 );

    SC_METHOD(thread_ret_V_fu_1298_p0);
    sensitive << ( ap_CS_fsm_state125 );
    sensitive << ( ret_V_fu_1298_p00 );

    SC_METHOD(thread_ret_V_fu_1298_p00);
    sensitive << ( ret_V_4_fu_1276_p3 );

    SC_METHOD(thread_ret_V_fu_1298_p2);
    sensitive << ( ret_V_fu_1298_p0 );

    SC_METHOD(thread_tmp5_cast_fu_1183_p1);
    sensitive << ( tmp5_reg_1855 );

    SC_METHOD(thread_tmp5_fu_1177_p2);
    sensitive << ( tmp_66_fu_1171_p3 );

    SC_METHOD(thread_tmp_10_fu_1580_p1);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_tmp_11_fu_653_p2);
    sensitive << ( tmp_8_reg_1645 );
    sensitive << ( tmp_12_cast_fu_649_p1 );

    SC_METHOD(thread_tmp_12_cast_cast_fu_687_p1);
    sensitive << ( tmp_10_reg_1658 );

    SC_METHOD(thread_tmp_12_cast_fu_649_p1);
    sensitive << ( t_V_1_reg_377 );

    SC_METHOD(thread_tmp_12_fu_720_p3);
    sensitive << ( lfsr_V );

    SC_METHOD(thread_tmp_13_fu_728_p1);
    sensitive << ( lfsr_V );

    SC_METHOD(thread_tmp_14_fu_732_p3);
    sensitive << ( lfsr_V );

    SC_METHOD(thread_tmp_15_cast_cast_fu_816_p3);
    sensitive << ( tmp_12_fu_720_p3 );

    SC_METHOD(thread_tmp_15_fu_740_p3);
    sensitive << ( lfsr_V );

    SC_METHOD(thread_tmp_16_fu_825_p1);
    sensitive << ( p_s_reg_399 );

    SC_METHOD(thread_tmp_17_fu_835_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( p_4_reg_410 );

    SC_METHOD(thread_tmp_18_fu_931_p1);
    sensitive << ( grp_fu_925_p2 );

    SC_METHOD(thread_tmp_19_fu_1078_p2);
    sensitive << ( localFieldVal_reg_444 );

    SC_METHOD(thread_tmp_1_cast_fu_541_p1);
    sensitive << ( invdar1_reg_355 );

    SC_METHOD(thread_tmp_1_fu_529_p2);
    sensitive << ( p_shl_cast_fu_513_p1 );
    sensitive << ( p_shl1_cast_fu_525_p1 );

    SC_METHOD(thread_tmp_20_fu_1087_p1);
    sensitive << ( tmp_19_reg_1794 );
    sensitive << ( ap_CS_fsm_state49 );

    SC_METHOD(thread_tmp_20_fu_1087_p2);
    sensitive << ( reg_495 );
    sensitive << ( tmp_20_fu_1087_p1 );

    SC_METHOD(thread_tmp_21_fu_1093_p2);
    sensitive << ( tmp_20_reg_1799 );
    sensitive << ( ap_CS_fsm_state50 );

    SC_METHOD(thread_tmp_22_cast_fu_982_p1);
    sensitive << ( p_6_reg_433 );

    SC_METHOD(thread_tmp_22_fu_977_p1);
    sensitive << ( p_6_reg_433 );

    SC_METHOD(thread_tmp_23_fu_999_p0);
    sensitive << ( matrix_load_reg_1757 );
    sensitive << ( ap_CS_fsm_state44 );

    SC_METHOD(thread_tmp_23_fu_999_p2);
    sensitive << ( reg_495 );
    sensitive << ( tmp_23_fu_999_p0 );

    SC_METHOD(thread_tmp_24_fu_748_p3);
    sensitive << ( lfsr_V );

    SC_METHOD(thread_tmp_26_fu_756_p2);
    sensitive << ( tmp_14_fu_732_p3 );
    sensitive << ( tmp_13_fu_728_p1 );

    SC_METHOD(thread_tmp_27_cast_fu_550_p1);
    sensitive << ( tmp_5_fu_545_p2 );

    SC_METHOD(thread_tmp_27_fu_762_p2);
    sensitive << ( tmp_24_fu_748_p3 );
    sensitive << ( tmp_15_fu_740_p3 );

    SC_METHOD(thread_tmp_28_fu_1322_p1);
    sensitive << ( tmp_72_fu_1313_p4 );

    SC_METHOD(thread_tmp_29_fu_1326_p2);
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( prob_reg_456 );
    sensitive << ( tmp_28_fu_1322_p1 );

    SC_METHOD(thread_tmp_2_fu_555_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( invdar1_reg_355 );

    SC_METHOD(thread_tmp_30_fu_1332_p2);
    sensitive << ( reg_495 );

    SC_METHOD(thread_tmp_31_fu_782_p4);
    sensitive << ( lfsr_V );

    SC_METHOD(thread_tmp_32_fu_792_p2);
    sensitive << ( tmp_31_fu_782_p4 );
    sensitive << ( r_V_1_fu_774_p3 );

    SC_METHOD(thread_tmp_34_fu_847_p1);
    sensitive << ( lfsr_V );

    SC_METHOD(thread_tmp_35_fu_1357_p0);
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( temperature_fu_228 );

    SC_METHOD(thread_tmp_35_fu_1357_p2);
    sensitive << ( tmp_35_fu_1357_p0 );

    SC_METHOD(thread_tmp_36_fu_1425_p3);
    sensitive << ( tmp_74_reg_1886 );
    sensitive << ( tmp_78_fu_1409_p1 );
    sensitive << ( neg_ti2_fu_1419_p2 );

    SC_METHOD(thread_tmp_37_fu_1437_p2);
    sensitive << ( tmp_17_reg_1691 );
    sensitive << ( ap_CS_fsm_state130 );
    sensitive << ( temperature_fu_228 );

    SC_METHOD(thread_tmp_38_fu_1443_p2);
    sensitive << ( tmp_17_reg_1691 );
    sensitive << ( ap_CS_fsm_state130 );
    sensitive << ( tmp_37_fu_1437_p2 );
    sensitive << ( temperature_fu_228 );

    SC_METHOD(thread_tmp_39_fu_1449_p2);
    sensitive << ( tmp_17_reg_1691 );
    sensitive << ( tmp_20_reg_1799 );
    sensitive << ( ap_CS_fsm_state130 );
    sensitive << ( tmp_37_fu_1437_p2 );

    SC_METHOD(thread_tmp_3_fu_561_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( invdar_reg_343 );
    sensitive << ( tmp_2_fu_555_p2 );

    SC_METHOD(thread_tmp_40_fu_1478_p1);
    sensitive << ( t_V_2_reg_467 );

    SC_METHOD(thread_tmp_41_fu_851_p3);
    sensitive << ( lfsr_V );

    SC_METHOD(thread_tmp_42_fu_859_p3);
    sensitive << ( lfsr_V );

    SC_METHOD(thread_tmp_43_fu_867_p3);
    sensitive << ( lfsr_V );

    SC_METHOD(thread_tmp_44_fu_875_p2);
    sensitive << ( tmp_41_fu_851_p3 );
    sensitive << ( tmp_34_fu_847_p1 );

    SC_METHOD(thread_tmp_44_i_fu_1186_p2);
    sensitive << ( x_assign_reg_1826 );
    sensitive << ( tmp5_cast_fu_1183_p1 );

    SC_METHOD(thread_tmp_45_fu_881_p2);
    sensitive << ( tmp_43_fu_867_p3 );
    sensitive << ( tmp_42_fu_859_p3 );

    SC_METHOD(thread_tmp_46_fu_901_p4);
    sensitive << ( lfsr_V );

    SC_METHOD(thread_tmp_47_fu_911_p2);
    sensitive << ( tmp_46_fu_901_p4 );
    sensitive << ( r_V_3_fu_893_p3 );

    SC_METHOD(thread_tmp_49_fu_935_p1);
    sensitive << ( grp_fu_925_p2 );

    SC_METHOD(thread_tmp_4_fu_702_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( invdar2_reg_388 );

    SC_METHOD(thread_tmp_50_fu_947_p1);
    sensitive << ( grp_fu_925_p2 );

    SC_METHOD(thread_tmp_51_fu_959_p2);
    sensitive << ( p_shl4_cast_fu_939_p3 );
    sensitive << ( p_shl5_cast_fu_951_p3 );

    SC_METHOD(thread_tmp_52_fu_986_p2);
    sensitive << ( tmp_51_reg_1729 );
    sensitive << ( tmp_22_cast_fu_982_p1 );

    SC_METHOD(thread_tmp_54_fu_1037_p4);
    sensitive << ( neg_mul_fu_1032_p2 );

    SC_METHOD(thread_tmp_56_fu_1062_p1);
    sensitive << ( p_v1_v_reg_1783 );

    SC_METHOD(thread_tmp_57_fu_1212_p2);
    sensitive << ( tmp_68_fu_1198_p3 );
    sensitive << ( tmp_67_fu_1191_p3 );

    SC_METHOD(thread_tmp_58_fu_1218_p2);
    sensitive << ( tmp_43_reg_1709 );
    sensitive << ( tmp_69_fu_1205_p3 );

    SC_METHOD(thread_tmp_59_fu_1253_p3);
    sensitive << ( tmp_71_fu_1246_p3 );
    sensitive << ( tmp_70_fu_1237_p4 );

    SC_METHOD(thread_tmp_5_fu_545_p2);
    sensitive << ( tmp_1_reg_1591 );
    sensitive << ( tmp_1_cast_fu_541_p1 );

    SC_METHOD(thread_tmp_60_fu_1261_p2);
    sensitive << ( tmp_59_fu_1253_p3 );
    sensitive << ( r_V_4_fu_1229_p3 );

    SC_METHOD(thread_tmp_61_fu_1267_p4);
    sensitive << ( r_V_2_reg_1700 );

    SC_METHOD(thread_tmp_62_fu_1065_p3);
    sensitive << ( tmp_53_reg_1767 );
    sensitive << ( neg_ti_fu_1056_p2 );
    sensitive << ( tmp_56_fu_1062_p1 );

    SC_METHOD(thread_tmp_64_cast_fu_683_p1);
    sensitive << ( tmp_11_reg_1663 );

    SC_METHOD(thread_tmp_64_fu_1149_p4);
    sensitive << ( neg_mul8_fu_1144_p2 );

    SC_METHOD(thread_tmp_66_fu_1171_p3);
    sensitive << ( tmp_63_reg_1838 );
    sensitive << ( tmp_65_reg_1849 );
    sensitive << ( neg_ti1_fu_1165_p2 );

    SC_METHOD(thread_tmp_67_fu_1191_p3);
    sensitive << ( r_V_2_reg_1700 );

    SC_METHOD(thread_tmp_68_cast_fu_991_p1);
    sensitive << ( tmp_52_fu_986_p2 );

    SC_METHOD(thread_tmp_68_fu_1198_p3);
    sensitive << ( r_V_2_reg_1700 );

    SC_METHOD(thread_tmp_69_fu_1205_p3);
    sensitive << ( r_V_2_reg_1700 );

    SC_METHOD(thread_tmp_6_fu_579_p3);
    sensitive << ( t_V_reg_366 );

    SC_METHOD(thread_tmp_70_fu_1237_p4);
    sensitive << ( tmp_47_reg_1714 );

    SC_METHOD(thread_tmp_71_fu_1246_p3);
    sensitive << ( r_V_2_reg_1700 );

    SC_METHOD(thread_tmp_72_fu_1313_p4);
    sensitive << ( mul1_reg_1870 );

    SC_METHOD(thread_tmp_73_fu_1349_p3);
    sensitive << ( mul2_fu_1343_p2 );

    SC_METHOD(thread_tmp_75_fu_1395_p4);
    sensitive << ( neg_mul1_fu_1390_p2 );

    SC_METHOD(thread_tmp_76_fu_1405_p1);
    sensitive << ( tmp_75_fu_1395_p4 );

    SC_METHOD(thread_tmp_78_fu_1409_p1);
    sensitive << ( tmp_77_reg_1897 );

    SC_METHOD(thread_tmp_79_fu_1412_p3);
    sensitive << ( tmp_74_reg_1886 );
    sensitive << ( tmp_76_fu_1405_p1 );
    sensitive << ( tmp_78_fu_1409_p1 );

    SC_METHOD(thread_tmp_7_fu_591_p3);
    sensitive << ( t_V_reg_366 );

    SC_METHOD(thread_tmp_80_fu_1489_p1);
    sensitive << ( currentSolution_q0 );
    sensitive << ( ap_CS_fsm_state132 );

    SC_METHOD(thread_tmp_81_fu_1542_p4);
    sensitive << ( neg_mul2_fu_1537_p2 );

    SC_METHOD(thread_tmp_83_fu_1558_p1);
    sensitive << ( p_v_v_fu_1552_p3 );

    SC_METHOD(thread_tmp_84_fu_1568_p1);
    sensitive << ( p_v_v_fu_1552_p3 );

    SC_METHOD(thread_tmp_8_fu_603_p2);
    sensitive << ( p_shl2_cast_fu_587_p1 );
    sensitive << ( p_shl3_cast_fu_599_p1 );

    SC_METHOD(thread_tmp_9_fu_517_p3);
    sensitive << ( invdar_reg_343 );

    SC_METHOD(thread_tmp_fu_505_p3);
    sensitive << ( invdar_reg_343 );

    SC_METHOD(thread_tmp_i2_fu_1113_p2);
    sensitive << ( x_assign_reg_1826 );

    SC_METHOD(thread_tmp_s_fu_697_p1);
    sensitive << ( invdar2_reg_388 );

    SC_METHOD(thread_trunc_fu_1053_p1);
    sensitive << ( p_v1_v_reg_1783 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( input_stream_V_data_V_0_vld_out );
    sensitive << ( output_stream_V_data_V_1_ack_in );
    sensitive << ( output_stream_V_data_V_1_state );
    sensitive << ( output_stream_V_keep_V_1_ack_in );
    sensitive << ( output_stream_V_keep_V_1_state );
    sensitive << ( output_stream_V_strb_V_1_ack_in );
    sensitive << ( output_stream_V_strb_V_1_state );
    sensitive << ( output_stream_V_user_V_1_ack_in );
    sensitive << ( output_stream_V_user_V_1_state );
    sensitive << ( output_stream_V_last_V_1_ack_in );
    sensitive << ( output_stream_V_last_V_1_state );
    sensitive << ( output_stream_V_id_V_1_ack_in );
    sensitive << ( output_stream_V_id_V_1_state );
    sensitive << ( output_stream_V_dest_V_1_ack_in );
    sensitive << ( output_stream_V_dest_V_1_state );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_609_p2 );
    sensitive << ( ap_CS_fsm_state134 );
    sensitive << ( ap_CS_fsm_state135 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( exitcond1_fu_567_p2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_17_fu_835_p2 );
    sensitive << ( tmp_17_reg_1691 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( exitcond8_fu_965_p2 );
    sensitive << ( tmp_21_fu_1093_p2 );
    sensitive << ( ap_CS_fsm_state50 );
    sensitive << ( ap_CS_fsm_state127 );
    sensitive << ( tmp_73_fu_1349_p3 );
    sensitive << ( ap_CS_fsm_state130 );
    sensitive << ( tmp_37_fu_1437_p2 );
    sensitive << ( or_cond_fu_1454_p2 );
    sensitive << ( ap_CS_fsm_state131 );
    sensitive << ( exitcond_fu_1466_p2 );
    sensitive << ( tmp_2_fu_555_p2 );
    sensitive << ( tmp_3_fu_561_p2 );
    sensitive << ( tmp_4_fu_702_p2 );
    sensitive << ( exitcond3_fu_708_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    input_stream_V_data_V_0_sel_rd = SC_LOGIC_0;
    input_stream_V_data_V_0_sel_wr = SC_LOGIC_0;
    input_stream_V_data_V_0_state = "00";
    input_stream_V_keep_V_0_sel_rd = SC_LOGIC_0;
    input_stream_V_keep_V_0_sel_wr = SC_LOGIC_0;
    input_stream_V_keep_V_0_state = "00";
    input_stream_V_strb_V_0_sel_rd = SC_LOGIC_0;
    input_stream_V_strb_V_0_sel_wr = SC_LOGIC_0;
    input_stream_V_strb_V_0_state = "00";
    input_stream_V_user_V_0_sel_rd = SC_LOGIC_0;
    input_stream_V_user_V_0_sel_wr = SC_LOGIC_0;
    input_stream_V_user_V_0_state = "00";
    input_stream_V_id_V_0_sel_rd = SC_LOGIC_0;
    input_stream_V_id_V_0_sel_wr = SC_LOGIC_0;
    input_stream_V_id_V_0_state = "00";
    input_stream_V_dest_V_0_sel_rd = SC_LOGIC_0;
    input_stream_V_dest_V_0_sel_wr = SC_LOGIC_0;
    input_stream_V_dest_V_0_state = "00";
    output_stream_V_data_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_data_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_data_V_1_state = "00";
    output_stream_V_keep_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_keep_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_keep_V_1_state = "00";
    output_stream_V_strb_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_strb_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_strb_V_1_state = "00";
    output_stream_V_user_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_user_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_user_V_1_state = "00";
    output_stream_V_last_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_last_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_last_V_1_state = "00";
    output_stream_V_id_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_id_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_id_V_1_state = "00";
    output_stream_V_dest_V_1_sel_rd = SC_LOGIC_0;
    output_stream_V_dest_V_1_sel_wr = SC_LOGIC_0;
    output_stream_V_dest_V_1_state = "00";
    lfsr_V = "00000000000000001010111110101111";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "maxCut_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, input_stream_TDATA, "(port)input_stream_TDATA");
    sc_trace(mVcdFile, input_stream_TVALID, "(port)input_stream_TVALID");
    sc_trace(mVcdFile, input_stream_TREADY, "(port)input_stream_TREADY");
    sc_trace(mVcdFile, input_stream_TKEEP, "(port)input_stream_TKEEP");
    sc_trace(mVcdFile, input_stream_TSTRB, "(port)input_stream_TSTRB");
    sc_trace(mVcdFile, input_stream_TUSER, "(port)input_stream_TUSER");
    sc_trace(mVcdFile, input_stream_TLAST, "(port)input_stream_TLAST");
    sc_trace(mVcdFile, input_stream_TID, "(port)input_stream_TID");
    sc_trace(mVcdFile, input_stream_TDEST, "(port)input_stream_TDEST");
    sc_trace(mVcdFile, output_stream_TDATA, "(port)output_stream_TDATA");
    sc_trace(mVcdFile, output_stream_TVALID, "(port)output_stream_TVALID");
    sc_trace(mVcdFile, output_stream_TREADY, "(port)output_stream_TREADY");
    sc_trace(mVcdFile, output_stream_TKEEP, "(port)output_stream_TKEEP");
    sc_trace(mVcdFile, output_stream_TSTRB, "(port)output_stream_TSTRB");
    sc_trace(mVcdFile, output_stream_TUSER, "(port)output_stream_TUSER");
    sc_trace(mVcdFile, output_stream_TLAST, "(port)output_stream_TLAST");
    sc_trace(mVcdFile, output_stream_TID, "(port)output_stream_TID");
    sc_trace(mVcdFile, output_stream_TDEST, "(port)output_stream_TDEST");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
    sc_trace(mVcdFile, interrupt, "(port)interrupt");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, ap_start, "ap_start");
    sc_trace(mVcdFile, ap_done, "ap_done");
    sc_trace(mVcdFile, ap_idle, "ap_idle");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ap_ready, "ap_ready");
    sc_trace(mVcdFile, input_stream_V_data_V_0_data_out, "input_stream_V_data_V_0_data_out");
    sc_trace(mVcdFile, input_stream_V_data_V_0_vld_in, "input_stream_V_data_V_0_vld_in");
    sc_trace(mVcdFile, input_stream_V_data_V_0_vld_out, "input_stream_V_data_V_0_vld_out");
    sc_trace(mVcdFile, input_stream_V_data_V_0_ack_in, "input_stream_V_data_V_0_ack_in");
    sc_trace(mVcdFile, input_stream_V_data_V_0_ack_out, "input_stream_V_data_V_0_ack_out");
    sc_trace(mVcdFile, input_stream_V_data_V_0_payload_A, "input_stream_V_data_V_0_payload_A");
    sc_trace(mVcdFile, input_stream_V_data_V_0_payload_B, "input_stream_V_data_V_0_payload_B");
    sc_trace(mVcdFile, input_stream_V_data_V_0_sel_rd, "input_stream_V_data_V_0_sel_rd");
    sc_trace(mVcdFile, input_stream_V_data_V_0_sel_wr, "input_stream_V_data_V_0_sel_wr");
    sc_trace(mVcdFile, input_stream_V_data_V_0_sel, "input_stream_V_data_V_0_sel");
    sc_trace(mVcdFile, input_stream_V_data_V_0_load_A, "input_stream_V_data_V_0_load_A");
    sc_trace(mVcdFile, input_stream_V_data_V_0_load_B, "input_stream_V_data_V_0_load_B");
    sc_trace(mVcdFile, input_stream_V_data_V_0_state, "input_stream_V_data_V_0_state");
    sc_trace(mVcdFile, input_stream_V_data_V_0_state_cmp_full, "input_stream_V_data_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_data_out, "input_stream_V_keep_V_0_data_out");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_vld_in, "input_stream_V_keep_V_0_vld_in");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_vld_out, "input_stream_V_keep_V_0_vld_out");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_ack_in, "input_stream_V_keep_V_0_ack_in");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_ack_out, "input_stream_V_keep_V_0_ack_out");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_payload_A, "input_stream_V_keep_V_0_payload_A");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_payload_B, "input_stream_V_keep_V_0_payload_B");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_sel_rd, "input_stream_V_keep_V_0_sel_rd");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_sel_wr, "input_stream_V_keep_V_0_sel_wr");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_sel, "input_stream_V_keep_V_0_sel");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_load_A, "input_stream_V_keep_V_0_load_A");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_load_B, "input_stream_V_keep_V_0_load_B");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_state, "input_stream_V_keep_V_0_state");
    sc_trace(mVcdFile, input_stream_V_keep_V_0_state_cmp_full, "input_stream_V_keep_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_data_out, "input_stream_V_strb_V_0_data_out");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_vld_in, "input_stream_V_strb_V_0_vld_in");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_vld_out, "input_stream_V_strb_V_0_vld_out");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_ack_in, "input_stream_V_strb_V_0_ack_in");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_ack_out, "input_stream_V_strb_V_0_ack_out");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_payload_A, "input_stream_V_strb_V_0_payload_A");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_payload_B, "input_stream_V_strb_V_0_payload_B");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_sel_rd, "input_stream_V_strb_V_0_sel_rd");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_sel_wr, "input_stream_V_strb_V_0_sel_wr");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_sel, "input_stream_V_strb_V_0_sel");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_load_A, "input_stream_V_strb_V_0_load_A");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_load_B, "input_stream_V_strb_V_0_load_B");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_state, "input_stream_V_strb_V_0_state");
    sc_trace(mVcdFile, input_stream_V_strb_V_0_state_cmp_full, "input_stream_V_strb_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_stream_V_user_V_0_data_out, "input_stream_V_user_V_0_data_out");
    sc_trace(mVcdFile, input_stream_V_user_V_0_vld_in, "input_stream_V_user_V_0_vld_in");
    sc_trace(mVcdFile, input_stream_V_user_V_0_vld_out, "input_stream_V_user_V_0_vld_out");
    sc_trace(mVcdFile, input_stream_V_user_V_0_ack_in, "input_stream_V_user_V_0_ack_in");
    sc_trace(mVcdFile, input_stream_V_user_V_0_ack_out, "input_stream_V_user_V_0_ack_out");
    sc_trace(mVcdFile, input_stream_V_user_V_0_payload_A, "input_stream_V_user_V_0_payload_A");
    sc_trace(mVcdFile, input_stream_V_user_V_0_payload_B, "input_stream_V_user_V_0_payload_B");
    sc_trace(mVcdFile, input_stream_V_user_V_0_sel_rd, "input_stream_V_user_V_0_sel_rd");
    sc_trace(mVcdFile, input_stream_V_user_V_0_sel_wr, "input_stream_V_user_V_0_sel_wr");
    sc_trace(mVcdFile, input_stream_V_user_V_0_sel, "input_stream_V_user_V_0_sel");
    sc_trace(mVcdFile, input_stream_V_user_V_0_load_A, "input_stream_V_user_V_0_load_A");
    sc_trace(mVcdFile, input_stream_V_user_V_0_load_B, "input_stream_V_user_V_0_load_B");
    sc_trace(mVcdFile, input_stream_V_user_V_0_state, "input_stream_V_user_V_0_state");
    sc_trace(mVcdFile, input_stream_V_user_V_0_state_cmp_full, "input_stream_V_user_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_stream_V_id_V_0_data_out, "input_stream_V_id_V_0_data_out");
    sc_trace(mVcdFile, input_stream_V_id_V_0_vld_in, "input_stream_V_id_V_0_vld_in");
    sc_trace(mVcdFile, input_stream_V_id_V_0_vld_out, "input_stream_V_id_V_0_vld_out");
    sc_trace(mVcdFile, input_stream_V_id_V_0_ack_in, "input_stream_V_id_V_0_ack_in");
    sc_trace(mVcdFile, input_stream_V_id_V_0_ack_out, "input_stream_V_id_V_0_ack_out");
    sc_trace(mVcdFile, input_stream_V_id_V_0_payload_A, "input_stream_V_id_V_0_payload_A");
    sc_trace(mVcdFile, input_stream_V_id_V_0_payload_B, "input_stream_V_id_V_0_payload_B");
    sc_trace(mVcdFile, input_stream_V_id_V_0_sel_rd, "input_stream_V_id_V_0_sel_rd");
    sc_trace(mVcdFile, input_stream_V_id_V_0_sel_wr, "input_stream_V_id_V_0_sel_wr");
    sc_trace(mVcdFile, input_stream_V_id_V_0_sel, "input_stream_V_id_V_0_sel");
    sc_trace(mVcdFile, input_stream_V_id_V_0_load_A, "input_stream_V_id_V_0_load_A");
    sc_trace(mVcdFile, input_stream_V_id_V_0_load_B, "input_stream_V_id_V_0_load_B");
    sc_trace(mVcdFile, input_stream_V_id_V_0_state, "input_stream_V_id_V_0_state");
    sc_trace(mVcdFile, input_stream_V_id_V_0_state_cmp_full, "input_stream_V_id_V_0_state_cmp_full");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_data_out, "input_stream_V_dest_V_0_data_out");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_vld_in, "input_stream_V_dest_V_0_vld_in");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_vld_out, "input_stream_V_dest_V_0_vld_out");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_ack_in, "input_stream_V_dest_V_0_ack_in");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_ack_out, "input_stream_V_dest_V_0_ack_out");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_payload_A, "input_stream_V_dest_V_0_payload_A");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_payload_B, "input_stream_V_dest_V_0_payload_B");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_sel_rd, "input_stream_V_dest_V_0_sel_rd");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_sel_wr, "input_stream_V_dest_V_0_sel_wr");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_sel, "input_stream_V_dest_V_0_sel");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_load_A, "input_stream_V_dest_V_0_load_A");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_load_B, "input_stream_V_dest_V_0_load_B");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_state, "input_stream_V_dest_V_0_state");
    sc_trace(mVcdFile, input_stream_V_dest_V_0_state_cmp_full, "input_stream_V_dest_V_0_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_data_V_1_data_out, "output_stream_V_data_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_data_V_1_vld_in, "output_stream_V_data_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_data_V_1_vld_out, "output_stream_V_data_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_data_V_1_ack_in, "output_stream_V_data_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_data_V_1_ack_out, "output_stream_V_data_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_data_V_1_payload_A, "output_stream_V_data_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_data_V_1_payload_B, "output_stream_V_data_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_data_V_1_sel_rd, "output_stream_V_data_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_data_V_1_sel_wr, "output_stream_V_data_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_data_V_1_sel, "output_stream_V_data_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_data_V_1_load_A, "output_stream_V_data_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_data_V_1_load_B, "output_stream_V_data_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_data_V_1_state, "output_stream_V_data_V_1_state");
    sc_trace(mVcdFile, output_stream_V_data_V_1_state_cmp_full, "output_stream_V_data_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_data_out, "output_stream_V_keep_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_vld_in, "output_stream_V_keep_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_vld_out, "output_stream_V_keep_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_ack_in, "output_stream_V_keep_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_ack_out, "output_stream_V_keep_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_payload_A, "output_stream_V_keep_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_payload_B, "output_stream_V_keep_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_sel_rd, "output_stream_V_keep_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_sel_wr, "output_stream_V_keep_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_sel, "output_stream_V_keep_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_load_A, "output_stream_V_keep_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_load_B, "output_stream_V_keep_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_state, "output_stream_V_keep_V_1_state");
    sc_trace(mVcdFile, output_stream_V_keep_V_1_state_cmp_full, "output_stream_V_keep_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_data_out, "output_stream_V_strb_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_vld_in, "output_stream_V_strb_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_vld_out, "output_stream_V_strb_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_ack_in, "output_stream_V_strb_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_ack_out, "output_stream_V_strb_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_payload_A, "output_stream_V_strb_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_payload_B, "output_stream_V_strb_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_sel_rd, "output_stream_V_strb_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_sel_wr, "output_stream_V_strb_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_sel, "output_stream_V_strb_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_load_A, "output_stream_V_strb_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_load_B, "output_stream_V_strb_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_state, "output_stream_V_strb_V_1_state");
    sc_trace(mVcdFile, output_stream_V_strb_V_1_state_cmp_full, "output_stream_V_strb_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_user_V_1_data_out, "output_stream_V_user_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_user_V_1_vld_in, "output_stream_V_user_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_user_V_1_vld_out, "output_stream_V_user_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_user_V_1_ack_in, "output_stream_V_user_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_user_V_1_ack_out, "output_stream_V_user_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_user_V_1_payload_A, "output_stream_V_user_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_user_V_1_payload_B, "output_stream_V_user_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_user_V_1_sel_rd, "output_stream_V_user_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_user_V_1_sel_wr, "output_stream_V_user_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_user_V_1_sel, "output_stream_V_user_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_user_V_1_load_A, "output_stream_V_user_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_user_V_1_load_B, "output_stream_V_user_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_user_V_1_state, "output_stream_V_user_V_1_state");
    sc_trace(mVcdFile, output_stream_V_user_V_1_state_cmp_full, "output_stream_V_user_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_last_V_1_data_out, "output_stream_V_last_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_last_V_1_vld_in, "output_stream_V_last_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_last_V_1_vld_out, "output_stream_V_last_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_last_V_1_ack_in, "output_stream_V_last_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_last_V_1_ack_out, "output_stream_V_last_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_last_V_1_payload_A, "output_stream_V_last_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_last_V_1_payload_B, "output_stream_V_last_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_last_V_1_sel_rd, "output_stream_V_last_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_last_V_1_sel_wr, "output_stream_V_last_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_last_V_1_sel, "output_stream_V_last_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_last_V_1_load_A, "output_stream_V_last_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_last_V_1_load_B, "output_stream_V_last_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_last_V_1_state, "output_stream_V_last_V_1_state");
    sc_trace(mVcdFile, output_stream_V_last_V_1_state_cmp_full, "output_stream_V_last_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_id_V_1_data_out, "output_stream_V_id_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_id_V_1_vld_in, "output_stream_V_id_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_id_V_1_vld_out, "output_stream_V_id_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_id_V_1_ack_in, "output_stream_V_id_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_id_V_1_ack_out, "output_stream_V_id_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_id_V_1_payload_A, "output_stream_V_id_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_id_V_1_payload_B, "output_stream_V_id_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_id_V_1_sel_rd, "output_stream_V_id_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_id_V_1_sel_wr, "output_stream_V_id_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_id_V_1_sel, "output_stream_V_id_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_id_V_1_load_A, "output_stream_V_id_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_id_V_1_load_B, "output_stream_V_id_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_id_V_1_state, "output_stream_V_id_V_1_state");
    sc_trace(mVcdFile, output_stream_V_id_V_1_state_cmp_full, "output_stream_V_id_V_1_state_cmp_full");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_data_out, "output_stream_V_dest_V_1_data_out");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_vld_in, "output_stream_V_dest_V_1_vld_in");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_vld_out, "output_stream_V_dest_V_1_vld_out");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_ack_in, "output_stream_V_dest_V_1_ack_in");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_ack_out, "output_stream_V_dest_V_1_ack_out");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_payload_A, "output_stream_V_dest_V_1_payload_A");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_payload_B, "output_stream_V_dest_V_1_payload_B");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_sel_rd, "output_stream_V_dest_V_1_sel_rd");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_sel_wr, "output_stream_V_dest_V_1_sel_wr");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_sel, "output_stream_V_dest_V_1_sel");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_load_A, "output_stream_V_dest_V_1_load_A");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_load_B, "output_stream_V_dest_V_1_load_B");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_state, "output_stream_V_dest_V_1_state");
    sc_trace(mVcdFile, output_stream_V_dest_V_1_state_cmp_full, "output_stream_V_dest_V_1_state_cmp_full");
    sc_trace(mVcdFile, lfsr_V, "lfsr_V");
    sc_trace(mVcdFile, input_stream_TDATA_blk_n, "input_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, exitcond2_fu_609_p2, "exitcond2_fu_609_p2");
    sc_trace(mVcdFile, output_stream_TDATA_blk_n, "output_stream_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state134, "ap_CS_fsm_state134");
    sc_trace(mVcdFile, ap_CS_fsm_state135, "ap_CS_fsm_state135");
    sc_trace(mVcdFile, currentSolution_q0, "currentSolution_q0");
    sc_trace(mVcdFile, reg_495, "reg_495");
    sc_trace(mVcdFile, ap_CS_fsm_state43, "ap_CS_fsm_state43");
    sc_trace(mVcdFile, ap_CS_fsm_state48, "ap_CS_fsm_state48");
    sc_trace(mVcdFile, ap_CS_fsm_state132, "ap_CS_fsm_state132");
    sc_trace(mVcdFile, indvarinc_fu_499_p2, "indvarinc_fu_499_p2");
    sc_trace(mVcdFile, indvarinc_reg_1586, "indvarinc_reg_1586");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_1_fu_529_p2, "tmp_1_fu_529_p2");
    sc_trace(mVcdFile, tmp_1_reg_1591, "tmp_1_reg_1591");
    sc_trace(mVcdFile, indvarinc1_fu_535_p2, "indvarinc1_fu_535_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, i_V_fu_573_p2, "i_V_fu_573_p2");
    sc_trace(mVcdFile, i_V_reg_1640, "i_V_reg_1640");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, tmp_8_fu_603_p2, "tmp_8_fu_603_p2");
    sc_trace(mVcdFile, tmp_8_reg_1645, "tmp_8_reg_1645");
    sc_trace(mVcdFile, exitcond1_fu_567_p2, "exitcond1_fu_567_p2");
    sc_trace(mVcdFile, j_V_fu_615_p2, "j_V_fu_615_p2");
    sc_trace(mVcdFile, j_V_reg_1653, "j_V_reg_1653");
    sc_trace(mVcdFile, ap_block_state5, "ap_block_state5");
    sc_trace(mVcdFile, tmp_10_fu_1580_p2, "tmp_10_fu_1580_p2");
    sc_trace(mVcdFile, tmp_10_reg_1658, "tmp_10_reg_1658");
    sc_trace(mVcdFile, tmp_11_fu_653_p2, "tmp_11_fu_653_p2");
    sc_trace(mVcdFile, tmp_11_reg_1663, "tmp_11_reg_1663");
    sc_trace(mVcdFile, indvarinc2_fu_691_p2, "indvarinc2_fu_691_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, i_V_1_fu_714_p2, "i_V_1_fu_714_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_17_fu_835_p2, "tmp_17_fu_835_p2");
    sc_trace(mVcdFile, tmp_17_reg_1691, "tmp_17_reg_1691");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, iterate_V_fu_841_p2, "iterate_V_fu_841_p2");
    sc_trace(mVcdFile, iterate_V_reg_1695, "iterate_V_reg_1695");
    sc_trace(mVcdFile, r_V_2_reg_1700, "r_V_2_reg_1700");
    sc_trace(mVcdFile, tmp_43_fu_867_p3, "tmp_43_fu_867_p3");
    sc_trace(mVcdFile, tmp_43_reg_1709, "tmp_43_reg_1709");
    sc_trace(mVcdFile, tmp_47_fu_911_p2, "tmp_47_fu_911_p2");
    sc_trace(mVcdFile, tmp_47_reg_1714, "tmp_47_reg_1714");
    sc_trace(mVcdFile, tmp_18_fu_931_p1, "tmp_18_fu_931_p1");
    sc_trace(mVcdFile, tmp_18_reg_1724, "tmp_18_reg_1724");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, tmp_51_fu_959_p2, "tmp_51_fu_959_p2");
    sc_trace(mVcdFile, tmp_51_reg_1729, "tmp_51_reg_1729");
    sc_trace(mVcdFile, j_V_1_fu_971_p2, "j_V_1_fu_971_p2");
    sc_trace(mVcdFile, j_V_1_reg_1737, "j_V_1_reg_1737");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, exitcond8_fu_965_p2, "exitcond8_fu_965_p2");
    sc_trace(mVcdFile, currentSolution_addr_2_reg_1752, "currentSolution_addr_2_reg_1752");
    sc_trace(mVcdFile, matrix_q0, "matrix_q0");
    sc_trace(mVcdFile, matrix_load_reg_1757, "matrix_load_reg_1757");
    sc_trace(mVcdFile, tmp_23_fu_999_p2, "tmp_23_fu_999_p2");
    sc_trace(mVcdFile, tmp_23_reg_1762, "tmp_23_reg_1762");
    sc_trace(mVcdFile, ap_CS_fsm_state44, "ap_CS_fsm_state44");
    sc_trace(mVcdFile, tmp_53_reg_1767, "tmp_53_reg_1767");
    sc_trace(mVcdFile, mul_fu_1016_p2, "mul_fu_1016_p2");
    sc_trace(mVcdFile, mul_reg_1773, "mul_reg_1773");
    sc_trace(mVcdFile, ap_CS_fsm_state45, "ap_CS_fsm_state45");
    sc_trace(mVcdFile, tmp_55_reg_1778, "tmp_55_reg_1778");
    sc_trace(mVcdFile, p_v1_v_fu_1047_p3, "p_v1_v_fu_1047_p3");
    sc_trace(mVcdFile, p_v1_v_reg_1783, "p_v1_v_reg_1783");
    sc_trace(mVcdFile, ap_CS_fsm_state46, "ap_CS_fsm_state46");
    sc_trace(mVcdFile, localFieldVal_1_fu_1072_p2, "localFieldVal_1_fu_1072_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state47, "ap_CS_fsm_state47");
    sc_trace(mVcdFile, tmp_19_fu_1078_p2, "tmp_19_fu_1078_p2");
    sc_trace(mVcdFile, tmp_19_reg_1794, "tmp_19_reg_1794");
    sc_trace(mVcdFile, tmp_20_fu_1087_p2, "tmp_20_fu_1087_p2");
    sc_trace(mVcdFile, tmp_20_reg_1799, "tmp_20_reg_1799");
    sc_trace(mVcdFile, ap_CS_fsm_state49, "ap_CS_fsm_state49");
    sc_trace(mVcdFile, tmp_21_fu_1093_p2, "tmp_21_fu_1093_p2");
    sc_trace(mVcdFile, tmp_21_reg_1807, "tmp_21_reg_1807");
    sc_trace(mVcdFile, ap_CS_fsm_state50, "ap_CS_fsm_state50");
    sc_trace(mVcdFile, grp_fu_1098_p2, "grp_fu_1098_p2");
    sc_trace(mVcdFile, deltaEnergy_reg_1811, "deltaEnergy_reg_1811");
    sc_trace(mVcdFile, ap_CS_fsm_state85, "ap_CS_fsm_state85");
    sc_trace(mVcdFile, ap_CS_fsm_state86, "ap_CS_fsm_state86");
    sc_trace(mVcdFile, grp_fu_1107_p2, "grp_fu_1107_p2");
    sc_trace(mVcdFile, x_assign_reg_1826, "x_assign_reg_1826");
    sc_trace(mVcdFile, ap_CS_fsm_state121, "ap_CS_fsm_state121");
    sc_trace(mVcdFile, tmp_i2_fu_1113_p2, "tmp_i2_fu_1113_p2");
    sc_trace(mVcdFile, tmp_i2_reg_1833, "tmp_i2_reg_1833");
    sc_trace(mVcdFile, ap_CS_fsm_state122, "ap_CS_fsm_state122");
    sc_trace(mVcdFile, tmp_63_reg_1838, "tmp_63_reg_1838");
    sc_trace(mVcdFile, mul7_fu_1128_p2, "mul7_fu_1128_p2");
    sc_trace(mVcdFile, mul7_reg_1844, "mul7_reg_1844");
    sc_trace(mVcdFile, ap_CS_fsm_state123, "ap_CS_fsm_state123");
    sc_trace(mVcdFile, tmp_65_reg_1849, "tmp_65_reg_1849");
    sc_trace(mVcdFile, tmp5_fu_1177_p2, "tmp5_fu_1177_p2");
    sc_trace(mVcdFile, tmp5_reg_1855, "tmp5_reg_1855");
    sc_trace(mVcdFile, ap_CS_fsm_state124, "ap_CS_fsm_state124");
    sc_trace(mVcdFile, tmp_44_i_fu_1186_p2, "tmp_44_i_fu_1186_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state125, "ap_CS_fsm_state125");
    sc_trace(mVcdFile, ret_V_fu_1298_p2, "ret_V_fu_1298_p2");
    sc_trace(mVcdFile, ret_V_reg_1865, "ret_V_reg_1865");
    sc_trace(mVcdFile, mul1_fu_1307_p2, "mul1_fu_1307_p2");
    sc_trace(mVcdFile, mul1_reg_1870, "mul1_reg_1870");
    sc_trace(mVcdFile, ap_CS_fsm_state126, "ap_CS_fsm_state126");
    sc_trace(mVcdFile, tmp_35_fu_1357_p2, "tmp_35_fu_1357_p2");
    sc_trace(mVcdFile, tmp_35_reg_1881, "tmp_35_reg_1881");
    sc_trace(mVcdFile, ap_CS_fsm_state127, "ap_CS_fsm_state127");
    sc_trace(mVcdFile, tmp_73_fu_1349_p3, "tmp_73_fu_1349_p3");
    sc_trace(mVcdFile, tmp_74_reg_1886, "tmp_74_reg_1886");
    sc_trace(mVcdFile, mul3_fu_1374_p2, "mul3_fu_1374_p2");
    sc_trace(mVcdFile, mul3_reg_1892, "mul3_reg_1892");
    sc_trace(mVcdFile, ap_CS_fsm_state128, "ap_CS_fsm_state128");
    sc_trace(mVcdFile, tmp_77_reg_1897, "tmp_77_reg_1897");
    sc_trace(mVcdFile, phitmp_fu_1460_p2, "phitmp_fu_1460_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state130, "ap_CS_fsm_state130");
    sc_trace(mVcdFile, tmp_37_fu_1437_p2, "tmp_37_fu_1437_p2");
    sc_trace(mVcdFile, or_cond_fu_1454_p2, "or_cond_fu_1454_p2");
    sc_trace(mVcdFile, i_V_2_fu_1472_p2, "i_V_2_fu_1472_p2");
    sc_trace(mVcdFile, i_V_2_reg_1916, "i_V_2_reg_1916");
    sc_trace(mVcdFile, ap_CS_fsm_state131, "ap_CS_fsm_state131");
    sc_trace(mVcdFile, ap_block_state131, "ap_block_state131");
    sc_trace(mVcdFile, exitcond_fu_1466_p2, "exitcond_fu_1466_p2");
    sc_trace(mVcdFile, output_last_V_fu_1483_p2, "output_last_V_fu_1483_p2");
    sc_trace(mVcdFile, output_last_V_reg_1926, "output_last_V_reg_1926");
    sc_trace(mVcdFile, tmp_80_reg_1931, "tmp_80_reg_1931");
    sc_trace(mVcdFile, mul4_fu_1501_p2, "mul4_fu_1501_p2");
    sc_trace(mVcdFile, mul4_reg_1937, "mul4_reg_1937");
    sc_trace(mVcdFile, ap_CS_fsm_state133, "ap_CS_fsm_state133");
    sc_trace(mVcdFile, tmp_82_reg_1942, "tmp_82_reg_1942");
    sc_trace(mVcdFile, fpga_output_V_fu_1572_p3, "fpga_output_V_fu_1572_p3");
    sc_trace(mVcdFile, matrix_address0, "matrix_address0");
    sc_trace(mVcdFile, matrix_ce0, "matrix_ce0");
    sc_trace(mVcdFile, matrix_we0, "matrix_we0");
    sc_trace(mVcdFile, matrix_d0, "matrix_d0");
    sc_trace(mVcdFile, currentSolution_address0, "currentSolution_address0");
    sc_trace(mVcdFile, currentSolution_ce0, "currentSolution_ce0");
    sc_trace(mVcdFile, currentSolution_we0, "currentSolution_we0");
    sc_trace(mVcdFile, currentSolution_d0, "currentSolution_d0");
    sc_trace(mVcdFile, invdar_reg_343, "invdar_reg_343");
    sc_trace(mVcdFile, tmp_2_fu_555_p2, "tmp_2_fu_555_p2");
    sc_trace(mVcdFile, tmp_3_fu_561_p2, "tmp_3_fu_561_p2");
    sc_trace(mVcdFile, invdar1_reg_355, "invdar1_reg_355");
    sc_trace(mVcdFile, t_V_reg_366, "t_V_reg_366");
    sc_trace(mVcdFile, t_V_1_reg_377, "t_V_1_reg_377");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, invdar2_reg_388, "invdar2_reg_388");
    sc_trace(mVcdFile, tmp_4_fu_702_p2, "tmp_4_fu_702_p2");
    sc_trace(mVcdFile, p_s_reg_399, "p_s_reg_399");
    sc_trace(mVcdFile, exitcond3_fu_708_p2, "exitcond3_fu_708_p2");
    sc_trace(mVcdFile, p_4_reg_410, "p_4_reg_410");
    sc_trace(mVcdFile, phi_mul_reg_421, "phi_mul_reg_421");
    sc_trace(mVcdFile, p_6_reg_433, "p_6_reg_433");
    sc_trace(mVcdFile, localFieldVal_reg_444, "localFieldVal_reg_444");
    sc_trace(mVcdFile, prob_reg_456, "prob_reg_456");
    sc_trace(mVcdFile, t_V_2_reg_467, "t_V_2_reg_467");
    sc_trace(mVcdFile, tmp_27_cast_fu_550_p1, "tmp_27_cast_fu_550_p1");
    sc_trace(mVcdFile, tmp_64_cast_fu_683_p1, "tmp_64_cast_fu_683_p1");
    sc_trace(mVcdFile, tmp_s_fu_697_p1, "tmp_s_fu_697_p1");
    sc_trace(mVcdFile, tmp_16_fu_825_p1, "tmp_16_fu_825_p1");
    sc_trace(mVcdFile, tmp_68_cast_fu_991_p1, "tmp_68_cast_fu_991_p1");
    sc_trace(mVcdFile, tmp_22_fu_977_p1, "tmp_22_fu_977_p1");
    sc_trace(mVcdFile, tmp_40_fu_1478_p1, "tmp_40_fu_1478_p1");
    sc_trace(mVcdFile, ret_V_1_cast_fu_806_p1, "ret_V_1_cast_fu_806_p1");
    sc_trace(mVcdFile, ret_V_5_cast_fu_1284_p1, "ret_V_5_cast_fu_1284_p1");
    sc_trace(mVcdFile, tmp_keep_V_fu_208, "tmp_keep_V_fu_208");
    sc_trace(mVcdFile, tmp_strb_V_fu_212, "tmp_strb_V_fu_212");
    sc_trace(mVcdFile, tmp_user_V_fu_216, "tmp_user_V_fu_216");
    sc_trace(mVcdFile, tmp_id_V_fu_220, "tmp_id_V_fu_220");
    sc_trace(mVcdFile, tmp_dest_V_fu_224, "tmp_dest_V_fu_224");
    sc_trace(mVcdFile, temperature_fu_228, "temperature_fu_228");
    sc_trace(mVcdFile, tmp_36_fu_1425_p3, "tmp_36_fu_1425_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state129, "ap_CS_fsm_state129");
    sc_trace(mVcdFile, tmp_12_cast_cast_fu_687_p1, "tmp_12_cast_cast_fu_687_p1");
    sc_trace(mVcdFile, tmp_15_cast_cast_fu_816_p3, "tmp_15_cast_cast_fu_816_p3");
    sc_trace(mVcdFile, tmp_29_fu_1326_p2, "tmp_29_fu_1326_p2");
    sc_trace(mVcdFile, tmp_30_fu_1332_p2, "tmp_30_fu_1332_p2");
    sc_trace(mVcdFile, tmp_fu_505_p3, "tmp_fu_505_p3");
    sc_trace(mVcdFile, tmp_9_fu_517_p3, "tmp_9_fu_517_p3");
    sc_trace(mVcdFile, p_shl_cast_fu_513_p1, "p_shl_cast_fu_513_p1");
    sc_trace(mVcdFile, p_shl1_cast_fu_525_p1, "p_shl1_cast_fu_525_p1");
    sc_trace(mVcdFile, tmp_1_cast_fu_541_p1, "tmp_1_cast_fu_541_p1");
    sc_trace(mVcdFile, tmp_5_fu_545_p2, "tmp_5_fu_545_p2");
    sc_trace(mVcdFile, tmp_6_fu_579_p3, "tmp_6_fu_579_p3");
    sc_trace(mVcdFile, tmp_7_fu_591_p3, "tmp_7_fu_591_p3");
    sc_trace(mVcdFile, p_shl2_cast_fu_587_p1, "p_shl2_cast_fu_587_p1");
    sc_trace(mVcdFile, p_shl3_cast_fu_599_p1, "p_shl3_cast_fu_599_p1");
    sc_trace(mVcdFile, tmp_12_cast_fu_649_p1, "tmp_12_cast_fu_649_p1");
    sc_trace(mVcdFile, tmp_14_fu_732_p3, "tmp_14_fu_732_p3");
    sc_trace(mVcdFile, tmp_13_fu_728_p1, "tmp_13_fu_728_p1");
    sc_trace(mVcdFile, tmp_24_fu_748_p3, "tmp_24_fu_748_p3");
    sc_trace(mVcdFile, tmp_15_fu_740_p3, "tmp_15_fu_740_p3");
    sc_trace(mVcdFile, tmp_27_fu_762_p2, "tmp_27_fu_762_p2");
    sc_trace(mVcdFile, tmp_26_fu_756_p2, "tmp_26_fu_756_p2");
    sc_trace(mVcdFile, ret_V2_i_fu_768_p2, "ret_V2_i_fu_768_p2");
    sc_trace(mVcdFile, tmp_31_fu_782_p4, "tmp_31_fu_782_p4");
    sc_trace(mVcdFile, r_V_1_fu_774_p3, "r_V_1_fu_774_p3");
    sc_trace(mVcdFile, grp_fu_482_p4, "grp_fu_482_p4");
    sc_trace(mVcdFile, tmp_32_fu_792_p2, "tmp_32_fu_792_p2");
    sc_trace(mVcdFile, ret_V_1_fu_798_p3, "ret_V_1_fu_798_p3");
    sc_trace(mVcdFile, tmp_12_fu_720_p3, "tmp_12_fu_720_p3");
    sc_trace(mVcdFile, tmp_41_fu_851_p3, "tmp_41_fu_851_p3");
    sc_trace(mVcdFile, tmp_34_fu_847_p1, "tmp_34_fu_847_p1");
    sc_trace(mVcdFile, tmp_42_fu_859_p3, "tmp_42_fu_859_p3");
    sc_trace(mVcdFile, tmp_45_fu_881_p2, "tmp_45_fu_881_p2");
    sc_trace(mVcdFile, tmp_44_fu_875_p2, "tmp_44_fu_875_p2");
    sc_trace(mVcdFile, ret_V2_i2_fu_887_p2, "ret_V2_i2_fu_887_p2");
    sc_trace(mVcdFile, tmp_46_fu_901_p4, "tmp_46_fu_901_p4");
    sc_trace(mVcdFile, r_V_3_fu_893_p3, "r_V_3_fu_893_p3");
    sc_trace(mVcdFile, grp_fu_925_p0, "grp_fu_925_p0");
    sc_trace(mVcdFile, grp_fu_925_p1, "grp_fu_925_p1");
    sc_trace(mVcdFile, grp_fu_925_p2, "grp_fu_925_p2");
    sc_trace(mVcdFile, tmp_49_fu_935_p1, "tmp_49_fu_935_p1");
    sc_trace(mVcdFile, tmp_50_fu_947_p1, "tmp_50_fu_947_p1");
    sc_trace(mVcdFile, p_shl4_cast_fu_939_p3, "p_shl4_cast_fu_939_p3");
    sc_trace(mVcdFile, p_shl5_cast_fu_951_p3, "p_shl5_cast_fu_951_p3");
    sc_trace(mVcdFile, tmp_22_cast_fu_982_p1, "tmp_22_cast_fu_982_p1");
    sc_trace(mVcdFile, tmp_52_fu_986_p2, "tmp_52_fu_986_p2");
    sc_trace(mVcdFile, tmp_23_fu_999_p0, "tmp_23_fu_999_p0");
    sc_trace(mVcdFile, mul_fu_1016_p0, "mul_fu_1016_p0");
    sc_trace(mVcdFile, neg_mul_fu_1032_p2, "neg_mul_fu_1032_p2");
    sc_trace(mVcdFile, tmp_54_fu_1037_p4, "tmp_54_fu_1037_p4");
    sc_trace(mVcdFile, trunc_fu_1053_p1, "trunc_fu_1053_p1");
    sc_trace(mVcdFile, neg_ti_fu_1056_p2, "neg_ti_fu_1056_p2");
    sc_trace(mVcdFile, tmp_56_fu_1062_p1, "tmp_56_fu_1062_p1");
    sc_trace(mVcdFile, tmp_62_fu_1065_p3, "tmp_62_fu_1065_p3");
    sc_trace(mVcdFile, tmp_20_fu_1087_p1, "tmp_20_fu_1087_p1");
    sc_trace(mVcdFile, grp_fu_1098_p1, "grp_fu_1098_p1");
    sc_trace(mVcdFile, grp_fu_1107_p0, "grp_fu_1107_p0");
    sc_trace(mVcdFile, mul7_fu_1128_p0, "mul7_fu_1128_p0");
    sc_trace(mVcdFile, neg_mul8_fu_1144_p2, "neg_mul8_fu_1144_p2");
    sc_trace(mVcdFile, tmp_64_fu_1149_p4, "tmp_64_fu_1149_p4");
    sc_trace(mVcdFile, p_v2_v_fu_1159_p3, "p_v2_v_fu_1159_p3");
    sc_trace(mVcdFile, neg_ti1_fu_1165_p2, "neg_ti1_fu_1165_p2");
    sc_trace(mVcdFile, tmp_66_fu_1171_p3, "tmp_66_fu_1171_p3");
    sc_trace(mVcdFile, tmp5_cast_fu_1183_p1, "tmp5_cast_fu_1183_p1");
    sc_trace(mVcdFile, tmp_68_fu_1198_p3, "tmp_68_fu_1198_p3");
    sc_trace(mVcdFile, tmp_67_fu_1191_p3, "tmp_67_fu_1191_p3");
    sc_trace(mVcdFile, tmp_69_fu_1205_p3, "tmp_69_fu_1205_p3");
    sc_trace(mVcdFile, tmp_58_fu_1218_p2, "tmp_58_fu_1218_p2");
    sc_trace(mVcdFile, tmp_57_fu_1212_p2, "tmp_57_fu_1212_p2");
    sc_trace(mVcdFile, ret_V2_i4_fu_1223_p2, "ret_V2_i4_fu_1223_p2");
    sc_trace(mVcdFile, tmp_71_fu_1246_p3, "tmp_71_fu_1246_p3");
    sc_trace(mVcdFile, tmp_70_fu_1237_p4, "tmp_70_fu_1237_p4");
    sc_trace(mVcdFile, tmp_59_fu_1253_p3, "tmp_59_fu_1253_p3");
    sc_trace(mVcdFile, r_V_4_fu_1229_p3, "r_V_4_fu_1229_p3");
    sc_trace(mVcdFile, tmp_61_fu_1267_p4, "tmp_61_fu_1267_p4");
    sc_trace(mVcdFile, tmp_60_fu_1261_p2, "tmp_60_fu_1261_p2");
    sc_trace(mVcdFile, ret_V_4_fu_1276_p3, "ret_V_4_fu_1276_p3");
    sc_trace(mVcdFile, ret_V_fu_1298_p0, "ret_V_fu_1298_p0");
    sc_trace(mVcdFile, mul1_fu_1307_p0, "mul1_fu_1307_p0");
    sc_trace(mVcdFile, tmp_72_fu_1313_p4, "tmp_72_fu_1313_p4");
    sc_trace(mVcdFile, tmp_28_fu_1322_p1, "tmp_28_fu_1322_p1");
    sc_trace(mVcdFile, mul2_fu_1343_p0, "mul2_fu_1343_p0");
    sc_trace(mVcdFile, mul2_fu_1343_p2, "mul2_fu_1343_p2");
    sc_trace(mVcdFile, tmp_35_fu_1357_p0, "tmp_35_fu_1357_p0");
    sc_trace(mVcdFile, mul3_fu_1374_p0, "mul3_fu_1374_p0");
    sc_trace(mVcdFile, neg_mul1_fu_1390_p2, "neg_mul1_fu_1390_p2");
    sc_trace(mVcdFile, tmp_75_fu_1395_p4, "tmp_75_fu_1395_p4");
    sc_trace(mVcdFile, tmp_76_fu_1405_p1, "tmp_76_fu_1405_p1");
    sc_trace(mVcdFile, tmp_78_fu_1409_p1, "tmp_78_fu_1409_p1");
    sc_trace(mVcdFile, tmp_79_fu_1412_p3, "tmp_79_fu_1412_p3");
    sc_trace(mVcdFile, neg_ti2_fu_1419_p2, "neg_ti2_fu_1419_p2");
    sc_trace(mVcdFile, tmp_38_fu_1443_p2, "tmp_38_fu_1443_p2");
    sc_trace(mVcdFile, tmp_39_fu_1449_p2, "tmp_39_fu_1449_p2");
    sc_trace(mVcdFile, tmp_80_fu_1489_p1, "tmp_80_fu_1489_p1");
    sc_trace(mVcdFile, mul4_fu_1501_p1, "mul4_fu_1501_p1");
    sc_trace(mVcdFile, neg_mul2_fu_1537_p2, "neg_mul2_fu_1537_p2");
    sc_trace(mVcdFile, tmp_81_fu_1542_p4, "tmp_81_fu_1542_p4");
    sc_trace(mVcdFile, p_v_v_fu_1552_p3, "p_v_v_fu_1552_p3");
    sc_trace(mVcdFile, tmp_83_fu_1558_p1, "tmp_83_fu_1558_p1");
    sc_trace(mVcdFile, neg_ti3_fu_1562_p2, "neg_ti3_fu_1562_p2");
    sc_trace(mVcdFile, tmp_84_fu_1568_p1, "tmp_84_fu_1568_p1");
    sc_trace(mVcdFile, tmp_10_fu_1580_p1, "tmp_10_fu_1580_p1");
    sc_trace(mVcdFile, grp_fu_925_ap_start, "grp_fu_925_ap_start");
    sc_trace(mVcdFile, grp_fu_925_ap_done, "grp_fu_925_ap_done");
    sc_trace(mVcdFile, grp_fu_1098_ap_start, "grp_fu_1098_ap_start");
    sc_trace(mVcdFile, grp_fu_1098_ap_done, "grp_fu_1098_ap_done");
    sc_trace(mVcdFile, grp_fu_1107_ap_start, "grp_fu_1107_ap_start");
    sc_trace(mVcdFile, grp_fu_1107_ap_done, "grp_fu_1107_ap_done");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, mul1_fu_1307_p00, "mul1_fu_1307_p00");
    sc_trace(mVcdFile, mul2_fu_1343_p00, "mul2_fu_1343_p00");
    sc_trace(mVcdFile, ret_V_fu_1298_p00, "ret_V_fu_1298_p00");
#endif

    }
    mHdltvinHandle.open("maxCut.hdltvin.dat");
    mHdltvoutHandle.open("maxCut.hdltvout.dat");
}

maxCut::~maxCut() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete maxCut_AXILiteS_s_axi_U;
    delete matrix_U;
    delete currentSolution_U;
    delete maxCut_urem_29ns_cud_U1;
    delete maxCut_urem_32ns_dEe_U2;
    delete maxCut_sdiv_32ns_eOg_U3;
    delete maxCut_mul_mul_8sfYi_U4;
}

void maxCut::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void maxCut::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_data_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_vld_out.read()))) {
            input_stream_V_data_V_0_sel_rd =  (sc_logic) (~input_stream_V_data_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_data_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_ack_in.read()))) {
            input_stream_V_data_V_0_sel_wr =  (sc_logic) (~input_stream_V_data_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_data_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_2)))) {
            input_stream_V_data_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_3)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_1)))) {
            input_stream_V_data_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_2)) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_1)) || 
                    (esl_seteq<1,2,2>(input_stream_V_data_V_0_state.read(), ap_const_lv2_3) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_ack_out.read()))))) {
            input_stream_V_data_V_0_state = ap_const_lv2_3;
        } else {
            input_stream_V_data_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_dest_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_vld_out.read()))) {
            input_stream_V_dest_V_0_sel_rd =  (sc_logic) (~input_stream_V_dest_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_dest_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_ack_in.read()))) {
            input_stream_V_dest_V_0_sel_wr =  (sc_logic) (~input_stream_V_dest_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_dest_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_dest_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_dest_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_dest_V_0_state.read())))) {
            input_stream_V_dest_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_dest_V_0_state.read())))) {
            input_stream_V_dest_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_dest_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_dest_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_dest_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_dest_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_ack_out.read()))))) {
            input_stream_V_dest_V_0_state = ap_const_lv2_3;
        } else {
            input_stream_V_dest_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_id_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_vld_out.read()))) {
            input_stream_V_id_V_0_sel_rd =  (sc_logic) (~input_stream_V_id_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_id_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_ack_in.read()))) {
            input_stream_V_id_V_0_sel_wr =  (sc_logic) (~input_stream_V_id_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_id_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_id_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_id_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_id_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_id_V_0_state.read())))) {
            input_stream_V_id_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_id_V_0_state.read())))) {
            input_stream_V_id_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_id_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_id_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_id_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_id_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_id_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_ack_out.read()))))) {
            input_stream_V_id_V_0_state = ap_const_lv2_3;
        } else {
            input_stream_V_id_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_keep_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_vld_out.read()))) {
            input_stream_V_keep_V_0_sel_rd =  (sc_logic) (~input_stream_V_keep_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_keep_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_ack_in.read()))) {
            input_stream_V_keep_V_0_sel_wr =  (sc_logic) (~input_stream_V_keep_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_keep_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_keep_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_keep_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_keep_V_0_state.read())))) {
            input_stream_V_keep_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_keep_V_0_state.read())))) {
            input_stream_V_keep_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_keep_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_keep_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_keep_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_keep_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_ack_out.read()))))) {
            input_stream_V_keep_V_0_state = ap_const_lv2_3;
        } else {
            input_stream_V_keep_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_strb_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_vld_out.read()))) {
            input_stream_V_strb_V_0_sel_rd =  (sc_logic) (~input_stream_V_strb_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_strb_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_ack_in.read()))) {
            input_stream_V_strb_V_0_sel_wr =  (sc_logic) (~input_stream_V_strb_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_strb_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_strb_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_strb_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_strb_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_strb_V_0_state.read())))) {
            input_stream_V_strb_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_strb_V_0_state.read())))) {
            input_stream_V_strb_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_strb_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_strb_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_strb_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_strb_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_ack_out.read()))))) {
            input_stream_V_strb_V_0_state = ap_const_lv2_3;
        } else {
            input_stream_V_strb_V_0_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_user_V_0_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_vld_out.read()))) {
            input_stream_V_user_V_0_sel_rd =  (sc_logic) (~input_stream_V_user_V_0_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_user_V_0_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_ack_in.read()))) {
            input_stream_V_user_V_0_sel_wr =  (sc_logic) (~input_stream_V_user_V_0_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        input_stream_V_user_V_0_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_user_V_0_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_user_V_0_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_user_V_0_state.read())))) {
            input_stream_V_user_V_0_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_user_V_0_state.read())))) {
            input_stream_V_user_V_0_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, input_stream_V_user_V_0_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, input_stream_V_user_V_0_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, input_stream_V_user_V_0_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_user_V_0_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_user_V_0_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_ack_out.read()))))) {
            input_stream_V_user_V_0_state = ap_const_lv2_3;
        } else {
            input_stream_V_user_V_0_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_2_fu_555_p2.read()))) {
        invdar1_reg_355 = indvarinc1_fu_535_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        invdar1_reg_355 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_567_p2.read()))) {
        invdar2_reg_388 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_4_fu_702_p2.read()))) {
        invdar2_reg_388 = indvarinc2_fu_691_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_555_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_561_p2.read()))) {
        invdar_reg_343 = indvarinc_reg_1586.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        invdar_reg_343 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read())) {
        lfsr_V = ret_V_5_cast_fu_1284_p1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_708_p2.read()))) {
        lfsr_V = ret_V_1_cast_fu_806_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        localFieldVal_reg_444 = localFieldVal_1_fu_1072_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        localFieldVal_reg_444 = ap_const_lv25_0;
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_data_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_vld_out.read()))) {
            output_stream_V_data_V_1_sel_rd =  (sc_logic) (~output_stream_V_data_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_data_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_ack_in.read()))) {
            output_stream_V_data_V_1_sel_wr =  (sc_logic) (~output_stream_V_data_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_data_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_data_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_data_V_1_state.read())))) {
            output_stream_V_data_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_data_V_1_state.read())))) {
            output_stream_V_data_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_data_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_data_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_ack_out.read()))))) {
            output_stream_V_data_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_data_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_dest_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_vld_out.read()))) {
            output_stream_V_dest_V_1_sel_rd =  (sc_logic) (~output_stream_V_dest_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_dest_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_ack_in.read()))) {
            output_stream_V_dest_V_1_sel_wr =  (sc_logic) (~output_stream_V_dest_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_dest_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_dest_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_dest_V_1_state.read())))) {
            output_stream_V_dest_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_dest_V_1_state.read())))) {
            output_stream_V_dest_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_dest_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_dest_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_ack_out.read()))))) {
            output_stream_V_dest_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_dest_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_id_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_vld_out.read()))) {
            output_stream_V_id_V_1_sel_rd =  (sc_logic) (~output_stream_V_id_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_id_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_ack_in.read()))) {
            output_stream_V_id_V_1_sel_wr =  (sc_logic) (~output_stream_V_id_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_id_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_id_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_id_V_1_state.read())))) {
            output_stream_V_id_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_id_V_1_state.read())))) {
            output_stream_V_id_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_id_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_id_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_ack_out.read()))))) {
            output_stream_V_id_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_id_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_keep_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_vld_out.read()))) {
            output_stream_V_keep_V_1_sel_rd =  (sc_logic) (~output_stream_V_keep_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_keep_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_ack_in.read()))) {
            output_stream_V_keep_V_1_sel_wr =  (sc_logic) (~output_stream_V_keep_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_keep_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_keep_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_keep_V_1_state.read())))) {
            output_stream_V_keep_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_keep_V_1_state.read())))) {
            output_stream_V_keep_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_keep_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_keep_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_ack_out.read()))))) {
            output_stream_V_keep_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_keep_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_last_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_vld_out.read()))) {
            output_stream_V_last_V_1_sel_rd =  (sc_logic) (~output_stream_V_last_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_last_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_ack_in.read()))) {
            output_stream_V_last_V_1_sel_wr =  (sc_logic) (~output_stream_V_last_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_last_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_last_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_last_V_1_state.read())))) {
            output_stream_V_last_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_last_V_1_state.read())))) {
            output_stream_V_last_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_last_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_last_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_ack_out.read()))))) {
            output_stream_V_last_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_last_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_strb_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_vld_out.read()))) {
            output_stream_V_strb_V_1_sel_rd =  (sc_logic) (~output_stream_V_strb_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_strb_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_ack_in.read()))) {
            output_stream_V_strb_V_1_sel_wr =  (sc_logic) (~output_stream_V_strb_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_strb_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_strb_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_strb_V_1_state.read())))) {
            output_stream_V_strb_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_strb_V_1_state.read())))) {
            output_stream_V_strb_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_strb_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_strb_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_ack_out.read()))))) {
            output_stream_V_strb_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_strb_V_1_state = ap_const_lv2_2;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_user_V_1_sel_rd = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_ack_out.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_vld_out.read()))) {
            output_stream_V_user_V_1_sel_rd =  (sc_logic) (~output_stream_V_user_V_1_sel_rd.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_user_V_1_sel_wr = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_vld_in.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_ack_in.read()))) {
            output_stream_V_user_V_1_sel_wr =  (sc_logic) (~output_stream_V_user_V_1_sel_wr.read());
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        output_stream_V_user_V_1_state = ap_const_lv2_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_ack_out.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_user_V_1_state.read())) || 
             (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_vld_in.read()) && 
              esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_user_V_1_state.read())))) {
            output_stream_V_user_V_1_state = ap_const_lv2_2;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_user_V_1_state.read())))) {
            output_stream_V_user_V_1_state = ap_const_lv2_1;
        } else if (((esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_vld_in.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_2, output_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_ack_out.read()) && 
                     esl_seteq<1,2,2>(ap_const_lv2_1, output_stream_V_user_V_1_state.read())) || 
                    (esl_seteq<1,2,2>(ap_const_lv2_3, output_stream_V_user_V_1_state.read()) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_out.read())) && 
                     !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_vld_in.read()) && esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_ack_out.read()))))) {
            output_stream_V_user_V_1_state = ap_const_lv2_3;
        } else {
            output_stream_V_user_V_1_state = ap_const_lv2_2;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_708_p2.read()))) {
        p_4_reg_410 = ap_const_lv18_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_reg_1691.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_37_fu_1437_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_1454_p2.read()))) {
        p_4_reg_410 = iterate_V_reg_1695.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state47.read())) {
        p_6_reg_433 = j_V_1_reg_1737.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        p_6_reg_433 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_702_p2.read()))) {
        p_s_reg_399 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_708_p2.read()))) {
        p_s_reg_399 = i_V_1_fu_714_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_708_p2.read()))) {
        phi_mul_reg_421 = ap_const_lv28_3E8;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_reg_1691.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_37_fu_1437_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_cond_fu_1454_p2.read()))) {
        phi_mul_reg_421 = phitmp_fu_1460_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_fu_1093_p2.read()))) {
        prob_reg_456 = ap_const_lv32_3E8;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_reg_1807.read()))) {
        prob_reg_456 = tmp_44_i_fu_1186_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_567_p2.read()))) {
        t_V_1_reg_377 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        t_V_1_reg_377 = j_V_reg_1653.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        t_V_2_reg_467 = i_V_2_reg_1916.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) && 
                ((esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_1454_p2.read()) || 
                  esl_seteq<1,1,1>(ap_const_lv1_1, tmp_37_fu_1437_p2.read())) || 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_reg_1691.read())))) {
        t_V_2_reg_467 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_609_p2.read()))) {
        t_V_reg_366 = i_V_reg_1640.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_555_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_561_p2.read()))) {
        t_V_reg_366 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state129.read())) {
        temperature_fu_228 = tmp_36_fu_1425_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_708_p2.read()))) {
        temperature_fu_228 = ap_const_lv32_4E20;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_965_p2.read()))) {
        currentSolution_addr_2_reg_1752 =  (sc_lv<3>) (tmp_18_reg_1724.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state85.read())) {
        deltaEnergy_reg_1811 = grp_fu_1098_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read())))) {
        i_V_2_reg_1916 = i_V_2_fu_1472_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_V_reg_1640 = i_V_fu_573_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        indvarinc_reg_1586 = indvarinc_fu_499_p2.read();
        tmp_1_reg_1591 = tmp_1_fu_529_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_load_A.read())) {
        input_stream_V_data_V_0_payload_A = input_stream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_load_B.read())) {
        input_stream_V_data_V_0_payload_B = input_stream_TDATA.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_load_A.read())) {
        input_stream_V_dest_V_0_payload_A = input_stream_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_load_B.read())) {
        input_stream_V_dest_V_0_payload_B = input_stream_TDEST.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_load_A.read())) {
        input_stream_V_id_V_0_payload_A = input_stream_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_load_B.read())) {
        input_stream_V_id_V_0_payload_B = input_stream_TID.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_load_A.read())) {
        input_stream_V_keep_V_0_payload_A = input_stream_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_load_B.read())) {
        input_stream_V_keep_V_0_payload_B = input_stream_TKEEP.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_load_A.read())) {
        input_stream_V_strb_V_0_payload_A = input_stream_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_load_B.read())) {
        input_stream_V_strb_V_0_payload_B = input_stream_TSTRB.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_load_A.read())) {
        input_stream_V_user_V_0_payload_A = input_stream_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_load_B.read())) {
        input_stream_V_user_V_0_payload_B = input_stream_TUSER.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        iterate_V_reg_1695 = iterate_V_fu_841_p2.read();
        tmp_17_reg_1691 = tmp_17_fu_835_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        j_V_1_reg_1737 = j_V_1_fu_971_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        j_V_reg_1653 = j_V_fu_615_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read())) {
        matrix_load_reg_1757 = matrix_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state126.read())) {
        mul1_reg_1870 = mul1_fu_1307_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state128.read())) {
        mul3_reg_1892 = mul3_fu_1374_p2.read();
        tmp_77_reg_1897 = mul3_fu_1374_p2.read().range(64, 49);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read())) {
        mul4_reg_1937 = mul4_fu_1501_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state123.read())) {
        mul7_reg_1844 = mul7_fu_1128_p2.read();
        tmp_65_reg_1849 = mul7_fu_1128_p2.read().range(64, 43);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read())) {
        mul_reg_1773 = mul_fu_1016_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1466_p2.read()))) {
        output_last_V_reg_1926 = output_last_V_fu_1483_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_load_A.read())) {
        output_stream_V_data_V_1_payload_A = fpga_output_V_fu_1572_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_load_B.read())) {
        output_stream_V_data_V_1_payload_B = fpga_output_V_fu_1572_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_load_A.read())) {
        output_stream_V_dest_V_1_payload_A = tmp_dest_V_fu_224.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_load_B.read())) {
        output_stream_V_dest_V_1_payload_B = tmp_dest_V_fu_224.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_load_A.read())) {
        output_stream_V_id_V_1_payload_A = tmp_id_V_fu_220.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_load_B.read())) {
        output_stream_V_id_V_1_payload_B = tmp_id_V_fu_220.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_load_A.read())) {
        output_stream_V_keep_V_1_payload_A = tmp_keep_V_fu_208.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_load_B.read())) {
        output_stream_V_keep_V_1_payload_B = tmp_keep_V_fu_208.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_load_A.read())) {
        output_stream_V_last_V_1_payload_A = output_last_V_reg_1926.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_load_B.read())) {
        output_stream_V_last_V_1_payload_B = output_last_V_reg_1926.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_load_A.read())) {
        output_stream_V_strb_V_1_payload_A = tmp_strb_V_fu_212.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_load_B.read())) {
        output_stream_V_strb_V_1_payload_B = tmp_strb_V_fu_212.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_load_A.read())) {
        output_stream_V_user_V_1_payload_A = tmp_user_V_fu_216.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_load_B.read())) {
        output_stream_V_user_V_1_payload_B = tmp_user_V_fu_216.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state46.read())) {
        p_v1_v_reg_1783 = p_v1_v_fu_1047_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_fu_835_p2.read()))) {
        r_V_2_reg_1700 = lfsr_V.read();
        tmp_43_reg_1709 = lfsr_V.read().range(3, 3);
        tmp_47_reg_1714 = tmp_47_fu_911_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state43.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state132.read()))) {
        reg_495 = currentSolution_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state125.read())) {
        ret_V_reg_1865 = ret_V_fu_1298_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state124.read())) {
        tmp5_reg_1855 = tmp5_fu_1177_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        tmp_10_reg_1658 = tmp_10_fu_1580_p2.read();
        tmp_11_reg_1663 = tmp_11_fu_653_p2.read();
        tmp_dest_V_fu_224 = input_stream_V_dest_V_0_data_out.read();
        tmp_id_V_fu_220 = input_stream_V_id_V_0_data_out.read();
        tmp_keep_V_fu_208 = input_stream_V_keep_V_0_data_out.read();
        tmp_strb_V_fu_212 = input_stream_V_strb_V_0_data_out.read();
        tmp_user_V_fu_216 = input_stream_V_user_V_0_data_out.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        tmp_18_reg_1724 = tmp_18_fu_931_p1.read();
        tmp_51_reg_1729 = tmp_51_fu_959_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state48.read())) {
        tmp_19_reg_1794 = tmp_19_fu_1078_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state49.read())) {
        tmp_20_reg_1799 = tmp_20_fu_1087_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read())) {
        tmp_21_reg_1807 = tmp_21_fu_1093_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state44.read())) {
        tmp_23_reg_1762 = tmp_23_fu_999_p2.read();
        tmp_53_reg_1767 = tmp_23_fu_999_p2.read().range(31, 31);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_73_fu_1349_p3.read()))) {
        tmp_35_reg_1881 = tmp_35_fu_1357_p2.read();
        tmp_74_reg_1886 = tmp_35_fu_1357_p2.read().range(31, 31);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state45.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_53_reg_1767.read()))) {
        tmp_55_reg_1778 = mul_fu_1016_p2.read().range(64, 42);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state122.read())) {
        tmp_63_reg_1838 = tmp_i2_fu_1113_p2.read().range(31, 31);
        tmp_i2_reg_1833 = tmp_i2_fu_1113_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state132.read())) {
        tmp_80_reg_1931 = tmp_80_fu_1489_p1.read().range(31, 31);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state133.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_80_reg_1931.read()))) {
        tmp_82_reg_1942 = mul4_fu_1501_p2.read().range(64, 42);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond1_fu_567_p2.read()))) {
        tmp_8_reg_1645 = tmp_8_fu_603_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state121.read())) {
        x_assign_reg_1826 = grp_fu_1107_p2.read();
    }
}

void maxCut::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void maxCut::thread_ap_CS_fsm_state121() {
    ap_CS_fsm_state121 = ap_CS_fsm.read()[120];
}

void maxCut::thread_ap_CS_fsm_state122() {
    ap_CS_fsm_state122 = ap_CS_fsm.read()[121];
}

void maxCut::thread_ap_CS_fsm_state123() {
    ap_CS_fsm_state123 = ap_CS_fsm.read()[122];
}

void maxCut::thread_ap_CS_fsm_state124() {
    ap_CS_fsm_state124 = ap_CS_fsm.read()[123];
}

void maxCut::thread_ap_CS_fsm_state125() {
    ap_CS_fsm_state125 = ap_CS_fsm.read()[124];
}

void maxCut::thread_ap_CS_fsm_state126() {
    ap_CS_fsm_state126 = ap_CS_fsm.read()[125];
}

void maxCut::thread_ap_CS_fsm_state127() {
    ap_CS_fsm_state127 = ap_CS_fsm.read()[126];
}

void maxCut::thread_ap_CS_fsm_state128() {
    ap_CS_fsm_state128 = ap_CS_fsm.read()[127];
}

void maxCut::thread_ap_CS_fsm_state129() {
    ap_CS_fsm_state129 = ap_CS_fsm.read()[128];
}

void maxCut::thread_ap_CS_fsm_state130() {
    ap_CS_fsm_state130 = ap_CS_fsm.read()[129];
}

void maxCut::thread_ap_CS_fsm_state131() {
    ap_CS_fsm_state131 = ap_CS_fsm.read()[130];
}

void maxCut::thread_ap_CS_fsm_state132() {
    ap_CS_fsm_state132 = ap_CS_fsm.read()[131];
}

void maxCut::thread_ap_CS_fsm_state133() {
    ap_CS_fsm_state133 = ap_CS_fsm.read()[132];
}

void maxCut::thread_ap_CS_fsm_state134() {
    ap_CS_fsm_state134 = ap_CS_fsm.read()[133];
}

void maxCut::thread_ap_CS_fsm_state135() {
    ap_CS_fsm_state135 = ap_CS_fsm.read()[134];
}

void maxCut::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void maxCut::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void maxCut::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void maxCut::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void maxCut::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void maxCut::thread_ap_CS_fsm_state43() {
    ap_CS_fsm_state43 = ap_CS_fsm.read()[42];
}

void maxCut::thread_ap_CS_fsm_state44() {
    ap_CS_fsm_state44 = ap_CS_fsm.read()[43];
}

void maxCut::thread_ap_CS_fsm_state45() {
    ap_CS_fsm_state45 = ap_CS_fsm.read()[44];
}

void maxCut::thread_ap_CS_fsm_state46() {
    ap_CS_fsm_state46 = ap_CS_fsm.read()[45];
}

void maxCut::thread_ap_CS_fsm_state47() {
    ap_CS_fsm_state47 = ap_CS_fsm.read()[46];
}

void maxCut::thread_ap_CS_fsm_state48() {
    ap_CS_fsm_state48 = ap_CS_fsm.read()[47];
}

void maxCut::thread_ap_CS_fsm_state49() {
    ap_CS_fsm_state49 = ap_CS_fsm.read()[48];
}

void maxCut::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void maxCut::thread_ap_CS_fsm_state50() {
    ap_CS_fsm_state50 = ap_CS_fsm.read()[49];
}

void maxCut::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void maxCut::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void maxCut::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void maxCut::thread_ap_CS_fsm_state85() {
    ap_CS_fsm_state85 = ap_CS_fsm.read()[84];
}

void maxCut::thread_ap_CS_fsm_state86() {
    ap_CS_fsm_state86 = ap_CS_fsm.read()[85];
}

void maxCut::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void maxCut::thread_ap_block_state131() {
    ap_block_state131 = (esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read()));
}

void maxCut::thread_ap_block_state5() {
    ap_block_state5 = (esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read()));
}

void maxCut::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read())) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1466_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void maxCut::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void maxCut::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read())) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_state.read()[0]) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1466_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void maxCut::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void maxCut::thread_currentSolution_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read())) {
        currentSolution_address0 =  (sc_lv<3>) (tmp_40_fu_1478_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read())) {
        currentSolution_address0 = currentSolution_addr_2_reg_1752.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_965_p2.read()))) {
        currentSolution_address0 =  (sc_lv<3>) (tmp_18_reg_1724.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_965_p2.read()))) {
        currentSolution_address0 =  (sc_lv<3>) (tmp_22_fu_977_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        currentSolution_address0 =  (sc_lv<3>) (tmp_16_fu_825_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        currentSolution_address0 =  (sc_lv<3>) (tmp_s_fu_697_p1.read());
    } else {
        currentSolution_address0 = "XXX";
    }
}

void maxCut::thread_currentSolution_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond8_fu_965_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_965_p2.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read()))))) {
        currentSolution_ce0 = ap_const_logic_1;
    } else {
        currentSolution_ce0 = ap_const_logic_0;
    }
}

void maxCut::thread_currentSolution_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read())) {
        currentSolution_d0 = tmp_30_fu_1332_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        currentSolution_d0 = tmp_15_cast_cast_fu_816_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        currentSolution_d0 = ap_const_lv32_0;
    } else {
        currentSolution_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void maxCut::thread_currentSolution_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, exitcond3_fu_708_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_29_fu_1326_p2.read())))) {
        currentSolution_we0 = ap_const_logic_1;
    } else {
        currentSolution_we0 = ap_const_logic_0;
    }
}

void maxCut::thread_exitcond1_fu_567_p2() {
    exitcond1_fu_567_p2 = (!t_V_reg_366.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_366.read() == ap_const_lv3_6);
}

void maxCut::thread_exitcond2_fu_609_p2() {
    exitcond2_fu_609_p2 = (!t_V_1_reg_377.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(t_V_1_reg_377.read() == ap_const_lv3_6);
}

void maxCut::thread_exitcond3_fu_708_p2() {
    exitcond3_fu_708_p2 = (!p_s_reg_399.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(p_s_reg_399.read() == ap_const_lv3_6);
}

void maxCut::thread_exitcond8_fu_965_p2() {
    exitcond8_fu_965_p2 = (!p_6_reg_433.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(p_6_reg_433.read() == ap_const_lv3_6);
}

void maxCut::thread_exitcond_fu_1466_p2() {
    exitcond_fu_1466_p2 = (!t_V_2_reg_467.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(t_V_2_reg_467.read() == ap_const_lv3_6);
}

void maxCut::thread_fpga_output_V_fu_1572_p3() {
    fpga_output_V_fu_1572_p3 = (!tmp_80_reg_1931.read()[0].is_01())? sc_lv<8>(): ((tmp_80_reg_1931.read()[0].to_bool())? neg_ti3_fu_1562_p2.read(): tmp_84_fu_1568_p1.read());
}

void maxCut::thread_grp_fu_1098_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_21_fu_1093_p2.read()))) {
        grp_fu_1098_ap_start = ap_const_logic_1;
    } else {
        grp_fu_1098_ap_start = ap_const_logic_0;
    }
}

void maxCut::thread_grp_fu_1098_p1() {
    grp_fu_1098_p1 =  (sc_lv<11>) (ap_const_lv32_3E8);
}

void maxCut::thread_grp_fu_1107_ap_start() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state86.read())) {
        grp_fu_1107_ap_start = ap_const_logic_1;
    } else {
        grp_fu_1107_ap_start = ap_const_logic_0;
    }
}

void maxCut::thread_grp_fu_1107_p0() {
    grp_fu_1107_p0 = (!deltaEnergy_reg_1811.read().is_01() || !tmp_20_reg_1799.read().is_01())? sc_lv<32>(): (sc_biguint<32>(deltaEnergy_reg_1811.read()) - sc_biguint<32>(tmp_20_reg_1799.read()));
}

void maxCut::thread_grp_fu_482_p4() {
    grp_fu_482_p4 = lfsr_V.read().range(29, 17);
}

void maxCut::thread_grp_fu_925_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_17_fu_835_p2.read()))) {
        grp_fu_925_ap_start = ap_const_logic_1;
    } else {
        grp_fu_925_ap_start = ap_const_logic_0;
    }
}

void maxCut::thread_grp_fu_925_p0() {
    grp_fu_925_p0 = esl_concat<13,16>(grp_fu_482_p4.read(), tmp_47_fu_911_p2.read());
}

void maxCut::thread_grp_fu_925_p1() {
    grp_fu_925_p1 =  (sc_lv<4>) (ap_const_lv29_6);
}

void maxCut::thread_i_V_1_fu_714_p2() {
    i_V_1_fu_714_p2 = (!p_s_reg_399.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(p_s_reg_399.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_i_V_2_fu_1472_p2() {
    i_V_2_fu_1472_p2 = (!t_V_2_reg_467.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(t_V_2_reg_467.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_i_V_fu_573_p2() {
    i_V_fu_573_p2 = (!t_V_reg_366.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(t_V_reg_366.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_indvarinc1_fu_535_p2() {
    indvarinc1_fu_535_p2 = (!invdar1_reg_355.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(invdar1_reg_355.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_indvarinc2_fu_691_p2() {
    indvarinc2_fu_691_p2 = (!invdar2_reg_388.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(invdar2_reg_388.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_indvarinc_fu_499_p2() {
    indvarinc_fu_499_p2 = (!invdar_reg_343.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(invdar_reg_343.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_input_stream_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()))) {
        input_stream_TDATA_blk_n = input_stream_V_data_V_0_state.read()[0];
    } else {
        input_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void maxCut::thread_input_stream_TREADY() {
    input_stream_TREADY = input_stream_V_dest_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_data_V_0_ack_in() {
    input_stream_V_data_V_0_ack_in = input_stream_V_data_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_data_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        input_stream_V_data_V_0_ack_out = ap_const_logic_1;
    } else {
        input_stream_V_data_V_0_ack_out = ap_const_logic_0;
    }
}

void maxCut::thread_input_stream_V_data_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_data_V_0_sel.read())) {
        input_stream_V_data_V_0_data_out = input_stream_V_data_V_0_payload_B.read();
    } else {
        input_stream_V_data_V_0_data_out = input_stream_V_data_V_0_payload_A.read();
    }
}

void maxCut::thread_input_stream_V_data_V_0_load_A() {
    input_stream_V_data_V_0_load_A = (input_stream_V_data_V_0_state_cmp_full.read() & ~input_stream_V_data_V_0_sel_wr.read());
}

void maxCut::thread_input_stream_V_data_V_0_load_B() {
    input_stream_V_data_V_0_load_B = (input_stream_V_data_V_0_sel_wr.read() & input_stream_V_data_V_0_state_cmp_full.read());
}

void maxCut::thread_input_stream_V_data_V_0_sel() {
    input_stream_V_data_V_0_sel = input_stream_V_data_V_0_sel_rd.read();
}

void maxCut::thread_input_stream_V_data_V_0_state_cmp_full() {
    input_stream_V_data_V_0_state_cmp_full =  (sc_logic) ((!input_stream_V_data_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_stream_V_data_V_0_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_input_stream_V_data_V_0_vld_in() {
    input_stream_V_data_V_0_vld_in = input_stream_TVALID.read();
}

void maxCut::thread_input_stream_V_data_V_0_vld_out() {
    input_stream_V_data_V_0_vld_out = input_stream_V_data_V_0_state.read()[0];
}

void maxCut::thread_input_stream_V_dest_V_0_ack_in() {
    input_stream_V_dest_V_0_ack_in = input_stream_V_dest_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_dest_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        input_stream_V_dest_V_0_ack_out = ap_const_logic_1;
    } else {
        input_stream_V_dest_V_0_ack_out = ap_const_logic_0;
    }
}

void maxCut::thread_input_stream_V_dest_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_dest_V_0_sel.read())) {
        input_stream_V_dest_V_0_data_out = input_stream_V_dest_V_0_payload_B.read();
    } else {
        input_stream_V_dest_V_0_data_out = input_stream_V_dest_V_0_payload_A.read();
    }
}

void maxCut::thread_input_stream_V_dest_V_0_load_A() {
    input_stream_V_dest_V_0_load_A = (input_stream_V_dest_V_0_state_cmp_full.read() & ~input_stream_V_dest_V_0_sel_wr.read());
}

void maxCut::thread_input_stream_V_dest_V_0_load_B() {
    input_stream_V_dest_V_0_load_B = (input_stream_V_dest_V_0_sel_wr.read() & input_stream_V_dest_V_0_state_cmp_full.read());
}

void maxCut::thread_input_stream_V_dest_V_0_sel() {
    input_stream_V_dest_V_0_sel = input_stream_V_dest_V_0_sel_rd.read();
}

void maxCut::thread_input_stream_V_dest_V_0_state_cmp_full() {
    input_stream_V_dest_V_0_state_cmp_full =  (sc_logic) ((!input_stream_V_dest_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_stream_V_dest_V_0_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_input_stream_V_dest_V_0_vld_in() {
    input_stream_V_dest_V_0_vld_in = input_stream_TVALID.read();
}

void maxCut::thread_input_stream_V_dest_V_0_vld_out() {
    input_stream_V_dest_V_0_vld_out = input_stream_V_dest_V_0_state.read()[0];
}

void maxCut::thread_input_stream_V_id_V_0_ack_in() {
    input_stream_V_id_V_0_ack_in = input_stream_V_id_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_id_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        input_stream_V_id_V_0_ack_out = ap_const_logic_1;
    } else {
        input_stream_V_id_V_0_ack_out = ap_const_logic_0;
    }
}

void maxCut::thread_input_stream_V_id_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_id_V_0_sel.read())) {
        input_stream_V_id_V_0_data_out = input_stream_V_id_V_0_payload_B.read();
    } else {
        input_stream_V_id_V_0_data_out = input_stream_V_id_V_0_payload_A.read();
    }
}

void maxCut::thread_input_stream_V_id_V_0_load_A() {
    input_stream_V_id_V_0_load_A = (input_stream_V_id_V_0_state_cmp_full.read() & ~input_stream_V_id_V_0_sel_wr.read());
}

void maxCut::thread_input_stream_V_id_V_0_load_B() {
    input_stream_V_id_V_0_load_B = (input_stream_V_id_V_0_sel_wr.read() & input_stream_V_id_V_0_state_cmp_full.read());
}

void maxCut::thread_input_stream_V_id_V_0_sel() {
    input_stream_V_id_V_0_sel = input_stream_V_id_V_0_sel_rd.read();
}

void maxCut::thread_input_stream_V_id_V_0_state_cmp_full() {
    input_stream_V_id_V_0_state_cmp_full =  (sc_logic) ((!input_stream_V_id_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_stream_V_id_V_0_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_input_stream_V_id_V_0_vld_in() {
    input_stream_V_id_V_0_vld_in = input_stream_TVALID.read();
}

void maxCut::thread_input_stream_V_id_V_0_vld_out() {
    input_stream_V_id_V_0_vld_out = input_stream_V_id_V_0_state.read()[0];
}

void maxCut::thread_input_stream_V_keep_V_0_ack_in() {
    input_stream_V_keep_V_0_ack_in = input_stream_V_keep_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_keep_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        input_stream_V_keep_V_0_ack_out = ap_const_logic_1;
    } else {
        input_stream_V_keep_V_0_ack_out = ap_const_logic_0;
    }
}

void maxCut::thread_input_stream_V_keep_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_keep_V_0_sel.read())) {
        input_stream_V_keep_V_0_data_out = input_stream_V_keep_V_0_payload_B.read();
    } else {
        input_stream_V_keep_V_0_data_out = input_stream_V_keep_V_0_payload_A.read();
    }
}

void maxCut::thread_input_stream_V_keep_V_0_load_A() {
    input_stream_V_keep_V_0_load_A = (input_stream_V_keep_V_0_state_cmp_full.read() & ~input_stream_V_keep_V_0_sel_wr.read());
}

void maxCut::thread_input_stream_V_keep_V_0_load_B() {
    input_stream_V_keep_V_0_load_B = (input_stream_V_keep_V_0_sel_wr.read() & input_stream_V_keep_V_0_state_cmp_full.read());
}

void maxCut::thread_input_stream_V_keep_V_0_sel() {
    input_stream_V_keep_V_0_sel = input_stream_V_keep_V_0_sel_rd.read();
}

void maxCut::thread_input_stream_V_keep_V_0_state_cmp_full() {
    input_stream_V_keep_V_0_state_cmp_full =  (sc_logic) ((!input_stream_V_keep_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_stream_V_keep_V_0_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_input_stream_V_keep_V_0_vld_in() {
    input_stream_V_keep_V_0_vld_in = input_stream_TVALID.read();
}

void maxCut::thread_input_stream_V_keep_V_0_vld_out() {
    input_stream_V_keep_V_0_vld_out = input_stream_V_keep_V_0_state.read()[0];
}

void maxCut::thread_input_stream_V_strb_V_0_ack_in() {
    input_stream_V_strb_V_0_ack_in = input_stream_V_strb_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_strb_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        input_stream_V_strb_V_0_ack_out = ap_const_logic_1;
    } else {
        input_stream_V_strb_V_0_ack_out = ap_const_logic_0;
    }
}

void maxCut::thread_input_stream_V_strb_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_strb_V_0_sel.read())) {
        input_stream_V_strb_V_0_data_out = input_stream_V_strb_V_0_payload_B.read();
    } else {
        input_stream_V_strb_V_0_data_out = input_stream_V_strb_V_0_payload_A.read();
    }
}

void maxCut::thread_input_stream_V_strb_V_0_load_A() {
    input_stream_V_strb_V_0_load_A = (input_stream_V_strb_V_0_state_cmp_full.read() & ~input_stream_V_strb_V_0_sel_wr.read());
}

void maxCut::thread_input_stream_V_strb_V_0_load_B() {
    input_stream_V_strb_V_0_load_B = (input_stream_V_strb_V_0_sel_wr.read() & input_stream_V_strb_V_0_state_cmp_full.read());
}

void maxCut::thread_input_stream_V_strb_V_0_sel() {
    input_stream_V_strb_V_0_sel = input_stream_V_strb_V_0_sel_rd.read();
}

void maxCut::thread_input_stream_V_strb_V_0_state_cmp_full() {
    input_stream_V_strb_V_0_state_cmp_full =  (sc_logic) ((!input_stream_V_strb_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_stream_V_strb_V_0_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_input_stream_V_strb_V_0_vld_in() {
    input_stream_V_strb_V_0_vld_in = input_stream_TVALID.read();
}

void maxCut::thread_input_stream_V_strb_V_0_vld_out() {
    input_stream_V_strb_V_0_vld_out = input_stream_V_strb_V_0_state.read()[0];
}

void maxCut::thread_input_stream_V_user_V_0_ack_in() {
    input_stream_V_user_V_0_ack_in = input_stream_V_user_V_0_state.read()[1];
}

void maxCut::thread_input_stream_V_user_V_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
        input_stream_V_user_V_0_ack_out = ap_const_logic_1;
    } else {
        input_stream_V_user_V_0_ack_out = ap_const_logic_0;
    }
}

void maxCut::thread_input_stream_V_user_V_0_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, input_stream_V_user_V_0_sel.read())) {
        input_stream_V_user_V_0_data_out = input_stream_V_user_V_0_payload_B.read();
    } else {
        input_stream_V_user_V_0_data_out = input_stream_V_user_V_0_payload_A.read();
    }
}

void maxCut::thread_input_stream_V_user_V_0_load_A() {
    input_stream_V_user_V_0_load_A = (input_stream_V_user_V_0_state_cmp_full.read() & ~input_stream_V_user_V_0_sel_wr.read());
}

void maxCut::thread_input_stream_V_user_V_0_load_B() {
    input_stream_V_user_V_0_load_B = (input_stream_V_user_V_0_sel_wr.read() & input_stream_V_user_V_0_state_cmp_full.read());
}

void maxCut::thread_input_stream_V_user_V_0_sel() {
    input_stream_V_user_V_0_sel = input_stream_V_user_V_0_sel_rd.read();
}

void maxCut::thread_input_stream_V_user_V_0_state_cmp_full() {
    input_stream_V_user_V_0_state_cmp_full =  (sc_logic) ((!input_stream_V_user_V_0_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(input_stream_V_user_V_0_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_input_stream_V_user_V_0_vld_in() {
    input_stream_V_user_V_0_vld_in = input_stream_TVALID.read();
}

void maxCut::thread_input_stream_V_user_V_0_vld_out() {
    input_stream_V_user_V_0_vld_out = input_stream_V_user_V_0_state.read()[0];
}

void maxCut::thread_iterate_V_fu_841_p2() {
    iterate_V_fu_841_p2 = (!p_4_reg_410.read().is_01() || !ap_const_lv18_1.is_01())? sc_lv<18>(): (sc_biguint<18>(p_4_reg_410.read()) + sc_biguint<18>(ap_const_lv18_1));
}

void maxCut::thread_j_V_1_fu_971_p2() {
    j_V_1_fu_971_p2 = (!p_6_reg_433.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(p_6_reg_433.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_j_V_fu_615_p2() {
    j_V_fu_615_p2 = (!t_V_1_reg_377.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(t_V_1_reg_377.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void maxCut::thread_localFieldVal_1_fu_1072_p2() {
    localFieldVal_1_fu_1072_p2 = (!tmp_62_fu_1065_p3.read().is_01() || !localFieldVal_reg_444.read().is_01())? sc_lv<25>(): (sc_biguint<25>(tmp_62_fu_1065_p3.read()) + sc_biguint<25>(localFieldVal_reg_444.read()));
}

void maxCut::thread_matrix_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        matrix_address0 =  (sc_lv<6>) (tmp_68_cast_fu_991_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrix_address0 =  (sc_lv<6>) (tmp_64_cast_fu_683_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        matrix_address0 =  (sc_lv<6>) (tmp_27_cast_fu_550_p1.read());
    } else {
        matrix_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void maxCut::thread_matrix_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        matrix_ce0 = ap_const_logic_1;
    } else {
        matrix_ce0 = ap_const_logic_0;
    }
}

void maxCut::thread_matrix_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        matrix_d0 = tmp_12_cast_cast_fu_687_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        matrix_d0 = ap_const_lv20_0;
    } else {
        matrix_d0 =  (sc_lv<20>) ("XXXXXXXXXXXXXXXXXXXX");
    }
}

void maxCut::thread_matrix_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        matrix_we0 = ap_const_logic_1;
    } else {
        matrix_we0 = ap_const_logic_0;
    }
}

void maxCut::thread_mul1_fu_1307_p0() {
    mul1_fu_1307_p0 =  (sc_lv<38>) (mul1_fu_1307_p00.read());
}

void maxCut::thread_mul1_fu_1307_p00() {
    mul1_fu_1307_p00 = esl_zext<76,38>(ret_V_reg_1865.read());
}

void maxCut::thread_mul1_fu_1307_p2() {
    mul1_fu_1307_p2 = (!mul1_fu_1307_p0.read().is_01() || !ap_const_lv76_4000800101.is_01())? sc_lv<76>(): sc_biguint<38>(mul1_fu_1307_p0.read()) * sc_biguint<76>(ap_const_lv76_4000800101);
}

void maxCut::thread_mul2_fu_1343_p0() {
    mul2_fu_1343_p0 =  (sc_lv<28>) (mul2_fu_1343_p00.read());
}

void maxCut::thread_mul2_fu_1343_p00() {
    mul2_fu_1343_p00 = esl_zext<57,28>(phi_mul_reg_421.read());
}

void maxCut::thread_mul2_fu_1343_p2() {
    mul2_fu_1343_p2 = (!mul2_fu_1343_p0.read().is_01() || !ap_const_lv57_10C6F7A1.is_01())? sc_lv<57>(): sc_biguint<28>(mul2_fu_1343_p0.read()) * sc_biguint<57>(ap_const_lv57_10C6F7A1);
}

void maxCut::thread_mul3_fu_1374_p0() {
    mul3_fu_1374_p0 = tmp_35_reg_1881.read();
}

void maxCut::thread_mul3_fu_1374_p2() {
    mul3_fu_1374_p2 = (!mul3_fu_1374_p0.read().is_01() || !ap_const_lv65_14F8B588F.is_01())? sc_lv<65>(): sc_bigint<32>(mul3_fu_1374_p0.read()) * sc_biguint<65>(ap_const_lv65_14F8B588F);
}

void maxCut::thread_mul4_fu_1501_p1() {
    mul4_fu_1501_p1 = reg_495.read();
}

void maxCut::thread_mul4_fu_1501_p2() {
    mul4_fu_1501_p2 = (!ap_const_lv65_10624DD30.is_01() || !mul4_fu_1501_p1.read().is_01())? sc_lv<65>(): sc_biguint<65>(ap_const_lv65_10624DD30) * sc_bigint<32>(mul4_fu_1501_p1.read());
}

void maxCut::thread_mul7_fu_1128_p0() {
    mul7_fu_1128_p0 = tmp_i2_reg_1833.read();
}

void maxCut::thread_mul7_fu_1128_p2() {
    mul7_fu_1128_p2 = (!mul7_fu_1128_p0.read().is_01() || !ap_const_lv65_10624DD30.is_01())? sc_lv<65>(): sc_bigint<32>(mul7_fu_1128_p0.read()) * sc_biguint<65>(ap_const_lv65_10624DD30);
}

void maxCut::thread_mul_fu_1016_p0() {
    mul_fu_1016_p0 = tmp_23_reg_1762.read();
}

void maxCut::thread_mul_fu_1016_p2() {
    mul_fu_1016_p2 = (!mul_fu_1016_p0.read().is_01() || !ap_const_lv65_10624DD30.is_01())? sc_lv<65>(): sc_bigint<32>(mul_fu_1016_p0.read()) * sc_biguint<65>(ap_const_lv65_10624DD30);
}

void maxCut::thread_neg_mul1_fu_1390_p2() {
    neg_mul1_fu_1390_p2 = (!ap_const_lv65_0.is_01() || !mul3_reg_1892.read().is_01())? sc_lv<65>(): (sc_biguint<65>(ap_const_lv65_0) - sc_biguint<65>(mul3_reg_1892.read()));
}

void maxCut::thread_neg_mul2_fu_1537_p2() {
    neg_mul2_fu_1537_p2 = (!ap_const_lv65_0.is_01() || !mul4_reg_1937.read().is_01())? sc_lv<65>(): (sc_biguint<65>(ap_const_lv65_0) - sc_biguint<65>(mul4_reg_1937.read()));
}

void maxCut::thread_neg_mul8_fu_1144_p2() {
    neg_mul8_fu_1144_p2 = (!ap_const_lv65_0.is_01() || !mul7_reg_1844.read().is_01())? sc_lv<65>(): (sc_biguint<65>(ap_const_lv65_0) - sc_biguint<65>(mul7_reg_1844.read()));
}

void maxCut::thread_neg_mul_fu_1032_p2() {
    neg_mul_fu_1032_p2 = (!ap_const_lv65_0.is_01() || !mul_reg_1773.read().is_01())? sc_lv<65>(): (sc_biguint<65>(ap_const_lv65_0) - sc_biguint<65>(mul_reg_1773.read()));
}

void maxCut::thread_neg_ti1_fu_1165_p2() {
    neg_ti1_fu_1165_p2 = (!ap_const_lv22_0.is_01() || !p_v2_v_fu_1159_p3.read().is_01())? sc_lv<22>(): (sc_biguint<22>(ap_const_lv22_0) - sc_biguint<22>(p_v2_v_fu_1159_p3.read()));
}

void maxCut::thread_neg_ti2_fu_1419_p2() {
    neg_ti2_fu_1419_p2 = (!ap_const_lv32_0.is_01() || !tmp_79_fu_1412_p3.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(tmp_79_fu_1412_p3.read()));
}

void maxCut::thread_neg_ti3_fu_1562_p2() {
    neg_ti3_fu_1562_p2 = (!ap_const_lv8_0.is_01() || !tmp_83_fu_1558_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_0) - sc_biguint<8>(tmp_83_fu_1558_p1.read()));
}

void maxCut::thread_neg_ti_fu_1056_p2() {
    neg_ti_fu_1056_p2 = (!ap_const_lv25_0.is_01() || !trunc_fu_1053_p1.read().is_01())? sc_lv<25>(): (sc_biguint<25>(ap_const_lv25_0) - sc_bigint<25>(trunc_fu_1053_p1.read()));
}

void maxCut::thread_or_cond_fu_1454_p2() {
    or_cond_fu_1454_p2 = (tmp_38_fu_1443_p2.read() & tmp_39_fu_1449_p2.read());
}

void maxCut::thread_output_last_V_fu_1483_p2() {
    output_last_V_fu_1483_p2 = (!t_V_2_reg_467.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(t_V_2_reg_467.read() == ap_const_lv3_5);
}

void maxCut::thread_output_stream_TDATA() {
    output_stream_TDATA = output_stream_V_data_V_1_data_out.read();
}

void maxCut::thread_output_stream_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()))) {
        output_stream_TDATA_blk_n = output_stream_V_data_V_1_state.read()[1];
    } else {
        output_stream_TDATA_blk_n = ap_const_logic_1;
    }
}

void maxCut::thread_output_stream_TDEST() {
    output_stream_TDEST = output_stream_V_dest_V_1_data_out.read();
}

void maxCut::thread_output_stream_TID() {
    output_stream_TID = output_stream_V_id_V_1_data_out.read();
}

void maxCut::thread_output_stream_TKEEP() {
    output_stream_TKEEP = output_stream_V_keep_V_1_data_out.read();
}

void maxCut::thread_output_stream_TLAST() {
    output_stream_TLAST = output_stream_V_last_V_1_data_out.read();
}

void maxCut::thread_output_stream_TSTRB() {
    output_stream_TSTRB = output_stream_V_strb_V_1_data_out.read();
}

void maxCut::thread_output_stream_TUSER() {
    output_stream_TUSER = output_stream_V_user_V_1_data_out.read();
}

void maxCut::thread_output_stream_TVALID() {
    output_stream_TVALID = output_stream_V_dest_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_data_V_1_ack_in() {
    output_stream_V_data_V_1_ack_in = output_stream_V_data_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_data_V_1_ack_out() {
    output_stream_V_data_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_data_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_data_V_1_sel.read())) {
        output_stream_V_data_V_1_data_out = output_stream_V_data_V_1_payload_B.read();
    } else {
        output_stream_V_data_V_1_data_out = output_stream_V_data_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_data_V_1_load_A() {
    output_stream_V_data_V_1_load_A = (output_stream_V_data_V_1_state_cmp_full.read() & ~output_stream_V_data_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_data_V_1_load_B() {
    output_stream_V_data_V_1_load_B = (output_stream_V_data_V_1_sel_wr.read() & output_stream_V_data_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_data_V_1_sel() {
    output_stream_V_data_V_1_sel = output_stream_V_data_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_data_V_1_state_cmp_full() {
    output_stream_V_data_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_data_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_data_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_data_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_data_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_data_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_data_V_1_vld_out() {
    output_stream_V_data_V_1_vld_out = output_stream_V_data_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_dest_V_1_ack_in() {
    output_stream_V_dest_V_1_ack_in = output_stream_V_dest_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_dest_V_1_ack_out() {
    output_stream_V_dest_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_dest_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_dest_V_1_sel.read())) {
        output_stream_V_dest_V_1_data_out = output_stream_V_dest_V_1_payload_B.read();
    } else {
        output_stream_V_dest_V_1_data_out = output_stream_V_dest_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_dest_V_1_load_A() {
    output_stream_V_dest_V_1_load_A = (output_stream_V_dest_V_1_state_cmp_full.read() & ~output_stream_V_dest_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_dest_V_1_load_B() {
    output_stream_V_dest_V_1_load_B = (output_stream_V_dest_V_1_sel_wr.read() & output_stream_V_dest_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_dest_V_1_sel() {
    output_stream_V_dest_V_1_sel = output_stream_V_dest_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_dest_V_1_state_cmp_full() {
    output_stream_V_dest_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_dest_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_dest_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_dest_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_dest_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_dest_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_dest_V_1_vld_out() {
    output_stream_V_dest_V_1_vld_out = output_stream_V_dest_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_id_V_1_ack_in() {
    output_stream_V_id_V_1_ack_in = output_stream_V_id_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_id_V_1_ack_out() {
    output_stream_V_id_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_id_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_id_V_1_sel.read())) {
        output_stream_V_id_V_1_data_out = output_stream_V_id_V_1_payload_B.read();
    } else {
        output_stream_V_id_V_1_data_out = output_stream_V_id_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_id_V_1_load_A() {
    output_stream_V_id_V_1_load_A = (output_stream_V_id_V_1_state_cmp_full.read() & ~output_stream_V_id_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_id_V_1_load_B() {
    output_stream_V_id_V_1_load_B = (output_stream_V_id_V_1_sel_wr.read() & output_stream_V_id_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_id_V_1_sel() {
    output_stream_V_id_V_1_sel = output_stream_V_id_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_id_V_1_state_cmp_full() {
    output_stream_V_id_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_id_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_id_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_id_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_id_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_id_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_id_V_1_vld_out() {
    output_stream_V_id_V_1_vld_out = output_stream_V_id_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_keep_V_1_ack_in() {
    output_stream_V_keep_V_1_ack_in = output_stream_V_keep_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_keep_V_1_ack_out() {
    output_stream_V_keep_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_keep_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_keep_V_1_sel.read())) {
        output_stream_V_keep_V_1_data_out = output_stream_V_keep_V_1_payload_B.read();
    } else {
        output_stream_V_keep_V_1_data_out = output_stream_V_keep_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_keep_V_1_load_A() {
    output_stream_V_keep_V_1_load_A = (output_stream_V_keep_V_1_state_cmp_full.read() & ~output_stream_V_keep_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_keep_V_1_load_B() {
    output_stream_V_keep_V_1_load_B = (output_stream_V_keep_V_1_sel_wr.read() & output_stream_V_keep_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_keep_V_1_sel() {
    output_stream_V_keep_V_1_sel = output_stream_V_keep_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_keep_V_1_state_cmp_full() {
    output_stream_V_keep_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_keep_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_keep_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_keep_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_keep_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_keep_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_keep_V_1_vld_out() {
    output_stream_V_keep_V_1_vld_out = output_stream_V_keep_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_last_V_1_ack_in() {
    output_stream_V_last_V_1_ack_in = output_stream_V_last_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_last_V_1_ack_out() {
    output_stream_V_last_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_last_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_last_V_1_sel.read())) {
        output_stream_V_last_V_1_data_out = output_stream_V_last_V_1_payload_B.read();
    } else {
        output_stream_V_last_V_1_data_out = output_stream_V_last_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_last_V_1_load_A() {
    output_stream_V_last_V_1_load_A = (output_stream_V_last_V_1_state_cmp_full.read() & ~output_stream_V_last_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_last_V_1_load_B() {
    output_stream_V_last_V_1_load_B = (output_stream_V_last_V_1_sel_wr.read() & output_stream_V_last_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_last_V_1_sel() {
    output_stream_V_last_V_1_sel = output_stream_V_last_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_last_V_1_state_cmp_full() {
    output_stream_V_last_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_last_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_last_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_last_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_last_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_last_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_last_V_1_vld_out() {
    output_stream_V_last_V_1_vld_out = output_stream_V_last_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_strb_V_1_ack_in() {
    output_stream_V_strb_V_1_ack_in = output_stream_V_strb_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_strb_V_1_ack_out() {
    output_stream_V_strb_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_strb_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_strb_V_1_sel.read())) {
        output_stream_V_strb_V_1_data_out = output_stream_V_strb_V_1_payload_B.read();
    } else {
        output_stream_V_strb_V_1_data_out = output_stream_V_strb_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_strb_V_1_load_A() {
    output_stream_V_strb_V_1_load_A = (output_stream_V_strb_V_1_state_cmp_full.read() & ~output_stream_V_strb_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_strb_V_1_load_B() {
    output_stream_V_strb_V_1_load_B = (output_stream_V_strb_V_1_sel_wr.read() & output_stream_V_strb_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_strb_V_1_sel() {
    output_stream_V_strb_V_1_sel = output_stream_V_strb_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_strb_V_1_state_cmp_full() {
    output_stream_V_strb_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_strb_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_strb_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_strb_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_strb_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_strb_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_strb_V_1_vld_out() {
    output_stream_V_strb_V_1_vld_out = output_stream_V_strb_V_1_state.read()[0];
}

void maxCut::thread_output_stream_V_user_V_1_ack_in() {
    output_stream_V_user_V_1_ack_in = output_stream_V_user_V_1_state.read()[1];
}

void maxCut::thread_output_stream_V_user_V_1_ack_out() {
    output_stream_V_user_V_1_ack_out = output_stream_TREADY.read();
}

void maxCut::thread_output_stream_V_user_V_1_data_out() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, output_stream_V_user_V_1_sel.read())) {
        output_stream_V_user_V_1_data_out = output_stream_V_user_V_1_payload_B.read();
    } else {
        output_stream_V_user_V_1_data_out = output_stream_V_user_V_1_payload_A.read();
    }
}

void maxCut::thread_output_stream_V_user_V_1_load_A() {
    output_stream_V_user_V_1_load_A = (output_stream_V_user_V_1_state_cmp_full.read() & ~output_stream_V_user_V_1_sel_wr.read());
}

void maxCut::thread_output_stream_V_user_V_1_load_B() {
    output_stream_V_user_V_1_load_B = (output_stream_V_user_V_1_sel_wr.read() & output_stream_V_user_V_1_state_cmp_full.read());
}

void maxCut::thread_output_stream_V_user_V_1_sel() {
    output_stream_V_user_V_1_sel = output_stream_V_user_V_1_sel_rd.read();
}

void maxCut::thread_output_stream_V_user_V_1_state_cmp_full() {
    output_stream_V_user_V_1_state_cmp_full =  (sc_logic) ((!output_stream_V_user_V_1_state.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<1>(): sc_lv<1>(output_stream_V_user_V_1_state.read() != ap_const_lv2_1))[0];
}

void maxCut::thread_output_stream_V_user_V_1_vld_in() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) && 
         esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
        output_stream_V_user_V_1_vld_in = ap_const_logic_1;
    } else {
        output_stream_V_user_V_1_vld_in = ap_const_logic_0;
    }
}

void maxCut::thread_output_stream_V_user_V_1_vld_out() {
    output_stream_V_user_V_1_vld_out = output_stream_V_user_V_1_state.read()[0];
}

void maxCut::thread_p_shl1_cast_fu_525_p1() {
    p_shl1_cast_fu_525_p1 = esl_zext<7,4>(tmp_9_fu_517_p3.read());
}

void maxCut::thread_p_shl2_cast_fu_587_p1() {
    p_shl2_cast_fu_587_p1 = esl_zext<7,6>(tmp_6_fu_579_p3.read());
}

void maxCut::thread_p_shl3_cast_fu_599_p1() {
    p_shl3_cast_fu_599_p1 = esl_zext<7,4>(tmp_7_fu_591_p3.read());
}

void maxCut::thread_p_shl4_cast_fu_939_p3() {
    p_shl4_cast_fu_939_p3 = esl_concat<4,3>(tmp_49_fu_935_p1.read(), ap_const_lv3_0);
}

void maxCut::thread_p_shl5_cast_fu_951_p3() {
    p_shl5_cast_fu_951_p3 = esl_concat<6,1>(tmp_50_fu_947_p1.read(), ap_const_lv1_0);
}

void maxCut::thread_p_shl_cast_fu_513_p1() {
    p_shl_cast_fu_513_p1 = esl_zext<7,6>(tmp_fu_505_p3.read());
}

void maxCut::thread_p_v1_v_fu_1047_p3() {
    p_v1_v_fu_1047_p3 = (!tmp_53_reg_1767.read()[0].is_01())? sc_lv<23>(): ((tmp_53_reg_1767.read()[0].to_bool())? tmp_54_fu_1037_p4.read(): tmp_55_reg_1778.read());
}

void maxCut::thread_p_v2_v_fu_1159_p3() {
    p_v2_v_fu_1159_p3 = (!tmp_63_reg_1838.read()[0].is_01())? sc_lv<22>(): ((tmp_63_reg_1838.read()[0].to_bool())? tmp_64_fu_1149_p4.read(): tmp_65_reg_1849.read());
}

void maxCut::thread_p_v_v_fu_1552_p3() {
    p_v_v_fu_1552_p3 = (!tmp_80_reg_1931.read()[0].is_01())? sc_lv<23>(): ((tmp_80_reg_1931.read()[0].to_bool())? tmp_81_fu_1542_p4.read(): tmp_82_reg_1942.read());
}

void maxCut::thread_phitmp_fu_1460_p2() {
    phitmp_fu_1460_p2 = (!phi_mul_reg_421.read().is_01() || !ap_const_lv28_3E8.is_01())? sc_lv<28>(): (sc_biguint<28>(phi_mul_reg_421.read()) + sc_biguint<28>(ap_const_lv28_3E8));
}

void maxCut::thread_r_V_1_fu_774_p3() {
    r_V_1_fu_774_p3 = esl_concat<1,15>(ret_V2_i_fu_768_p2.read(), ap_const_lv15_0);
}

void maxCut::thread_r_V_3_fu_893_p3() {
    r_V_3_fu_893_p3 = esl_concat<1,15>(ret_V2_i2_fu_887_p2.read(), ap_const_lv15_0);
}

void maxCut::thread_r_V_4_fu_1229_p3() {
    r_V_4_fu_1229_p3 = esl_concat<1,15>(ret_V2_i4_fu_1223_p2.read(), ap_const_lv15_0);
}

void maxCut::thread_ret_V2_i2_fu_887_p2() {
    ret_V2_i2_fu_887_p2 = (tmp_45_fu_881_p2.read() ^ tmp_44_fu_875_p2.read());
}

void maxCut::thread_ret_V2_i4_fu_1223_p2() {
    ret_V2_i4_fu_1223_p2 = (tmp_58_fu_1218_p2.read() ^ tmp_57_fu_1212_p2.read());
}

void maxCut::thread_ret_V2_i_fu_768_p2() {
    ret_V2_i_fu_768_p2 = (tmp_27_fu_762_p2.read() ^ tmp_26_fu_756_p2.read());
}

void maxCut::thread_ret_V_1_cast_fu_806_p1() {
    ret_V_1_cast_fu_806_p1 = esl_zext<32,29>(ret_V_1_fu_798_p3.read());
}

void maxCut::thread_ret_V_1_fu_798_p3() {
    ret_V_1_fu_798_p3 = esl_concat<13,16>(grp_fu_482_p4.read(), tmp_32_fu_792_p2.read());
}

void maxCut::thread_ret_V_4_fu_1276_p3() {
    ret_V_4_fu_1276_p3 = esl_concat<12,16>(tmp_61_fu_1267_p4.read(), tmp_60_fu_1261_p2.read());
}

void maxCut::thread_ret_V_5_cast_fu_1284_p1() {
    ret_V_5_cast_fu_1284_p1 = esl_zext<32,28>(ret_V_4_fu_1276_p3.read());
}

void maxCut::thread_ret_V_fu_1298_p0() {
    ret_V_fu_1298_p0 =  (sc_lv<28>) (ret_V_fu_1298_p00.read());
}

void maxCut::thread_ret_V_fu_1298_p00() {
    ret_V_fu_1298_p00 = esl_zext<38,28>(ret_V_4_fu_1276_p3.read());
}

void maxCut::thread_ret_V_fu_1298_p2() {
    ret_V_fu_1298_p2 = (!ret_V_fu_1298_p0.read().is_01() || !ap_const_lv38_3E8.is_01())? sc_lv<38>(): sc_biguint<28>(ret_V_fu_1298_p0.read()) * sc_biguint<38>(ap_const_lv38_3E8);
}

void maxCut::thread_tmp5_cast_fu_1183_p1() {
    tmp5_cast_fu_1183_p1 = esl_sext<32,22>(tmp5_reg_1855.read());
}

void maxCut::thread_tmp5_fu_1177_p2() {
    tmp5_fu_1177_p2 = (!tmp_66_fu_1171_p3.read().is_01() || !ap_const_lv22_3E8.is_01())? sc_lv<22>(): (sc_biguint<22>(tmp_66_fu_1171_p3.read()) + sc_biguint<22>(ap_const_lv22_3E8));
}

void maxCut::thread_tmp_10_fu_1580_p1() {
    tmp_10_fu_1580_p1 =  (sc_lv<11>) (ap_const_lv19_3E8);
}

void maxCut::thread_tmp_11_fu_653_p2() {
    tmp_11_fu_653_p2 = (!tmp_8_reg_1645.read().is_01() || !tmp_12_cast_fu_649_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_8_reg_1645.read()) + sc_biguint<7>(tmp_12_cast_fu_649_p1.read()));
}

void maxCut::thread_tmp_12_cast_cast_fu_687_p1() {
    tmp_12_cast_cast_fu_687_p1 = esl_sext<20,19>(tmp_10_reg_1658.read());
}

void maxCut::thread_tmp_12_cast_fu_649_p1() {
    tmp_12_cast_fu_649_p1 = esl_zext<7,3>(t_V_1_reg_377.read());
}

void maxCut::thread_tmp_12_fu_720_p3() {
    tmp_12_fu_720_p3 = lfsr_V.read().range(1, 1);
}

void maxCut::thread_tmp_13_fu_728_p1() {
    tmp_13_fu_728_p1 = lfsr_V.read().range(1-1, 0);
}

void maxCut::thread_tmp_14_fu_732_p3() {
    tmp_14_fu_732_p3 = lfsr_V.read().range(5, 5);
}

void maxCut::thread_tmp_15_cast_cast_fu_816_p3() {
    tmp_15_cast_cast_fu_816_p3 = (!tmp_12_fu_720_p3.read()[0].is_01())? sc_lv<32>(): ((tmp_12_fu_720_p3.read()[0].to_bool())? ap_const_lv32_3E8: ap_const_lv32_FFFFFC18);
}

void maxCut::thread_tmp_15_fu_740_p3() {
    tmp_15_fu_740_p3 = lfsr_V.read().range(2, 2);
}

void maxCut::thread_tmp_16_fu_825_p1() {
    tmp_16_fu_825_p1 = esl_zext<64,3>(p_s_reg_399.read());
}

void maxCut::thread_tmp_17_fu_835_p2() {
    tmp_17_fu_835_p2 = (!p_4_reg_410.read().is_01() || !ap_const_lv18_3D090.is_01())? sc_lv<1>(): (sc_biguint<18>(p_4_reg_410.read()) < sc_biguint<18>(ap_const_lv18_3D090));
}

void maxCut::thread_tmp_18_fu_931_p1() {
    tmp_18_fu_931_p1 = esl_zext<64,29>(grp_fu_925_p2.read());
}

void maxCut::thread_tmp_19_fu_1078_p2() {
    tmp_19_fu_1078_p2 = (!ap_const_lv25_0.is_01() || !localFieldVal_reg_444.read().is_01())? sc_lv<25>(): (sc_biguint<25>(ap_const_lv25_0) - sc_biguint<25>(localFieldVal_reg_444.read()));
}

void maxCut::thread_tmp_1_cast_fu_541_p1() {
    tmp_1_cast_fu_541_p1 = esl_zext<7,3>(invdar1_reg_355.read());
}

void maxCut::thread_tmp_1_fu_529_p2() {
    tmp_1_fu_529_p2 = (!p_shl_cast_fu_513_p1.read().is_01() || !p_shl1_cast_fu_525_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(p_shl_cast_fu_513_p1.read()) - sc_biguint<7>(p_shl1_cast_fu_525_p1.read()));
}

void maxCut::thread_tmp_20_fu_1087_p1() {
    tmp_20_fu_1087_p1 = tmp_19_reg_1794.read();
}

void maxCut::thread_tmp_20_fu_1087_p2() {
    tmp_20_fu_1087_p2 = (!reg_495.read().is_01() || !tmp_20_fu_1087_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(reg_495.read()) * sc_bigint<25>(tmp_20_fu_1087_p1.read());
}

void maxCut::thread_tmp_21_fu_1093_p2() {
    tmp_21_fu_1093_p2 = (!tmp_20_reg_1799.read().is_01() || !ap_const_lv32_3E8.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_20_reg_1799.read()) < sc_bigint<32>(ap_const_lv32_3E8));
}

void maxCut::thread_tmp_22_cast_fu_982_p1() {
    tmp_22_cast_fu_982_p1 = esl_zext<7,3>(p_6_reg_433.read());
}

void maxCut::thread_tmp_22_fu_977_p1() {
    tmp_22_fu_977_p1 = esl_zext<64,3>(p_6_reg_433.read());
}

void maxCut::thread_tmp_23_fu_999_p0() {
    tmp_23_fu_999_p0 = matrix_load_reg_1757.read();
}

void maxCut::thread_tmp_23_fu_999_p2() {
    tmp_23_fu_999_p2 = (!tmp_23_fu_999_p0.read().is_01() || !reg_495.read().is_01())? sc_lv<32>(): sc_bigint<20>(tmp_23_fu_999_p0.read()) * sc_bigint<32>(reg_495.read());
}

void maxCut::thread_tmp_24_fu_748_p3() {
    tmp_24_fu_748_p3 = lfsr_V.read().range(3, 3);
}

void maxCut::thread_tmp_26_fu_756_p2() {
    tmp_26_fu_756_p2 = (tmp_14_fu_732_p3.read() ^ tmp_13_fu_728_p1.read());
}

void maxCut::thread_tmp_27_cast_fu_550_p1() {
    tmp_27_cast_fu_550_p1 = esl_sext<64,7>(tmp_5_fu_545_p2.read());
}

void maxCut::thread_tmp_27_fu_762_p2() {
    tmp_27_fu_762_p2 = (tmp_24_fu_748_p3.read() ^ tmp_15_fu_740_p3.read());
}

void maxCut::thread_tmp_28_fu_1322_p1() {
    tmp_28_fu_1322_p1 = esl_zext<32,23>(tmp_72_fu_1313_p4.read());
}

void maxCut::thread_tmp_29_fu_1326_p2() {
    tmp_29_fu_1326_p2 = (!tmp_28_fu_1322_p1.read().is_01() || !prob_reg_456.read().is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_28_fu_1322_p1.read()) > sc_bigint<32>(prob_reg_456.read()));
}

void maxCut::thread_tmp_2_fu_555_p2() {
    tmp_2_fu_555_p2 = (!invdar1_reg_355.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(invdar1_reg_355.read() == ap_const_lv3_5);
}

void maxCut::thread_tmp_30_fu_1332_p2() {
    tmp_30_fu_1332_p2 = (!ap_const_lv32_0.is_01() || !reg_495.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_bigint<32>(reg_495.read()));
}

void maxCut::thread_tmp_31_fu_782_p4() {
    tmp_31_fu_782_p4 = lfsr_V.read().range(16, 1);
}

void maxCut::thread_tmp_32_fu_792_p2() {
    tmp_32_fu_792_p2 = (tmp_31_fu_782_p4.read() | r_V_1_fu_774_p3.read());
}

void maxCut::thread_tmp_34_fu_847_p1() {
    tmp_34_fu_847_p1 = lfsr_V.read().range(1-1, 0);
}

void maxCut::thread_tmp_35_fu_1357_p0() {
    tmp_35_fu_1357_p0 = temperature_fu_228.read();
}

void maxCut::thread_tmp_35_fu_1357_p2() {
    tmp_35_fu_1357_p2 = (!tmp_35_fu_1357_p0.read().is_01() || !ap_const_lv32_1869F.is_01())? sc_lv<32>(): sc_bigint<32>(tmp_35_fu_1357_p0.read()) * sc_biguint<32>(ap_const_lv32_1869F);
}

void maxCut::thread_tmp_36_fu_1425_p3() {
    tmp_36_fu_1425_p3 = (!tmp_74_reg_1886.read()[0].is_01())? sc_lv<32>(): ((tmp_74_reg_1886.read()[0].to_bool())? neg_ti2_fu_1419_p2.read(): tmp_78_fu_1409_p1.read());
}

void maxCut::thread_tmp_37_fu_1437_p2() {
    tmp_37_fu_1437_p2 = (!temperature_fu_228.read().is_01() || !ap_const_lv32_0.is_01())? sc_lv<1>(): sc_lv<1>(temperature_fu_228.read() == ap_const_lv32_0);
}

void maxCut::thread_tmp_38_fu_1443_p2() {
    tmp_38_fu_1443_p2 = (!temperature_fu_228.read().is_01() || !ap_const_lv32_B.is_01())? sc_lv<1>(): (sc_bigint<32>(temperature_fu_228.read()) < sc_bigint<32>(ap_const_lv32_B));
}

void maxCut::thread_tmp_39_fu_1449_p2() {
    tmp_39_fu_1449_p2 = (!tmp_20_reg_1799.read().is_01() || !ap_const_lv32_18A88.is_01())? sc_lv<1>(): (sc_bigint<32>(tmp_20_reg_1799.read()) < sc_bigint<32>(ap_const_lv32_18A88));
}

void maxCut::thread_tmp_3_fu_561_p2() {
    tmp_3_fu_561_p2 = (!invdar_reg_343.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(invdar_reg_343.read() == ap_const_lv3_5);
}

void maxCut::thread_tmp_40_fu_1478_p1() {
    tmp_40_fu_1478_p1 = esl_zext<64,3>(t_V_2_reg_467.read());
}

void maxCut::thread_tmp_41_fu_851_p3() {
    tmp_41_fu_851_p3 = lfsr_V.read().range(5, 5);
}

void maxCut::thread_tmp_42_fu_859_p3() {
    tmp_42_fu_859_p3 = lfsr_V.read().range(2, 2);
}

void maxCut::thread_tmp_43_fu_867_p3() {
    tmp_43_fu_867_p3 = lfsr_V.read().range(3, 3);
}

void maxCut::thread_tmp_44_fu_875_p2() {
    tmp_44_fu_875_p2 = (tmp_41_fu_851_p3.read() ^ tmp_34_fu_847_p1.read());
}

void maxCut::thread_tmp_44_i_fu_1186_p2() {
    tmp_44_i_fu_1186_p2 = (!x_assign_reg_1826.read().is_01() || !tmp5_cast_fu_1183_p1.read().is_01())? sc_lv<32>(): (sc_bigint<32>(x_assign_reg_1826.read()) + sc_bigint<32>(tmp5_cast_fu_1183_p1.read()));
}

void maxCut::thread_tmp_45_fu_881_p2() {
    tmp_45_fu_881_p2 = (tmp_43_fu_867_p3.read() ^ tmp_42_fu_859_p3.read());
}

void maxCut::thread_tmp_46_fu_901_p4() {
    tmp_46_fu_901_p4 = lfsr_V.read().range(16, 1);
}

void maxCut::thread_tmp_47_fu_911_p2() {
    tmp_47_fu_911_p2 = (tmp_46_fu_901_p4.read() | r_V_3_fu_893_p3.read());
}

void maxCut::thread_tmp_49_fu_935_p1() {
    tmp_49_fu_935_p1 = grp_fu_925_p2.read().range(4-1, 0);
}

void maxCut::thread_tmp_4_fu_702_p2() {
    tmp_4_fu_702_p2 = (!invdar2_reg_388.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(invdar2_reg_388.read() == ap_const_lv3_5);
}

void maxCut::thread_tmp_50_fu_947_p1() {
    tmp_50_fu_947_p1 = grp_fu_925_p2.read().range(6-1, 0);
}

void maxCut::thread_tmp_51_fu_959_p2() {
    tmp_51_fu_959_p2 = (!p_shl4_cast_fu_939_p3.read().is_01() || !p_shl5_cast_fu_951_p3.read().is_01())? sc_lv<7>(): (sc_biguint<7>(p_shl4_cast_fu_939_p3.read()) - sc_biguint<7>(p_shl5_cast_fu_951_p3.read()));
}

void maxCut::thread_tmp_52_fu_986_p2() {
    tmp_52_fu_986_p2 = (!tmp_22_cast_fu_982_p1.read().is_01() || !tmp_51_reg_1729.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_22_cast_fu_982_p1.read()) + sc_biguint<7>(tmp_51_reg_1729.read()));
}

void maxCut::thread_tmp_54_fu_1037_p4() {
    tmp_54_fu_1037_p4 = neg_mul_fu_1032_p2.read().range(64, 42);
}

void maxCut::thread_tmp_56_fu_1062_p1() {
    tmp_56_fu_1062_p1 = esl_sext<25,23>(p_v1_v_reg_1783.read());
}

void maxCut::thread_tmp_57_fu_1212_p2() {
    tmp_57_fu_1212_p2 = (tmp_68_fu_1198_p3.read() ^ tmp_67_fu_1191_p3.read());
}

void maxCut::thread_tmp_58_fu_1218_p2() {
    tmp_58_fu_1218_p2 = (tmp_69_fu_1205_p3.read() ^ tmp_43_reg_1709.read());
}

void maxCut::thread_tmp_59_fu_1253_p3() {
    tmp_59_fu_1253_p3 = esl_concat<1,15>(tmp_71_fu_1246_p3.read(), tmp_70_fu_1237_p4.read());
}

void maxCut::thread_tmp_5_fu_545_p2() {
    tmp_5_fu_545_p2 = (!tmp_1_reg_1591.read().is_01() || !tmp_1_cast_fu_541_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(tmp_1_reg_1591.read()) + sc_biguint<7>(tmp_1_cast_fu_541_p1.read()));
}

void maxCut::thread_tmp_60_fu_1261_p2() {
    tmp_60_fu_1261_p2 = (tmp_59_fu_1253_p3.read() | r_V_4_fu_1229_p3.read());
}

void maxCut::thread_tmp_61_fu_1267_p4() {
    tmp_61_fu_1267_p4 = r_V_2_reg_1700.read().range(29, 18);
}

void maxCut::thread_tmp_62_fu_1065_p3() {
    tmp_62_fu_1065_p3 = (!tmp_53_reg_1767.read()[0].is_01())? sc_lv<25>(): ((tmp_53_reg_1767.read()[0].to_bool())? neg_ti_fu_1056_p2.read(): tmp_56_fu_1062_p1.read());
}

void maxCut::thread_tmp_64_cast_fu_683_p1() {
    tmp_64_cast_fu_683_p1 = esl_sext<64,7>(tmp_11_reg_1663.read());
}

void maxCut::thread_tmp_64_fu_1149_p4() {
    tmp_64_fu_1149_p4 = neg_mul8_fu_1144_p2.read().range(64, 43);
}

void maxCut::thread_tmp_66_fu_1171_p3() {
    tmp_66_fu_1171_p3 = (!tmp_63_reg_1838.read()[0].is_01())? sc_lv<22>(): ((tmp_63_reg_1838.read()[0].to_bool())? neg_ti1_fu_1165_p2.read(): tmp_65_reg_1849.read());
}

void maxCut::thread_tmp_67_fu_1191_p3() {
    tmp_67_fu_1191_p3 = r_V_2_reg_1700.read().range(1, 1);
}

void maxCut::thread_tmp_68_cast_fu_991_p1() {
    tmp_68_cast_fu_991_p1 = esl_sext<64,7>(tmp_52_fu_986_p2.read());
}

void maxCut::thread_tmp_68_fu_1198_p3() {
    tmp_68_fu_1198_p3 = r_V_2_reg_1700.read().range(6, 6);
}

void maxCut::thread_tmp_69_fu_1205_p3() {
    tmp_69_fu_1205_p3 = r_V_2_reg_1700.read().range(4, 4);
}

void maxCut::thread_tmp_6_fu_579_p3() {
    tmp_6_fu_579_p3 = esl_concat<3,3>(t_V_reg_366.read(), ap_const_lv3_0);
}

void maxCut::thread_tmp_70_fu_1237_p4() {
    tmp_70_fu_1237_p4 = tmp_47_reg_1714.read().range(15, 1);
}

void maxCut::thread_tmp_71_fu_1246_p3() {
    tmp_71_fu_1246_p3 = r_V_2_reg_1700.read().range(17, 17);
}

void maxCut::thread_tmp_72_fu_1313_p4() {
    tmp_72_fu_1313_p4 = mul1_reg_1870.read().range(75, 53);
}

void maxCut::thread_tmp_73_fu_1349_p3() {
    tmp_73_fu_1349_p3 = mul2_fu_1343_p2.read().range(46, 46);
}

void maxCut::thread_tmp_75_fu_1395_p4() {
    tmp_75_fu_1395_p4 = neg_mul1_fu_1390_p2.read().range(64, 49);
}

void maxCut::thread_tmp_76_fu_1405_p1() {
    tmp_76_fu_1405_p1 = esl_sext<32,16>(tmp_75_fu_1395_p4.read());
}

void maxCut::thread_tmp_78_fu_1409_p1() {
    tmp_78_fu_1409_p1 = esl_sext<32,16>(tmp_77_reg_1897.read());
}

void maxCut::thread_tmp_79_fu_1412_p3() {
    tmp_79_fu_1412_p3 = (!tmp_74_reg_1886.read()[0].is_01())? sc_lv<32>(): ((tmp_74_reg_1886.read()[0].to_bool())? tmp_76_fu_1405_p1.read(): tmp_78_fu_1409_p1.read());
}

void maxCut::thread_tmp_7_fu_591_p3() {
    tmp_7_fu_591_p3 = esl_concat<3,1>(t_V_reg_366.read(), ap_const_lv1_0);
}

void maxCut::thread_tmp_80_fu_1489_p1() {
    tmp_80_fu_1489_p1 = currentSolution_q0.read();
}

void maxCut::thread_tmp_81_fu_1542_p4() {
    tmp_81_fu_1542_p4 = neg_mul2_fu_1537_p2.read().range(64, 42);
}

void maxCut::thread_tmp_83_fu_1558_p1() {
    tmp_83_fu_1558_p1 = p_v_v_fu_1552_p3.read().range(8-1, 0);
}

void maxCut::thread_tmp_84_fu_1568_p1() {
    tmp_84_fu_1568_p1 = p_v_v_fu_1552_p3.read().range(8-1, 0);
}

void maxCut::thread_tmp_8_fu_603_p2() {
    tmp_8_fu_603_p2 = (!p_shl2_cast_fu_587_p1.read().is_01() || !p_shl3_cast_fu_599_p1.read().is_01())? sc_lv<7>(): (sc_biguint<7>(p_shl2_cast_fu_587_p1.read()) - sc_biguint<7>(p_shl3_cast_fu_599_p1.read()));
}

void maxCut::thread_tmp_9_fu_517_p3() {
    tmp_9_fu_517_p3 = esl_concat<3,1>(invdar_reg_343.read(), ap_const_lv1_0);
}

void maxCut::thread_tmp_fu_505_p3() {
    tmp_fu_505_p3 = esl_concat<3,3>(invdar_reg_343.read(), ap_const_lv3_0);
}

void maxCut::thread_tmp_i2_fu_1113_p2() {
    tmp_i2_fu_1113_p2 = (!x_assign_reg_1826.read().is_01() || !x_assign_reg_1826.read().is_01())? sc_lv<32>(): sc_bigint<32>(x_assign_reg_1826.read()) * sc_bigint<32>(x_assign_reg_1826.read());
}

void maxCut::thread_tmp_s_fu_697_p1() {
    tmp_s_fu_697_p1 = esl_zext<64,3>(invdar2_reg_388.read());
}

void maxCut::thread_trunc_fu_1053_p1() {
    trunc_fu_1053_p1 = esl_sext<25,23>(p_v1_v_reg_1783.read());
}

void maxCut::thread_ap_NS_fsm() {
    if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state1))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state1;
        }
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state2))
    {
        ap_NS_fsm = ap_ST_fsm_state3;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state3))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_555_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_3_fu_561_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state4;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_2_fu_555_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_3_fu_561_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state2;
        } else {
            ap_NS_fsm = ap_ST_fsm_state3;
        }
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state4))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond1_fu_567_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state7;
        } else {
            ap_NS_fsm = ap_ST_fsm_state5;
        }
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state5))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond2_fu_609_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state4;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, exitcond2_fu_609_p2.read()) && esl_seteq<1,1,1>(ap_const_logic_0, input_stream_V_data_V_0_vld_out.read())))) {
            ap_NS_fsm = ap_ST_fsm_state6;
        } else {
            ap_NS_fsm = ap_ST_fsm_state5;
        }
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state6))
    {
        ap_NS_fsm = ap_ST_fsm_state5;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state7))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_4_fu_702_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state8;
        } else {
            ap_NS_fsm = ap_ST_fsm_state7;
        }
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state8))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond3_fu_708_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state9;
        } else {
            ap_NS_fsm = ap_ST_fsm_state8;
        }
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state9))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_fu_835_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state130;
        } else {
            ap_NS_fsm = ap_ST_fsm_state10;
        }
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state10))
    {
        ap_NS_fsm = ap_ST_fsm_state11;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state11))
    {
        ap_NS_fsm = ap_ST_fsm_state12;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state12))
    {
        ap_NS_fsm = ap_ST_fsm_state13;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state13))
    {
        ap_NS_fsm = ap_ST_fsm_state14;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state14))
    {
        ap_NS_fsm = ap_ST_fsm_state15;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state15))
    {
        ap_NS_fsm = ap_ST_fsm_state16;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state16))
    {
        ap_NS_fsm = ap_ST_fsm_state17;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state17))
    {
        ap_NS_fsm = ap_ST_fsm_state18;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state18))
    {
        ap_NS_fsm = ap_ST_fsm_state19;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state19))
    {
        ap_NS_fsm = ap_ST_fsm_state20;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state20))
    {
        ap_NS_fsm = ap_ST_fsm_state21;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state21))
    {
        ap_NS_fsm = ap_ST_fsm_state22;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state22))
    {
        ap_NS_fsm = ap_ST_fsm_state23;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state23))
    {
        ap_NS_fsm = ap_ST_fsm_state24;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state24))
    {
        ap_NS_fsm = ap_ST_fsm_state25;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state25))
    {
        ap_NS_fsm = ap_ST_fsm_state26;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state26))
    {
        ap_NS_fsm = ap_ST_fsm_state27;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state27))
    {
        ap_NS_fsm = ap_ST_fsm_state28;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state28))
    {
        ap_NS_fsm = ap_ST_fsm_state29;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state29))
    {
        ap_NS_fsm = ap_ST_fsm_state30;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state30))
    {
        ap_NS_fsm = ap_ST_fsm_state31;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state31))
    {
        ap_NS_fsm = ap_ST_fsm_state32;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state32))
    {
        ap_NS_fsm = ap_ST_fsm_state33;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state33))
    {
        ap_NS_fsm = ap_ST_fsm_state34;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state34))
    {
        ap_NS_fsm = ap_ST_fsm_state35;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state35))
    {
        ap_NS_fsm = ap_ST_fsm_state36;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state36))
    {
        ap_NS_fsm = ap_ST_fsm_state37;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state37))
    {
        ap_NS_fsm = ap_ST_fsm_state38;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state38))
    {
        ap_NS_fsm = ap_ST_fsm_state39;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state39))
    {
        ap_NS_fsm = ap_ST_fsm_state40;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state40))
    {
        ap_NS_fsm = ap_ST_fsm_state41;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state41))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state42))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond8_fu_965_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state48;
        } else {
            ap_NS_fsm = ap_ST_fsm_state43;
        }
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state43))
    {
        ap_NS_fsm = ap_ST_fsm_state44;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state44))
    {
        ap_NS_fsm = ap_ST_fsm_state45;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state45))
    {
        ap_NS_fsm = ap_ST_fsm_state46;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state46))
    {
        ap_NS_fsm = ap_ST_fsm_state47;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state47))
    {
        ap_NS_fsm = ap_ST_fsm_state42;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state48))
    {
        ap_NS_fsm = ap_ST_fsm_state49;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state49))
    {
        ap_NS_fsm = ap_ST_fsm_state50;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state50))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state50.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_21_fu_1093_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state125;
        } else {
            ap_NS_fsm = ap_ST_fsm_state51;
        }
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state51))
    {
        ap_NS_fsm = ap_ST_fsm_state52;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state52))
    {
        ap_NS_fsm = ap_ST_fsm_state53;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state53))
    {
        ap_NS_fsm = ap_ST_fsm_state54;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state54))
    {
        ap_NS_fsm = ap_ST_fsm_state55;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state55))
    {
        ap_NS_fsm = ap_ST_fsm_state56;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state56))
    {
        ap_NS_fsm = ap_ST_fsm_state57;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state57))
    {
        ap_NS_fsm = ap_ST_fsm_state58;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state58))
    {
        ap_NS_fsm = ap_ST_fsm_state59;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state59))
    {
        ap_NS_fsm = ap_ST_fsm_state60;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state60))
    {
        ap_NS_fsm = ap_ST_fsm_state61;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state61))
    {
        ap_NS_fsm = ap_ST_fsm_state62;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state62))
    {
        ap_NS_fsm = ap_ST_fsm_state63;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state63))
    {
        ap_NS_fsm = ap_ST_fsm_state64;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state64))
    {
        ap_NS_fsm = ap_ST_fsm_state65;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state65))
    {
        ap_NS_fsm = ap_ST_fsm_state66;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state66))
    {
        ap_NS_fsm = ap_ST_fsm_state67;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state67))
    {
        ap_NS_fsm = ap_ST_fsm_state68;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state68))
    {
        ap_NS_fsm = ap_ST_fsm_state69;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state69))
    {
        ap_NS_fsm = ap_ST_fsm_state70;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state70))
    {
        ap_NS_fsm = ap_ST_fsm_state71;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state71))
    {
        ap_NS_fsm = ap_ST_fsm_state72;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state72))
    {
        ap_NS_fsm = ap_ST_fsm_state73;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state73))
    {
        ap_NS_fsm = ap_ST_fsm_state74;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state74))
    {
        ap_NS_fsm = ap_ST_fsm_state75;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state75))
    {
        ap_NS_fsm = ap_ST_fsm_state76;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state76))
    {
        ap_NS_fsm = ap_ST_fsm_state77;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state77))
    {
        ap_NS_fsm = ap_ST_fsm_state78;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state78))
    {
        ap_NS_fsm = ap_ST_fsm_state79;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state79))
    {
        ap_NS_fsm = ap_ST_fsm_state80;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state80))
    {
        ap_NS_fsm = ap_ST_fsm_state81;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state81))
    {
        ap_NS_fsm = ap_ST_fsm_state82;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state82))
    {
        ap_NS_fsm = ap_ST_fsm_state83;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state83))
    {
        ap_NS_fsm = ap_ST_fsm_state84;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state84))
    {
        ap_NS_fsm = ap_ST_fsm_state85;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state85))
    {
        ap_NS_fsm = ap_ST_fsm_state86;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state86))
    {
        ap_NS_fsm = ap_ST_fsm_state87;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state87))
    {
        ap_NS_fsm = ap_ST_fsm_state88;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state88))
    {
        ap_NS_fsm = ap_ST_fsm_state89;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state89))
    {
        ap_NS_fsm = ap_ST_fsm_state90;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state90))
    {
        ap_NS_fsm = ap_ST_fsm_state91;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state91))
    {
        ap_NS_fsm = ap_ST_fsm_state92;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state92))
    {
        ap_NS_fsm = ap_ST_fsm_state93;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state93))
    {
        ap_NS_fsm = ap_ST_fsm_state94;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state94))
    {
        ap_NS_fsm = ap_ST_fsm_state95;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state95))
    {
        ap_NS_fsm = ap_ST_fsm_state96;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state96))
    {
        ap_NS_fsm = ap_ST_fsm_state97;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state97))
    {
        ap_NS_fsm = ap_ST_fsm_state98;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state98))
    {
        ap_NS_fsm = ap_ST_fsm_state99;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state99))
    {
        ap_NS_fsm = ap_ST_fsm_state100;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state100))
    {
        ap_NS_fsm = ap_ST_fsm_state101;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state101))
    {
        ap_NS_fsm = ap_ST_fsm_state102;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state102))
    {
        ap_NS_fsm = ap_ST_fsm_state103;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state103))
    {
        ap_NS_fsm = ap_ST_fsm_state104;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state104))
    {
        ap_NS_fsm = ap_ST_fsm_state105;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state105))
    {
        ap_NS_fsm = ap_ST_fsm_state106;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state106))
    {
        ap_NS_fsm = ap_ST_fsm_state107;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state107))
    {
        ap_NS_fsm = ap_ST_fsm_state108;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state108))
    {
        ap_NS_fsm = ap_ST_fsm_state109;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state109))
    {
        ap_NS_fsm = ap_ST_fsm_state110;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state110))
    {
        ap_NS_fsm = ap_ST_fsm_state111;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state111))
    {
        ap_NS_fsm = ap_ST_fsm_state112;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state112))
    {
        ap_NS_fsm = ap_ST_fsm_state113;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state113))
    {
        ap_NS_fsm = ap_ST_fsm_state114;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state114))
    {
        ap_NS_fsm = ap_ST_fsm_state115;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state115))
    {
        ap_NS_fsm = ap_ST_fsm_state116;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state116))
    {
        ap_NS_fsm = ap_ST_fsm_state117;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state117))
    {
        ap_NS_fsm = ap_ST_fsm_state118;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state118))
    {
        ap_NS_fsm = ap_ST_fsm_state119;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state119))
    {
        ap_NS_fsm = ap_ST_fsm_state120;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state120))
    {
        ap_NS_fsm = ap_ST_fsm_state121;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state121))
    {
        ap_NS_fsm = ap_ST_fsm_state122;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state122))
    {
        ap_NS_fsm = ap_ST_fsm_state123;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state123))
    {
        ap_NS_fsm = ap_ST_fsm_state124;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state124))
    {
        ap_NS_fsm = ap_ST_fsm_state125;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state125))
    {
        ap_NS_fsm = ap_ST_fsm_state126;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state126))
    {
        ap_NS_fsm = ap_ST_fsm_state127;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state127))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state127.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_73_fu_1349_p3.read()))) {
            ap_NS_fsm = ap_ST_fsm_state130;
        } else {
            ap_NS_fsm = ap_ST_fsm_state128;
        }
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state128))
    {
        ap_NS_fsm = ap_ST_fsm_state129;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state129))
    {
        ap_NS_fsm = ap_ST_fsm_state130;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state130))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state130.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, or_cond_fu_1454_p2.read()) || 
   esl_seteq<1,1,1>(ap_const_lv1_1, tmp_37_fu_1437_p2.read())) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, tmp_17_reg_1691.read())))) {
            ap_NS_fsm = ap_ST_fsm_state131;
        } else {
            ap_NS_fsm = ap_ST_fsm_state9;
        }
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state131))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_state.read()[0]) && esl_seteq<1,1,1>(ap_const_lv1_1, exitcond_fu_1466_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state1;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state131.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_data_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_keep_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_strb_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_user_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_last_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_id_V_1_ack_in.read()) || esl_seteq<1,1,1>(ap_const_logic_0, output_stream_V_dest_V_1_ack_in.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, exitcond_fu_1466_p2.read()))) {
            ap_NS_fsm = ap_ST_fsm_state132;
        } else {
            ap_NS_fsm = ap_ST_fsm_state131;
        }
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state132))
    {
        ap_NS_fsm = ap_ST_fsm_state133;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state133))
    {
        ap_NS_fsm = ap_ST_fsm_state134;
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state134))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state134.read()) && esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state135;
        } else {
            ap_NS_fsm = ap_ST_fsm_state134;
        }
    }
    else if (esl_seteq<1,135,135>(ap_CS_fsm.read(), ap_ST_fsm_state135))
    {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state135.read()) && esl_seteq<1,1,1>(output_stream_V_data_V_1_ack_in.read(), ap_const_logic_1))) {
            ap_NS_fsm = ap_ST_fsm_state131;
        } else {
            ap_NS_fsm = ap_ST_fsm_state135;
        }
    }
    else
    {
        ap_NS_fsm =  (sc_lv<135>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}
void maxCut::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TDATA\" :  \"" << input_stream_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TVALID\" :  \"" << input_stream_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"input_stream_TREADY\" :  \"" << input_stream_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TKEEP\" :  \"" << input_stream_TKEEP.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TSTRB\" :  \"" << input_stream_TSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TUSER\" :  \"" << input_stream_TUSER.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TLAST\" :  \"" << input_stream_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TID\" :  \"" << input_stream_TID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"input_stream_TDEST\" :  \"" << input_stream_TDEST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TDATA\" :  \"" << output_stream_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TVALID\" :  \"" << output_stream_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"output_stream_TREADY\" :  \"" << output_stream_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TKEEP\" :  \"" << output_stream_TKEEP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TSTRB\" :  \"" << output_stream_TSTRB.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TUSER\" :  \"" << output_stream_TUSER.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TLAST\" :  \"" << output_stream_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TID\" :  \"" << output_stream_TID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"output_stream_TDEST\" :  \"" << output_stream_TDEST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"interrupt\" :  \"" << interrupt.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

